13:21:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:21:38 clsMysql - Parameter: i-
13:21:38 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte
13:21:38 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM kategorie
13:21:38 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE())
13:21:38 clsMysql - Parameter: i-
13:21:38 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 1 DAY))
13:21:38 clsMysql - Parameter: i-
13:21:38 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 2 DAY))
13:21:38 clsMysql - Parameter: i-
13:21:38 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM fortschritt WHERE benutzer_id = ? AND YEAR(idate) = YEAR(CURDATE())
13:21:38 clsMysql - Parameter: i-
13:21:38 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 1
13:21:38 clsMysql - Parameter: i-
13:21:38 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 0
13:21:38 clsMysql - Parameter: i-
13:21:38 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte where todo = 1
13:21:38 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM kategorie inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
13:21:38 clsMysql - Parameter: i-
13:21:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:21:38 clsMysql - Parameter: i-
13:21:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:21:38 clsMysql - Parameter: i-
13:21:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:21:38 clsMysql - Parameter: i-
13:21:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:21:38 clsMysql - Parameter: i-
13:21:42 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:21:42 clsMysql - Parameter: i-
13:21:42 clsMysql - Debug - Statement: SELECT id, name FROM benutzer order by name
13:21:42 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:21:42 clsMysql - Parameter: i-
13:21:42 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:21:42 clsMysql - Parameter: i-
13:21:42 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:21:42 clsMysql - Parameter: i-
13:21:42 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:21:42 clsMysql - Parameter: i-
13:21:44 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:21:44 clsMysql - Parameter: i-
13:21:44 clsMysql - Debug - Statement: SELECT count(name) as anzahl, id FROM benutzer WHERE id = ?
13:21:44 clsMysql - Parameter: i-1
13:21:44 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:21:44 clsMysql - Parameter: i-1
13:21:44 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte
13:21:44 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM kategorie
13:21:44 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE())
13:21:44 clsMysql - Parameter: i-1
13:21:44 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 1 DAY))
13:21:44 clsMysql - Parameter: i-1
13:21:44 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 2 DAY))
13:21:44 clsMysql - Parameter: i-1
13:21:44 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM fortschritt WHERE benutzer_id = ? AND YEAR(idate) = YEAR(CURDATE())
13:21:44 clsMysql - Parameter: i-1
13:21:44 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 1
13:21:44 clsMysql - Parameter: i-1
13:21:44 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 0
13:21:44 clsMysql - Parameter: i-1
13:21:44 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte where todo = 1
13:21:44 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM kategorie inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
13:21:44 clsMysql - Parameter: i-1
13:21:44 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:21:44 clsMysql - Parameter: i-
13:21:44 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:21:44 clsMysql - Parameter: i-
13:21:44 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:21:44 clsMysql - Parameter: i-
13:21:44 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:21:44 clsMysql - Parameter: i-
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:21:46 clsMysql - Parameter: i-1
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id IN (-1, 0)
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-1
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-1
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-9
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-9
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-4
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-4
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-5
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-5
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-6
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-6
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-7
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-7
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-8
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-8
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-10
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-10
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-11
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-11
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-12
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-12
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-13
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-13
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-14
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-14
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-15
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-15
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-16
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-16
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-17
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-17
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-18
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-18
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-19
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-19
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-20
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-20
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-21
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-21
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-22
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-22
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-23
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-23
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-26
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-26
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-27
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-27
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-28
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-28
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-29
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-29
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-30
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-30
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-31
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-31
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-32
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-32
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-25
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-25
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-24
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-24
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-2
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-2
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-3
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-3
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-35
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-35
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-34
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-34
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-36
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-36
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-37
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-37
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-38
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-38
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-39
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-39
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-40
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-40
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-41
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-41
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-42
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-42
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-43
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-43
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-44
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-44
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-45
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-45
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-46
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-46
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-47
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-47
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-48
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-48
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-49
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-49
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-50
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-50
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-52
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-52
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:21:46 clsMysql - Parameter: i-51
13:21:46 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:21:46 clsMysql - Parameter: i-51
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:21:46 clsMysql - Parameter: i-
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:21:46 clsMysql - Parameter: i-
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:21:46 clsMysql - Parameter: i-
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:21:46 clsMysql - Parameter: i-
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:21:46 clsMysql - Parameter: i-
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:21:46 clsMysql - Parameter: i-
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:21:46 clsMysql - Parameter: i-
13:21:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:21:46 clsMysql - Parameter: i-
13:21:51 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:21:51 clsMysql - Parameter: i-1
13:21:51 clsMysql - Debug - Statement: SELECT name FROM kategorie WHERE id = ?
13:21:51 clsMysql - Parameter: i-52
13:21:51 clsMysql - Debug - Statement: SELECT id, frage, hinweis, antwort, todo FROM karte WHERE kategorie_id = ? ORDER BY id asc
13:21:51 clsMysql - Parameter: i-52
13:24:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:24:05 clsMysql - Parameter: i-1
13:24:05 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
13:24:05 clsMysql - Parameter: isssi-52-Implementiere den Heap Sort in PHP--//$list = zu sortierende Liste
function heapify(&$list, $parent, $length){
  $lchild = $parent * 2   1;
  $rchild = $lchild   1;

  if ($rchild < $length && $list[$rchild] > $list[$lchild]){
    $tchild = $rchild;
  } elseif ($lchild < $length) {
    $tchild = $lchild;
  } else {
    $tchild = -1;
  }

  if ($tchild > -1 && $list[$parent] < $list[$tchild]){
    $val = $list[$parent];
    $list[$parent] = $list[$tchild];
    $list[$tchild] = $val;

    heapify($list, $tchild, $length);
  }
}

function heapsort(&$list){
  for ($pos = (int)(count($list)/2); $pos > 0; $pos--){
    heapify($list, $pos-1, count($list));
  }

  for ($i = count($list)-1; $i > 0; $i--){
    $val = $list[0];
    $list[0] = $list[$i];
    $list[$i] = $val;
    heapify($list, 0, $i);
  }
}

heapsort($list);-0
13:38:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:38:05 clsMysql - Parameter: i-1
13:38:05 clsMysql - Debug - Statement: SELECT name FROM kategorie WHERE id = ?
13:38:05 clsMysql - Parameter: i-50
13:38:05 clsMysql - Debug - Statement: SELECT id, frage, hinweis, antwort, todo FROM karte WHERE kategorie_id = ? ORDER BY id asc
13:38:05 clsMysql - Parameter: i-50
13:40:55 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:40:55 clsMysql - Parameter: i-1
13:40:55 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
13:40:55 clsMysql - Parameter: isssi-50-Wie funktioniert Selection Sort / Min Sort / Max Sort--Sei S der sortierte Teil des Arrays (vorne im Array) und U der unsortierte Teil (dahinter). Am Anfang ist S noch leer, U entspricht dem ganzen (restlichen) Array. Das Sortieren durch Auswählen läuft nun folgendermaßen ab:

Suche das kleinste Element in U und vertausche es mit dem ersten Element von U (= das erste Element nach S).

Danach ist das Array bis zu dieser Position sortiert. Das kleinste Element wird in S verschoben (indem S einfach als ein Element länger betrachtet wird, und U nun ein Element später beginnt). S ist um ein Element gewachsen, U um ein Element kürzer geworden. Anschließend wird das Verfahren so lange wiederholt, bis das gesamte Array abgearbeitet worden ist; S umfasst am Ende das gesamte Array, aufsteigend sortiert, U ist leer.-0
13:43:37 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:43:37 clsMysql - Parameter: i-1
13:43:37 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
13:43:37 clsMysql - Parameter: isssi-50-Welche Laufzeit hat Selection Sort / Min Sort / Max Sort?--Worst Case: O(n²)
Best Case: n * (n - 1) / 2-0
13:44:17 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:44:17 clsMysql - Parameter: i-1
13:44:17 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
13:44:17 clsMysql - Parameter: isssi-50-Welche Platzkomplexität hat Selection Sort / Min Sort / Max Sort?-in-place oder out-of-place-in-place-0
13:44:56 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:44:56 clsMysql - Parameter: i-1
13:44:56 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
13:44:56 clsMysql - Parameter: isssi-50-Welche Stabilität hat Selection Sort / Min Sort / Max Sort?-stabil oder instabil-instabil-0
13:59:32 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:59:32 clsMysql - Parameter: i-1
13:59:32 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
13:59:32 clsMysql - Parameter: isssi-50-Wie funktioniert Binary Tree Sort?--Bei diesem Algorithmus werden alle zu sortierenden Elemente nacheinander in einen binären Suchbaum eingefügt. Anschließend wird dieser Baum in-order durchlaufen, wobei alle Elemente in sortierter Reihenfolge angetroffen werden.

In seiner ganz elementaren Form ist der Algorithmus nicht stabil. Wird jedoch statt der üblichsten Suchfunktion Find eine Variante genommen, die auch bei vorhandenem Schlüssel entweder rechts- oder linksseitig immer bis zu den Blättern hinab sucht, wird der Sortieralgorithmus stabil. Dies kann mittels einer Vergleichsfunktion geschehen, die bei Gleichheit statt dem Rückgabewert 0 immer nur den Wert  1 oder immer nur den Wert −1 zurückgibt (bei gleicher Suchfunktion) resp. einer angepassten Suchfunktion, wie z. B. FindDupGE.-0
14:04:44 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:04:44 clsMysql - Parameter: i-1
14:04:44 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
14:04:44 clsMysql - Parameter: isssi-50-Welche Laufzeit hat Binary Tree Sort?--Worst Case bei unbalanciertem Suchbaum: O(n²)
Worst Case bei balanciertem Suchbaum: O(n * log(n))
Durchschnitt: O(n * log(n))
-0
14:05:28 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:05:28 clsMysql - Parameter: i-1
14:05:28 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
14:05:28 clsMysql - Parameter: isssi-50-Welche Platzkomplexität hat Binary Tree Sort?-in-place oder out-of-place-out-of-place-0
14:06:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:06:02 clsMysql - Parameter: i-1
14:06:02 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
14:06:02 clsMysql - Parameter: isssi-50-Welche Stabilität hat Binary Tree Sort?-stabil oder instabil-instabil-0
14:12:37 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:12:37 clsMysql - Parameter: i-1
14:12:37 clsMysql - Debug - Statement: UPDATE karte SET frage = ?, hinweis = ?, antwort = ?, todo = ? WHERE id = ?
14:12:37 clsMysql - Parameter: sssii-Welche Laufzeit hat Heap Sort?--O(n * log(n))-0-1758
14:21:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:21:02 clsMysql - Parameter: i-1
14:21:02 clsMysql - Debug - Statement: SELECT DISTINCT id, name FROM benutzerset where benutzer_id = ? ORDER BY name
14:21:02 clsMysql - Parameter: i-1
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where parent_id = -1 GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-2
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-35
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-34
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-36
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-37
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-38
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-39
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-40
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-41
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-43
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-44
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-45
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-46
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-42
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-47
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-3
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-48
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-49
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-50
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-52
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-51
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-1
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-20
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-31
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-32
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-23
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-27
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-28
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-29
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-21
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-22
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-26
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-30
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-10
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-13
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-16
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-14
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-17
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-18
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-11
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-12
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-15
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-19
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-9
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-4
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-5
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-6
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-7
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-8
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-25
14:21:02 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
14:21:02 clsMysql - Parameter: i-24
14:21:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:21:02 clsMysql - Parameter: i-
14:21:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:21:02 clsMysql - Parameter: i-
14:21:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:21:02 clsMysql - Parameter: i-
14:21:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:21:02 clsMysql - Parameter: i-
14:21:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:21:02 clsMysql - Parameter: i-
14:21:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:21:13 clsMysql - Parameter: i-1
14:21:13 clsMysql - Debug - Statement: DELETE FROM benutzer2kategorie where benutzer_id = ?
14:21:13 clsMysql - Parameter: i-1
14:21:13 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
14:21:13 clsMysql - Parameter: ii-1-31
14:21:13 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
14:21:13 clsMysql - Parameter: ii-1-32
14:21:13 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
14:21:13 clsMysql - Parameter: ii-1-23
14:21:13 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
14:21:13 clsMysql - Parameter: ii-1-27
14:21:13 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
14:21:13 clsMysql - Parameter: ii-1-28
14:21:13 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
14:21:13 clsMysql - Parameter: ii-1-29
14:21:13 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
14:21:13 clsMysql - Parameter: ii-1-21
14:21:13 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
14:21:13 clsMysql - Parameter: ii-1-22
14:21:13 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
14:21:13 clsMysql - Parameter: ii-1-26
14:21:13 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
14:21:13 clsMysql - Parameter: ii-1-30
14:21:13 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
14:21:13 clsMysql - Parameter: ii-1-13
14:21:13 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
14:21:13 clsMysql - Parameter: ii-1-16
14:21:13 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
14:21:13 clsMysql - Parameter: ii-1-14
14:21:13 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
14:21:13 clsMysql - Parameter: ii-1-17
14:21:13 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
14:21:13 clsMysql - Parameter: ii-1-18
14:21:13 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
14:21:13 clsMysql - Parameter: ii-1-11
14:21:13 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
14:21:13 clsMysql - Parameter: ii-1-12
14:21:13 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
14:21:13 clsMysql - Parameter: ii-1-15
14:21:13 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
14:21:13 clsMysql - Parameter: ii-1-19
14:21:13 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
14:21:13 clsMysql - Parameter: ii-1-4
14:21:13 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
14:21:13 clsMysql - Parameter: ii-1-5
14:21:13 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
14:21:13 clsMysql - Parameter: ii-1-6
14:21:13 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
14:21:13 clsMysql - Parameter: ii-1-7
14:21:13 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
14:21:13 clsMysql - Parameter: ii-1-8
14:21:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:21:13 clsMysql - Parameter: i-1
14:21:13 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
14:21:13 clsMysql - Parameter: ii-1-1
14:21:13 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:21:13 clsMysql - Parameter: i-31
14:21:13 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:21:13 clsMysql - Parameter: i-20
14:21:13 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:21:13 clsMysql - Parameter: i-1
14:21:13 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:21:13 clsMysql - Parameter: i--1
14:21:13 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
14:21:13 clsMysql - Parameter: ii-1-1
14:21:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:21:14 clsMysql - Parameter: i-
14:21:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:21:14 clsMysql - Parameter: i-
14:21:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:21:14 clsMysql - Parameter: i-
14:21:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:21:14 clsMysql - Parameter: i-
14:21:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:21:14 clsMysql - Parameter: i-
14:21:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:21:43 clsMysql - Parameter: i-1
14:21:43 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
14:21:43 clsMysql - Parameter: i-566
14:22:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:02 clsMysql - Parameter: i-1
14:22:02 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 1, 0) ON DUPLICATE KEY UPDATE fortschritt = IF(fortschritt <= 2, 1, fortschritt - 1), datum = NOW(), gewusst = 0
14:22:02 clsMysql - Parameter: ii-1-566
14:22:02 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 0)
14:22:02 clsMysql - Parameter: ii-1-566
14:22:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:02 clsMysql - Parameter: i-1
14:22:02 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
14:22:02 clsMysql - Parameter: ii-1-1
14:22:02 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:22:02 clsMysql - Parameter: i-4
14:22:02 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:22:02 clsMysql - Parameter: i-9
14:22:02 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:22:02 clsMysql - Parameter: i-1
14:22:02 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:22:02 clsMysql - Parameter: i--1
14:22:02 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
14:22:02 clsMysql - Parameter: ii-1-1
14:22:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:02 clsMysql - Parameter: i-
14:22:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:02 clsMysql - Parameter: i-
14:22:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:02 clsMysql - Parameter: i-
14:22:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:02 clsMysql - Parameter: i-
14:22:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:02 clsMysql - Parameter: i-
14:22:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:13 clsMysql - Parameter: i-1
14:22:13 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
14:22:13 clsMysql - Parameter: i-28
14:22:16 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:16 clsMysql - Parameter: i-1
14:22:16 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
14:22:16 clsMysql - Parameter: ii-1-28
14:22:16 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
14:22:16 clsMysql - Parameter: ii-1-28
14:22:16 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:16 clsMysql - Parameter: i-1
14:22:16 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
14:22:16 clsMysql - Parameter: ii-1-1
14:22:16 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:22:16 clsMysql - Parameter: i-8
14:22:16 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:22:16 clsMysql - Parameter: i-9
14:22:16 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:22:16 clsMysql - Parameter: i-1
14:22:16 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:22:16 clsMysql - Parameter: i--1
14:22:16 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
14:22:16 clsMysql - Parameter: ii-1-1
14:22:16 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:16 clsMysql - Parameter: i-
14:22:16 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:16 clsMysql - Parameter: i-
14:22:16 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:16 clsMysql - Parameter: i-
14:22:16 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:16 clsMysql - Parameter: i-
14:22:16 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:16 clsMysql - Parameter: i-
14:22:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:26 clsMysql - Parameter: i-1
14:22:26 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
14:22:26 clsMysql - Parameter: i-196
14:22:28 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:28 clsMysql - Parameter: i-1
14:22:28 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
14:22:28 clsMysql - Parameter: ii-1-196
14:22:28 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
14:22:28 clsMysql - Parameter: ii-1-196
14:22:28 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:28 clsMysql - Parameter: i-1
14:22:28 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
14:22:28 clsMysql - Parameter: ii-1-1
14:22:28 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:22:28 clsMysql - Parameter: i-12
14:22:28 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:22:28 clsMysql - Parameter: i-10
14:22:28 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:22:28 clsMysql - Parameter: i-1
14:22:28 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:22:28 clsMysql - Parameter: i--1
14:22:28 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
14:22:28 clsMysql - Parameter: ii-1-1
14:22:28 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:28 clsMysql - Parameter: i-
14:22:28 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:28 clsMysql - Parameter: i-
14:22:28 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:28 clsMysql - Parameter: i-
14:22:28 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:28 clsMysql - Parameter: i-
14:22:28 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:28 clsMysql - Parameter: i-
14:22:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:34 clsMysql - Parameter: i-1
14:22:34 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
14:22:34 clsMysql - Parameter: i-233
14:22:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:45 clsMysql - Parameter: i-1
14:22:45 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
14:22:45 clsMysql - Parameter: ii-1-233
14:22:45 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
14:22:45 clsMysql - Parameter: ii-1-233
14:22:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:45 clsMysql - Parameter: i-1
14:22:45 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
14:22:45 clsMysql - Parameter: ii-1-1
14:22:45 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:22:45 clsMysql - Parameter: i-19
14:22:45 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:22:45 clsMysql - Parameter: i-10
14:22:45 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:22:45 clsMysql - Parameter: i-1
14:22:45 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:22:45 clsMysql - Parameter: i--1
14:22:45 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
14:22:45 clsMysql - Parameter: ii-1-1
14:22:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:45 clsMysql - Parameter: i-
14:22:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:45 clsMysql - Parameter: i-
14:22:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:45 clsMysql - Parameter: i-
14:22:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:45 clsMysql - Parameter: i-
14:22:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:45 clsMysql - Parameter: i-
14:22:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:47 clsMysql - Parameter: i-1
14:22:47 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
14:22:47 clsMysql - Parameter: i-400
14:22:54 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:54 clsMysql - Parameter: i-1
14:22:54 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
14:22:54 clsMysql - Parameter: ii-1-400
14:22:54 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
14:22:54 clsMysql - Parameter: ii-1-400
14:22:54 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:54 clsMysql - Parameter: i-1
14:22:54 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
14:22:54 clsMysql - Parameter: ii-1-1
14:22:54 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:22:54 clsMysql - Parameter: i-19
14:22:54 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:22:54 clsMysql - Parameter: i-10
14:22:54 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:22:54 clsMysql - Parameter: i-1
14:22:54 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:22:54 clsMysql - Parameter: i--1
14:22:54 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
14:22:54 clsMysql - Parameter: ii-1-1
14:22:54 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:54 clsMysql - Parameter: i-
14:22:54 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:54 clsMysql - Parameter: i-
14:22:54 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:54 clsMysql - Parameter: i-
14:22:54 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:54 clsMysql - Parameter: i-
14:22:54 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:54 clsMysql - Parameter: i-
14:23:21 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:23:21 clsMysql - Parameter: i-1
14:23:21 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
14:23:21 clsMysql - Parameter: i-401
14:24:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:24:34 clsMysql - Parameter: i-1
14:24:34 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
14:24:34 clsMysql - Parameter: ii-1-401
14:24:34 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
14:24:34 clsMysql - Parameter: ii-1-401
14:24:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:24:34 clsMysql - Parameter: i-1
14:24:34 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
14:24:34 clsMysql - Parameter: ii-1-1
14:24:34 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:24:34 clsMysql - Parameter: i-8
14:24:34 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:24:34 clsMysql - Parameter: i-9
14:24:34 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:24:34 clsMysql - Parameter: i-1
14:24:34 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:24:34 clsMysql - Parameter: i--1
14:24:34 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
14:24:34 clsMysql - Parameter: ii-1-1
14:24:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:24:34 clsMysql - Parameter: i-
14:24:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:24:34 clsMysql - Parameter: i-
14:24:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:24:34 clsMysql - Parameter: i-
14:24:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:24:34 clsMysql - Parameter: i-
14:24:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:24:34 clsMysql - Parameter: i-
14:24:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:24:45 clsMysql - Parameter: i-1
14:24:45 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
14:24:45 clsMysql - Parameter: i-185
14:24:51 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:24:51 clsMysql - Parameter: i-1
14:24:51 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
14:24:51 clsMysql - Parameter: ii-1-185
14:24:51 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
14:24:51 clsMysql - Parameter: ii-1-185
14:24:51 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:24:51 clsMysql - Parameter: i-1
14:24:51 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
14:24:51 clsMysql - Parameter: ii-1-1
14:24:51 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:24:51 clsMysql - Parameter: i-18
14:24:51 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:24:51 clsMysql - Parameter: i-10
14:24:51 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:24:51 clsMysql - Parameter: i-1
14:24:51 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:24:51 clsMysql - Parameter: i--1
14:24:51 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
14:24:51 clsMysql - Parameter: ii-1-1
14:24:51 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:24:51 clsMysql - Parameter: i-
14:24:51 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:24:51 clsMysql - Parameter: i-
14:24:51 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:24:51 clsMysql - Parameter: i-
14:24:51 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:24:51 clsMysql - Parameter: i-
14:24:51 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:24:51 clsMysql - Parameter: i-
14:25:15 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:25:15 clsMysql - Parameter: i-1
14:25:15 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
14:25:15 clsMysql - Parameter: i-354
14:25:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:25:18 clsMysql - Parameter: i-1
14:25:18 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
14:25:18 clsMysql - Parameter: ii-1-354
14:25:18 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
14:25:18 clsMysql - Parameter: ii-1-354
14:25:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:25:18 clsMysql - Parameter: i-1
14:25:18 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
14:25:18 clsMysql - Parameter: ii-1-1
14:25:18 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:25:18 clsMysql - Parameter: i-5
14:25:18 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:25:18 clsMysql - Parameter: i-9
14:25:18 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:25:18 clsMysql - Parameter: i-1
14:25:18 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:25:18 clsMysql - Parameter: i--1
14:25:18 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
14:25:18 clsMysql - Parameter: ii-1-1
14:25:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:25:18 clsMysql - Parameter: i-
14:25:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:25:18 clsMysql - Parameter: i-
14:25:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:25:18 clsMysql - Parameter: i-
14:25:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:25:18 clsMysql - Parameter: i-
14:25:19 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:25:19 clsMysql - Parameter: i-
14:25:31 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:25:31 clsMysql - Parameter: i-1
14:25:31 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
14:25:31 clsMysql - Parameter: i-95
14:25:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:25:34 clsMysql - Parameter: i-1
14:25:34 clsMysql - Debug - Statement: SELECT hinweis FROM karte WHERE id = ?
14:25:34 clsMysql - Parameter: i-95
14:25:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:25:38 clsMysql - Parameter: i-1
14:25:38 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
14:25:38 clsMysql - Parameter: ii-1-95
14:25:38 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
14:25:38 clsMysql - Parameter: ii-1-95
14:25:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:25:38 clsMysql - Parameter: i-1
14:25:38 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
14:25:38 clsMysql - Parameter: ii-1-1
14:25:38 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:25:38 clsMysql - Parameter: i-18
14:25:38 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:25:38 clsMysql - Parameter: i-10
14:25:38 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:25:38 clsMysql - Parameter: i-1
14:25:38 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:25:38 clsMysql - Parameter: i--1
14:25:38 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
14:25:38 clsMysql - Parameter: ii-1-1
14:25:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:25:38 clsMysql - Parameter: i-
14:25:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:25:38 clsMysql - Parameter: i-
14:25:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:25:38 clsMysql - Parameter: i-
14:25:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:25:38 clsMysql - Parameter: i-
14:25:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:25:38 clsMysql - Parameter: i-
14:25:56 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:25:56 clsMysql - Parameter: i-1
14:25:56 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
14:25:56 clsMysql - Parameter: i-384
14:29:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:29:12 clsMysql - Parameter: i-1
14:29:12 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
14:29:12 clsMysql - Parameter: ii-1-384
14:29:12 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
14:29:12 clsMysql - Parameter: ii-1-384
14:29:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:29:12 clsMysql - Parameter: i-1
14:29:12 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
14:29:12 clsMysql - Parameter: ii-1-1
14:29:12 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:29:12 clsMysql - Parameter: i-17
14:29:12 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:29:12 clsMysql - Parameter: i-10
14:29:12 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:29:12 clsMysql - Parameter: i-1
14:29:12 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:29:12 clsMysql - Parameter: i--1
14:29:12 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
14:29:12 clsMysql - Parameter: ii-1-1
14:29:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:29:12 clsMysql - Parameter: i-
14:29:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:29:12 clsMysql - Parameter: i-
14:29:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:29:12 clsMysql - Parameter: i-
14:29:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:29:12 clsMysql - Parameter: i-
14:29:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:29:12 clsMysql - Parameter: i-
14:29:15 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:29:15 clsMysql - Parameter: i-1
14:29:15 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
14:29:15 clsMysql - Parameter: i-340
14:29:23 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:29:23 clsMysql - Parameter: i-1
14:29:23 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
14:29:23 clsMysql - Parameter: ii-1-340
14:29:23 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
14:29:23 clsMysql - Parameter: ii-1-340
14:29:23 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:29:23 clsMysql - Parameter: i-1
14:29:23 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
14:29:23 clsMysql - Parameter: ii-1-1
14:29:23 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:29:23 clsMysql - Parameter: i-23
14:29:23 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:29:23 clsMysql - Parameter: i-20
14:29:23 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:29:23 clsMysql - Parameter: i-1
14:29:23 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:29:23 clsMysql - Parameter: i--1
14:29:23 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
14:29:23 clsMysql - Parameter: ii-1-1
14:29:23 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:29:23 clsMysql - Parameter: i-
14:29:23 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:29:23 clsMysql - Parameter: i-
14:29:23 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:29:23 clsMysql - Parameter: i-
14:29:23 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:29:23 clsMysql - Parameter: i-
14:29:23 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:29:23 clsMysql - Parameter: i-
14:29:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:29:47 clsMysql - Parameter: i-1
14:29:47 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
14:29:47 clsMysql - Parameter: i-484
14:30:25 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:30:25 clsMysql - Parameter: i-1
14:30:25 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
14:30:25 clsMysql - Parameter: ii-1-484
14:30:25 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
14:30:25 clsMysql - Parameter: ii-1-484
14:30:25 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:30:25 clsMysql - Parameter: i-1
14:30:25 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
14:30:25 clsMysql - Parameter: ii-1-1
14:30:25 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:30:25 clsMysql - Parameter: i-26
14:30:25 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:30:25 clsMysql - Parameter: i-20
14:30:25 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:30:25 clsMysql - Parameter: i-1
14:30:25 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
14:30:25 clsMysql - Parameter: i--1
14:30:25 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
14:30:25 clsMysql - Parameter: ii-1-1
14:30:25 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:30:25 clsMysql - Parameter: i-
14:30:25 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:30:25 clsMysql - Parameter: i-
14:30:25 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:30:25 clsMysql - Parameter: i-
14:30:25 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:30:25 clsMysql - Parameter: i-
14:30:25 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:30:25 clsMysql - Parameter: i-
14:30:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:30:30 clsMysql - Parameter: i-1
14:30:30 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte
14:30:30 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM kategorie
14:30:30 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE())
14:30:30 clsMysql - Parameter: i-1
14:30:30 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 1 DAY))
14:30:30 clsMysql - Parameter: i-1
14:30:30 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 2 DAY))
14:30:30 clsMysql - Parameter: i-1
14:30:30 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM fortschritt WHERE benutzer_id = ? AND YEAR(idate) = YEAR(CURDATE())
14:30:30 clsMysql - Parameter: i-1
14:30:30 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 1
14:30:30 clsMysql - Parameter: i-1
14:30:30 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 0
14:30:30 clsMysql - Parameter: i-1
14:30:30 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte where todo = 1
14:30:30 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM kategorie inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
14:30:30 clsMysql - Parameter: i-1
14:30:31 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:30:31 clsMysql - Parameter: i-
14:30:31 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:30:31 clsMysql - Parameter: i-
14:30:31 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:30:31 clsMysql - Parameter: i-
14:30:31 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:30:31 clsMysql - Parameter: i-
