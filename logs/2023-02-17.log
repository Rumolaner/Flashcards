11:11:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:11:13 clsMysql - Parameter: i-
11:11:13 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte
11:11:13 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM kategorie
11:11:13 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE())
11:11:13 clsMysql - Parameter: i-
11:11:13 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 1 DAY))
11:11:13 clsMysql - Parameter: i-
11:11:13 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 2 DAY))
11:11:13 clsMysql - Parameter: i-
11:11:13 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM fortschritt WHERE benutzer_id = ? AND YEAR(idate) = YEAR(CURDATE())
11:11:13 clsMysql - Parameter: i-
11:11:13 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 1
11:11:13 clsMysql - Parameter: i-
11:11:13 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 0
11:11:13 clsMysql - Parameter: i-
11:11:13 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte where todo = 1
11:11:13 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM kategorie inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:11:13 clsMysql - Parameter: i-
11:11:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:11:13 clsMysql - Parameter: i-
11:11:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:11:13 clsMysql - Parameter: i-
11:11:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:11:13 clsMysql - Parameter: i-
11:11:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:11:13 clsMysql - Parameter: i-
11:11:16 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:11:16 clsMysql - Parameter: i-
11:11:16 clsMysql - Debug - Statement: SELECT id, name FROM benutzer order by name
11:11:17 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:11:17 clsMysql - Parameter: i-
11:11:17 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:11:17 clsMysql - Parameter: i-
11:11:17 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:11:17 clsMysql - Parameter: i-
11:11:17 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:11:17 clsMysql - Parameter: i-
11:11:19 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:11:19 clsMysql - Parameter: i-
11:11:19 clsMysql - Debug - Statement: SELECT count(name) as anzahl, id FROM benutzer WHERE id = ?
11:11:19 clsMysql - Parameter: i-1
11:11:19 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:11:19 clsMysql - Parameter: i-1
11:11:19 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte
11:11:19 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM kategorie
11:11:19 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE())
11:11:19 clsMysql - Parameter: i-1
11:11:19 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 1 DAY))
11:11:19 clsMysql - Parameter: i-1
11:11:19 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 2 DAY))
11:11:19 clsMysql - Parameter: i-1
11:11:19 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM fortschritt WHERE benutzer_id = ? AND YEAR(idate) = YEAR(CURDATE())
11:11:19 clsMysql - Parameter: i-1
11:11:19 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 1
11:11:19 clsMysql - Parameter: i-1
11:11:19 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 0
11:11:19 clsMysql - Parameter: i-1
11:11:19 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte where todo = 1
11:11:19 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM kategorie inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:11:19 clsMysql - Parameter: i-1
11:11:19 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:11:19 clsMysql - Parameter: i-
11:11:19 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:11:19 clsMysql - Parameter: i-
11:11:19 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:11:19 clsMysql - Parameter: i-
11:11:19 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:11:19 clsMysql - Parameter: i-
11:11:48 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:11:48 clsMysql - Parameter: i-1
11:11:48 clsMysql - Debug - Statement: SELECT DISTINCT id, name FROM benutzerset where benutzer_id = ? ORDER BY name
11:11:48 clsMysql - Parameter: i-1
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where parent_id = -1 GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-2
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-35
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-34
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-36
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-37
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-38
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-39
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-40
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-41
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-43
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-44
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-45
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-46
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-42
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-47
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-3
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-1
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-20
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-31
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-32
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-23
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-27
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-28
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-29
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-21
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-22
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-26
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-30
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-10
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-13
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-16
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-14
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-17
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-18
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-11
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-12
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-15
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-19
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-9
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-4
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-5
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-6
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-7
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-8
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-25
11:11:48 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:11:48 clsMysql - Parameter: i-24
11:11:48 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:11:48 clsMysql - Parameter: i-
11:11:48 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:11:48 clsMysql - Parameter: i-
11:11:48 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:11:48 clsMysql - Parameter: i-
11:11:48 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:11:48 clsMysql - Parameter: i-
11:11:48 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:11:48 clsMysql - Parameter: i-
11:11:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:11:53 clsMysql - Parameter: i-1
11:11:53 clsMysql - Debug - Statement: DELETE FROM benutzer2kategorie where benutzer_id = ?
11:11:53 clsMysql - Parameter: i-1
11:11:53 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:11:53 clsMysql - Parameter: ii-1-31
11:11:53 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:11:53 clsMysql - Parameter: ii-1-32
11:11:53 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:11:53 clsMysql - Parameter: ii-1-23
11:11:53 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:11:53 clsMysql - Parameter: ii-1-27
11:11:53 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:11:53 clsMysql - Parameter: ii-1-28
11:11:53 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:11:53 clsMysql - Parameter: ii-1-29
11:11:53 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:11:53 clsMysql - Parameter: ii-1-21
11:11:53 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:11:53 clsMysql - Parameter: ii-1-22
11:11:53 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:11:53 clsMysql - Parameter: ii-1-26
11:11:53 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:11:53 clsMysql - Parameter: ii-1-30
11:11:53 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:11:53 clsMysql - Parameter: ii-1-13
11:11:53 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:11:53 clsMysql - Parameter: ii-1-16
11:11:53 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:11:53 clsMysql - Parameter: ii-1-14
11:11:53 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:11:53 clsMysql - Parameter: ii-1-17
11:11:53 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:11:53 clsMysql - Parameter: ii-1-18
11:11:53 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:11:53 clsMysql - Parameter: ii-1-11
11:11:53 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:11:53 clsMysql - Parameter: ii-1-12
11:11:53 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:11:53 clsMysql - Parameter: ii-1-15
11:11:53 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:11:53 clsMysql - Parameter: ii-1-19
11:11:53 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:11:53 clsMysql - Parameter: ii-1-4
11:11:53 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:11:53 clsMysql - Parameter: ii-1-5
11:11:53 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:11:53 clsMysql - Parameter: ii-1-6
11:11:53 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:11:53 clsMysql - Parameter: ii-1-7
11:11:53 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:11:53 clsMysql - Parameter: ii-1-8
11:11:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:11:53 clsMysql - Parameter: i-1
11:11:53 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:11:53 clsMysql - Parameter: ii-1-1
11:11:53 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:11:53 clsMysql - Parameter: i-18
11:11:53 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:11:53 clsMysql - Parameter: i-10
11:11:53 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:11:53 clsMysql - Parameter: i-1
11:11:53 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:11:53 clsMysql - Parameter: i--1
11:11:53 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:11:53 clsMysql - Parameter: ii-1-1
11:11:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:11:53 clsMysql - Parameter: i-
11:11:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:11:53 clsMysql - Parameter: i-
11:11:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:11:53 clsMysql - Parameter: i-
11:11:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:11:53 clsMysql - Parameter: i-
11:11:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:11:53 clsMysql - Parameter: i-
11:12:03 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:12:03 clsMysql - Parameter: i-1
11:12:03 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:12:03 clsMysql - Parameter: i-345
11:12:11 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:12:11 clsMysql - Parameter: i-1
11:12:11 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:12:12 clsMysql - Parameter: ii-1-345
11:12:12 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:12:12 clsMysql - Parameter: ii-1-345
11:12:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:12:12 clsMysql - Parameter: i-1
11:12:12 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:12:12 clsMysql - Parameter: ii-1-1
11:12:12 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:12:12 clsMysql - Parameter: i-19
11:12:12 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:12:12 clsMysql - Parameter: i-10
11:12:12 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:12:12 clsMysql - Parameter: i-1
11:12:12 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:12:12 clsMysql - Parameter: i--1
11:12:12 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:12:12 clsMysql - Parameter: ii-1-1
11:12:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:12:12 clsMysql - Parameter: i-
11:12:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:12:12 clsMysql - Parameter: i-
11:12:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:12:12 clsMysql - Parameter: i-
11:12:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:12:12 clsMysql - Parameter: i-
11:12:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:12:12 clsMysql - Parameter: i-
11:12:15 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:12:15 clsMysql - Parameter: i-1
11:12:15 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:12:15 clsMysql - Parameter: i-428
11:12:19 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:12:19 clsMysql - Parameter: i-1
11:12:19 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:12:19 clsMysql - Parameter: ii-1-428
11:12:19 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:12:19 clsMysql - Parameter: ii-1-428
11:12:19 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:12:19 clsMysql - Parameter: i-1
11:12:19 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:12:19 clsMysql - Parameter: ii-1-1
11:12:19 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:12:19 clsMysql - Parameter: i-23
11:12:19 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:12:19 clsMysql - Parameter: i-20
11:12:19 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:12:19 clsMysql - Parameter: i-1
11:12:19 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:12:19 clsMysql - Parameter: i--1
11:12:19 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:12:19 clsMysql - Parameter: ii-1-1
11:12:19 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:12:19 clsMysql - Parameter: i-
11:12:19 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:12:19 clsMysql - Parameter: i-
11:12:19 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:12:19 clsMysql - Parameter: i-
11:12:19 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:12:19 clsMysql - Parameter: i-
11:12:19 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:12:19 clsMysql - Parameter: i-
11:12:50 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:12:50 clsMysql - Parameter: i-1
11:12:50 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:12:50 clsMysql - Parameter: i-482
11:16:51 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:16:51 clsMysql - Parameter: i-1
11:16:51 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:16:51 clsMysql - Parameter: ii-1-482
11:16:51 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:16:51 clsMysql - Parameter: ii-1-482
11:16:51 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:16:51 clsMysql - Parameter: i-1
11:16:51 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:16:51 clsMysql - Parameter: ii-1-1
11:16:51 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:16:51 clsMysql - Parameter: i-6
11:16:51 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:16:51 clsMysql - Parameter: i-9
11:16:51 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:16:51 clsMysql - Parameter: i-1
11:16:51 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:16:51 clsMysql - Parameter: i--1
11:16:51 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:16:51 clsMysql - Parameter: ii-1-1
11:16:51 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:16:51 clsMysql - Parameter: i-
11:16:51 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:16:51 clsMysql - Parameter: i-
11:16:51 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:16:51 clsMysql - Parameter: i-
11:16:51 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:16:51 clsMysql - Parameter: i-
11:16:51 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:16:51 clsMysql - Parameter: i-
11:17:41 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:17:41 clsMysql - Parameter: i-1
11:17:41 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:17:41 clsMysql - Parameter: i-125
11:17:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:17:53 clsMysql - Parameter: i-1
11:17:53 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:17:53 clsMysql - Parameter: ii-1-125
11:17:53 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:17:53 clsMysql - Parameter: ii-1-125
11:17:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:17:53 clsMysql - Parameter: i-1
11:17:53 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:17:53 clsMysql - Parameter: ii-1-1
11:17:53 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:17:53 clsMysql - Parameter: i-23
11:17:53 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:17:53 clsMysql - Parameter: i-20
11:17:53 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:17:53 clsMysql - Parameter: i-1
11:17:53 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:17:53 clsMysql - Parameter: i--1
11:17:53 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:17:53 clsMysql - Parameter: ii-1-1
11:17:54 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:17:54 clsMysql - Parameter: i-
11:17:54 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:17:54 clsMysql - Parameter: i-
11:17:54 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:17:54 clsMysql - Parameter: i-
11:17:54 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:17:54 clsMysql - Parameter: i-
11:17:54 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:17:54 clsMysql - Parameter: i-
11:19:27 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:19:27 clsMysql - Parameter: i-1
11:19:27 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:19:27 clsMysql - Parameter: i-489
11:20:11 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:20:11 clsMysql - Parameter: i-1
11:20:11 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:20:11 clsMysql - Parameter: ii-1-489
11:20:11 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:20:11 clsMysql - Parameter: ii-1-489
11:20:11 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:20:11 clsMysql - Parameter: i-1
11:20:11 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:20:11 clsMysql - Parameter: ii-1-1
11:20:11 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:20:11 clsMysql - Parameter: i-13
11:20:11 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:20:11 clsMysql - Parameter: i-10
11:20:11 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:20:11 clsMysql - Parameter: i-1
11:20:11 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:20:11 clsMysql - Parameter: i--1
11:20:11 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:20:11 clsMysql - Parameter: ii-1-1
11:20:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:20:12 clsMysql - Parameter: i-
11:20:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:20:12 clsMysql - Parameter: i-
11:20:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:20:12 clsMysql - Parameter: i-
11:20:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:20:12 clsMysql - Parameter: i-
11:20:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:20:12 clsMysql - Parameter: i-
11:24:27 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:24:27 clsMysql - Parameter: i-1
11:24:27 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:24:27 clsMysql - Parameter: i-236
11:24:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:24:30 clsMysql - Parameter: i-1
11:24:30 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:24:30 clsMysql - Parameter: ii-1-236
11:24:30 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:24:30 clsMysql - Parameter: ii-1-236
11:24:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:24:30 clsMysql - Parameter: i-1
11:24:30 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:24:30 clsMysql - Parameter: ii-1-1
11:24:30 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:24:30 clsMysql - Parameter: i-4
11:24:30 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:24:30 clsMysql - Parameter: i-9
11:24:30 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:24:30 clsMysql - Parameter: i-1
11:24:30 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:24:30 clsMysql - Parameter: i--1
11:24:30 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:24:30 clsMysql - Parameter: ii-1-1
11:24:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:24:30 clsMysql - Parameter: i-
11:24:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:24:30 clsMysql - Parameter: i-
11:24:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:24:30 clsMysql - Parameter: i-
11:24:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:24:30 clsMysql - Parameter: i-
11:24:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:24:30 clsMysql - Parameter: i-
11:24:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:24:59 clsMysql - Parameter: i-1
11:24:59 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:24:59 clsMysql - Parameter: i-23
11:25:01 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:25:01 clsMysql - Parameter: i-1
11:25:01 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:25:01 clsMysql - Parameter: ii-1-23
11:25:01 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:25:01 clsMysql - Parameter: ii-1-23
11:25:01 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:25:01 clsMysql - Parameter: i-1
11:25:01 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:25:01 clsMysql - Parameter: ii-1-1
11:25:01 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:25:01 clsMysql - Parameter: i-21
11:25:01 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:25:01 clsMysql - Parameter: i-20
11:25:01 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:25:01 clsMysql - Parameter: i-1
11:25:01 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:25:01 clsMysql - Parameter: i--1
11:25:01 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:25:01 clsMysql - Parameter: ii-1-1
11:25:01 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:25:01 clsMysql - Parameter: i-
11:25:01 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:25:01 clsMysql - Parameter: i-
11:25:01 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:25:01 clsMysql - Parameter: i-
11:25:01 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:25:01 clsMysql - Parameter: i-
11:25:01 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:25:01 clsMysql - Parameter: i-
11:25:37 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:25:37 clsMysql - Parameter: i-1
11:25:37 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:25:37 clsMysql - Parameter: i-454
11:25:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:25:58 clsMysql - Parameter: i-1
11:25:58 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:25:58 clsMysql - Parameter: ii-1-454
11:25:58 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:25:58 clsMysql - Parameter: ii-1-454
11:25:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:25:59 clsMysql - Parameter: i-1
11:25:59 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:25:59 clsMysql - Parameter: ii-1-1
11:25:59 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:25:59 clsMysql - Parameter: i-21
11:25:59 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:25:59 clsMysql - Parameter: i-20
11:25:59 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:25:59 clsMysql - Parameter: i-1
11:25:59 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:25:59 clsMysql - Parameter: i--1
11:25:59 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:25:59 clsMysql - Parameter: ii-1-1
11:25:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:25:59 clsMysql - Parameter: i-
11:25:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:25:59 clsMysql - Parameter: i-
11:25:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:25:59 clsMysql - Parameter: i-
11:25:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:25:59 clsMysql - Parameter: i-
11:25:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:25:59 clsMysql - Parameter: i-
11:27:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:27:13 clsMysql - Parameter: i-1
11:27:13 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:27:13 clsMysql - Parameter: i-436
11:31:17 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:31:17 clsMysql - Parameter: i-1
11:31:17 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:31:17 clsMysql - Parameter: ii-1-436
11:31:17 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:31:17 clsMysql - Parameter: ii-1-436
11:31:17 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:31:17 clsMysql - Parameter: i-1
11:31:17 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:31:17 clsMysql - Parameter: ii-1-1
11:31:17 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:31:17 clsMysql - Parameter: i-8
11:31:17 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:31:17 clsMysql - Parameter: i-9
11:31:17 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:31:17 clsMysql - Parameter: i-1
11:31:17 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:31:17 clsMysql - Parameter: i--1
11:31:17 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:31:17 clsMysql - Parameter: ii-1-1
11:31:17 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:31:17 clsMysql - Parameter: i-
11:31:17 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:31:17 clsMysql - Parameter: i-
11:31:17 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:31:17 clsMysql - Parameter: i-
11:31:17 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:31:17 clsMysql - Parameter: i-
11:31:17 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:31:17 clsMysql - Parameter: i-
11:31:44 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:31:44 clsMysql - Parameter: i-1
11:31:44 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:31:44 clsMysql - Parameter: i-186
11:32:04 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:32:04 clsMysql - Parameter: i-1
11:32:04 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:32:04 clsMysql - Parameter: ii-1-186
11:32:04 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:32:04 clsMysql - Parameter: ii-1-186
11:32:04 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:32:04 clsMysql - Parameter: i-1
11:32:04 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:32:04 clsMysql - Parameter: ii-1-1
11:32:04 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:32:04 clsMysql - Parameter: i-14
11:32:04 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:32:04 clsMysql - Parameter: i-10
11:32:04 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:32:04 clsMysql - Parameter: i-1
11:32:04 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:32:04 clsMysql - Parameter: i--1
11:32:05 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:32:05 clsMysql - Parameter: ii-1-1
11:32:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:32:05 clsMysql - Parameter: i-
11:32:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:32:05 clsMysql - Parameter: i-
11:32:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:32:05 clsMysql - Parameter: i-
11:32:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:32:05 clsMysql - Parameter: i-
11:32:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:32:05 clsMysql - Parameter: i-
11:32:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:32:14 clsMysql - Parameter: i-1
11:32:14 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:32:14 clsMysql - Parameter: i-241
11:32:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:32:20 clsMysql - Parameter: i-1
11:32:20 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:32:20 clsMysql - Parameter: ii-1-241
11:32:20 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:32:20 clsMysql - Parameter: ii-1-241
11:32:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:32:20 clsMysql - Parameter: i-1
11:32:20 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:32:20 clsMysql - Parameter: ii-1-1
11:32:20 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:32:20 clsMysql - Parameter: i-4
11:32:20 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:32:20 clsMysql - Parameter: i-9
11:32:20 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:32:20 clsMysql - Parameter: i-1
11:32:20 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:32:20 clsMysql - Parameter: i--1
11:32:20 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:32:20 clsMysql - Parameter: ii-1-1
11:32:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:32:20 clsMysql - Parameter: i-
11:32:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:32:20 clsMysql - Parameter: i-
11:32:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:32:20 clsMysql - Parameter: i-
11:32:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:32:20 clsMysql - Parameter: i-
11:32:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:32:20 clsMysql - Parameter: i-
11:32:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:32:46 clsMysql - Parameter: i-1
11:32:46 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:32:46 clsMysql - Parameter: i-11
11:39:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:39:05 clsMysql - Parameter: i-1
11:39:05 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 1, 0) ON DUPLICATE KEY UPDATE fortschritt = IF(fortschritt <= 2, 1, fortschritt - 1), datum = NOW(), gewusst = 0
11:39:05 clsMysql - Parameter: ii-1-11
11:39:05 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 0)
11:39:05 clsMysql - Parameter: ii-1-11
11:39:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:39:05 clsMysql - Parameter: i-1
11:39:05 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:39:05 clsMysql - Parameter: ii-1-1
11:39:05 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:39:05 clsMysql - Parameter: i-14
11:39:05 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:39:05 clsMysql - Parameter: i-10
11:39:05 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:39:05 clsMysql - Parameter: i-1
11:39:05 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:39:05 clsMysql - Parameter: i--1
11:39:05 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:39:05 clsMysql - Parameter: ii-1-1
11:39:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:39:05 clsMysql - Parameter: i-
11:39:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:39:05 clsMysql - Parameter: i-
11:39:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:39:05 clsMysql - Parameter: i-
11:39:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:39:05 clsMysql - Parameter: i-
11:39:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:39:05 clsMysql - Parameter: i-
11:39:10 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:39:10 clsMysql - Parameter: i-1
11:39:10 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:39:10 clsMysql - Parameter: i-244
11:39:15 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:39:15 clsMysql - Parameter: i-1
11:39:15 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:39:15 clsMysql - Parameter: ii-1-244
11:39:15 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:39:15 clsMysql - Parameter: ii-1-244
11:39:15 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:39:15 clsMysql - Parameter: i-1
11:39:15 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:39:15 clsMysql - Parameter: ii-1-1
11:39:15 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:39:15 clsMysql - Parameter: i-14
11:39:15 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:39:15 clsMysql - Parameter: i-10
11:39:15 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:39:15 clsMysql - Parameter: i-1
11:39:15 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:39:15 clsMysql - Parameter: i--1
11:39:15 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:39:15 clsMysql - Parameter: ii-1-1
11:39:15 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:39:15 clsMysql - Parameter: i-
11:39:15 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:39:15 clsMysql - Parameter: i-
11:39:15 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:39:15 clsMysql - Parameter: i-
11:39:15 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:39:15 clsMysql - Parameter: i-
11:39:15 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:39:15 clsMysql - Parameter: i-
11:40:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:40:38 clsMysql - Parameter: i-1
11:40:38 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:40:38 clsMysql - Parameter: i-252
11:40:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:40:46 clsMysql - Parameter: i-1
11:40:46 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:40:46 clsMysql - Parameter: ii-1-252
11:40:46 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:40:46 clsMysql - Parameter: ii-1-252
11:40:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:40:46 clsMysql - Parameter: i-1
11:40:46 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:40:46 clsMysql - Parameter: ii-1-1
11:40:46 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:40:46 clsMysql - Parameter: i-11
11:40:46 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:40:46 clsMysql - Parameter: i-10
11:40:46 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:40:46 clsMysql - Parameter: i-1
11:40:46 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:40:46 clsMysql - Parameter: i--1
11:40:46 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:40:46 clsMysql - Parameter: ii-1-1
11:40:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:40:46 clsMysql - Parameter: i-
11:40:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:40:46 clsMysql - Parameter: i-
11:40:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:40:46 clsMysql - Parameter: i-
11:40:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:40:46 clsMysql - Parameter: i-
11:40:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:40:46 clsMysql - Parameter: i-
11:40:55 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:40:55 clsMysql - Parameter: i-1
11:40:55 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:40:55 clsMysql - Parameter: i-211
11:41:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:07 clsMysql - Parameter: i-1
11:41:07 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:41:07 clsMysql - Parameter: ii-1-211
11:41:07 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:41:07 clsMysql - Parameter: ii-1-211
11:41:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:07 clsMysql - Parameter: i-1
11:41:07 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:41:07 clsMysql - Parameter: ii-1-1
11:41:07 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:41:07 clsMysql - Parameter: i-16
11:41:07 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:41:07 clsMysql - Parameter: i-10
11:41:07 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:41:07 clsMysql - Parameter: i-1
11:41:07 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:41:07 clsMysql - Parameter: i--1
11:41:07 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:41:07 clsMysql - Parameter: ii-1-1
11:41:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:07 clsMysql - Parameter: i-
11:41:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:07 clsMysql - Parameter: i-
11:41:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:07 clsMysql - Parameter: i-
11:41:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:07 clsMysql - Parameter: i-
11:41:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:07 clsMysql - Parameter: i-
11:41:16 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:16 clsMysql - Parameter: i-1
11:41:16 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:41:16 clsMysql - Parameter: i-316
11:41:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:20 clsMysql - Parameter: i-1
11:41:20 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:41:20 clsMysql - Parameter: ii-1-316
11:41:20 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:41:20 clsMysql - Parameter: ii-1-316
11:41:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:20 clsMysql - Parameter: i-1
11:41:20 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:41:20 clsMysql - Parameter: ii-1-1
11:41:21 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:41:21 clsMysql - Parameter: i-21
11:41:21 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:41:21 clsMysql - Parameter: i-20
11:41:21 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:41:21 clsMysql - Parameter: i-1
11:41:21 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:41:21 clsMysql - Parameter: i--1
11:41:21 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:41:21 clsMysql - Parameter: ii-1-1
11:41:21 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:21 clsMysql - Parameter: i-
11:41:21 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:21 clsMysql - Parameter: i-
11:41:21 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:21 clsMysql - Parameter: i-
11:41:21 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:21 clsMysql - Parameter: i-
11:41:21 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:21 clsMysql - Parameter: i-
11:41:33 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:33 clsMysql - Parameter: i-1
11:41:33 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:41:33 clsMysql - Parameter: i-446
11:41:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:38 clsMysql - Parameter: i-1
11:41:38 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:41:38 clsMysql - Parameter: ii-1-446
11:41:38 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:41:38 clsMysql - Parameter: ii-1-446
11:41:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:38 clsMysql - Parameter: i-1
11:41:38 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:41:38 clsMysql - Parameter: ii-1-1
11:41:38 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:41:38 clsMysql - Parameter: i-19
11:41:38 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:41:38 clsMysql - Parameter: i-10
11:41:38 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:41:38 clsMysql - Parameter: i-1
11:41:38 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:41:38 clsMysql - Parameter: i--1
11:41:38 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:41:38 clsMysql - Parameter: ii-1-1
11:41:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:38 clsMysql - Parameter: i-
11:41:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:38 clsMysql - Parameter: i-
11:41:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:38 clsMysql - Parameter: i-
11:41:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:38 clsMysql - Parameter: i-
11:41:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:38 clsMysql - Parameter: i-
11:41:41 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:41 clsMysql - Parameter: i-1
11:41:41 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:41:41 clsMysql - Parameter: i-422
11:41:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:46 clsMysql - Parameter: i-1
11:41:46 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:41:46 clsMysql - Parameter: ii-1-422
11:41:46 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:41:46 clsMysql - Parameter: ii-1-422
11:41:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:46 clsMysql - Parameter: i-1
11:41:46 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:41:46 clsMysql - Parameter: ii-1-1
11:41:46 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:41:46 clsMysql - Parameter: i-30
11:41:46 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:41:46 clsMysql - Parameter: i-20
11:41:46 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:41:46 clsMysql - Parameter: i-1
11:41:46 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:41:46 clsMysql - Parameter: i--1
11:41:46 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:41:46 clsMysql - Parameter: ii-1-1
11:41:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:47 clsMysql - Parameter: i-
11:41:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:47 clsMysql - Parameter: i-
11:41:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:47 clsMysql - Parameter: i-
11:41:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:47 clsMysql - Parameter: i-
11:41:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:47 clsMysql - Parameter: i-
11:41:55 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:55 clsMysql - Parameter: i-1
11:41:55 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:41:55 clsMysql - Parameter: i-555
11:42:10 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:42:10 clsMysql - Parameter: i-1
11:42:10 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:42:10 clsMysql - Parameter: ii-1-555
11:42:10 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:42:10 clsMysql - Parameter: ii-1-555
11:42:10 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:42:10 clsMysql - Parameter: i-1
11:42:10 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:42:10 clsMysql - Parameter: ii-1-1
11:42:11 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:42:11 clsMysql - Parameter: i-4
11:42:11 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:42:11 clsMysql - Parameter: i-9
11:42:11 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:42:11 clsMysql - Parameter: i-1
11:42:11 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:42:11 clsMysql - Parameter: i--1
11:42:11 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:42:11 clsMysql - Parameter: ii-1-1
11:42:11 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:42:11 clsMysql - Parameter: i-
11:42:11 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:42:11 clsMysql - Parameter: i-
11:42:11 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:42:11 clsMysql - Parameter: i-
11:42:11 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:42:11 clsMysql - Parameter: i-
11:42:11 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:42:11 clsMysql - Parameter: i-
11:42:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:42:14 clsMysql - Parameter: i-1
11:42:14 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte
11:42:14 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM kategorie
11:42:14 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE())
11:42:14 clsMysql - Parameter: i-1
11:42:14 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 1 DAY))
11:42:14 clsMysql - Parameter: i-1
11:42:14 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 2 DAY))
11:42:14 clsMysql - Parameter: i-1
11:42:14 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM fortschritt WHERE benutzer_id = ? AND YEAR(idate) = YEAR(CURDATE())
11:42:14 clsMysql - Parameter: i-1
11:42:14 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 1
11:42:14 clsMysql - Parameter: i-1
11:42:14 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 0
11:42:14 clsMysql - Parameter: i-1
11:42:14 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte where todo = 1
11:42:14 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM kategorie inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:42:14 clsMysql - Parameter: i-1
11:42:15 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:42:15 clsMysql - Parameter: i-
11:42:15 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:42:15 clsMysql - Parameter: i-
11:42:15 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:42:15 clsMysql - Parameter: i-
11:42:15 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:42:15 clsMysql - Parameter: i-
13:03:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:03:53 clsMysql - Parameter: i-
13:03:53 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte
13:03:53 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM kategorie
13:03:53 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE())
13:03:53 clsMysql - Parameter: i-
13:03:53 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 1 DAY))
13:03:53 clsMysql - Parameter: i-
13:03:53 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 2 DAY))
13:03:53 clsMysql - Parameter: i-
13:03:53 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM fortschritt WHERE benutzer_id = ? AND YEAR(idate) = YEAR(CURDATE())
13:03:53 clsMysql - Parameter: i-
13:03:53 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 1
13:03:53 clsMysql - Parameter: i-
13:03:53 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 0
13:03:53 clsMysql - Parameter: i-
13:03:53 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte where todo = 1
13:03:53 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM kategorie inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
13:03:53 clsMysql - Parameter: i-
13:03:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:03:53 clsMysql - Parameter: i-
13:03:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:03:53 clsMysql - Parameter: i-
13:03:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:03:53 clsMysql - Parameter: i-
13:03:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:03:53 clsMysql - Parameter: i-
13:03:55 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:03:55 clsMysql - Parameter: i-
13:03:55 clsMysql - Debug - Statement: SELECT id, name FROM benutzer order by name
13:03:55 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:03:55 clsMysql - Parameter: i-
13:03:55 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:03:55 clsMysql - Parameter: i-
13:03:55 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:03:55 clsMysql - Parameter: i-
13:03:55 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:03:55 clsMysql - Parameter: i-
13:03:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:03:58 clsMysql - Parameter: i-
13:03:58 clsMysql - Debug - Statement: SELECT count(name) as anzahl, id FROM benutzer WHERE id = ?
13:03:58 clsMysql - Parameter: i-1
13:03:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:03:58 clsMysql - Parameter: i-1
13:03:58 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte
13:03:58 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM kategorie
13:03:58 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE())
13:03:58 clsMysql - Parameter: i-1
13:03:58 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 1 DAY))
13:03:58 clsMysql - Parameter: i-1
13:03:58 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 2 DAY))
13:03:58 clsMysql - Parameter: i-1
13:03:58 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM fortschritt WHERE benutzer_id = ? AND YEAR(idate) = YEAR(CURDATE())
13:03:58 clsMysql - Parameter: i-1
13:03:58 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 1
13:03:58 clsMysql - Parameter: i-1
13:03:58 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 0
13:03:58 clsMysql - Parameter: i-1
13:03:58 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte where todo = 1
13:03:58 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM kategorie inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
13:03:58 clsMysql - Parameter: i-1
13:03:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:03:58 clsMysql - Parameter: i-
13:03:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:03:58 clsMysql - Parameter: i-
13:03:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:03:58 clsMysql - Parameter: i-
13:03:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:03:58 clsMysql - Parameter: i-
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:04:00 clsMysql - Parameter: i-1
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id IN (-1, 0)
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-1
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-1
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-9
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-9
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-4
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-4
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-5
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-5
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-6
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-6
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-7
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-7
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-8
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-8
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-10
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-10
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-11
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-11
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-12
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-12
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-13
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-13
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-14
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-14
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-15
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-15
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-16
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-16
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-17
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-17
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-18
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-18
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-19
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-19
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-20
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-20
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-21
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-21
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-22
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-22
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-23
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-23
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-26
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-26
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-27
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-27
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-28
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-28
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-29
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-29
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-30
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-30
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-31
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-31
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-32
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-32
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-25
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-25
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-24
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-24
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-2
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-2
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-3
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-3
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-35
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-35
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-34
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-34
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-36
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-36
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-37
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-37
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-38
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-38
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-39
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-39
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-40
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-40
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-41
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-41
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-42
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-42
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-43
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-43
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-44
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-44
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-45
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-45
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-46
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-46
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:04:00 clsMysql - Parameter: i-47
13:04:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:04:00 clsMysql - Parameter: i-47
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:04:00 clsMysql - Parameter: i-
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:04:00 clsMysql - Parameter: i-
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:04:00 clsMysql - Parameter: i-
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:04:00 clsMysql - Parameter: i-
13:04:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:04:00 clsMysql - Parameter: i-
13:04:01 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:04:01 clsMysql - Parameter: i-
13:04:01 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:04:01 clsMysql - Parameter: i-
13:04:01 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:04:01 clsMysql - Parameter: i-
13:04:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:04:14 clsMysql - Parameter: i-1
13:04:14 clsMysql - Debug - Statement: INSERT INTO kategorie (name, benutzer_id) VALUES (?, ?)
13:04:14 clsMysql - Parameter: si-IT-1
13:04:22 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:04:22 clsMysql - Parameter: i-
13:04:25 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:04:25 clsMysql - Parameter: i-
13:06:08 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:06:08 clsMysql - Parameter: i-
13:09:41 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:09:41 clsMysql - Parameter: i-1
13:09:41 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id IN (-1, 0)
13:09:41 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:41 clsMysql - Parameter: i-1
13:09:41 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:41 clsMysql - Parameter: i-1
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-9
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-9
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-4
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-4
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-5
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-5
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-6
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-6
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-7
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-7
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-8
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-8
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-10
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-10
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-11
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-11
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-12
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-12
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-13
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-13
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-14
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-14
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-15
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-15
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-16
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-16
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-17
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-17
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-18
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-18
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-19
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-19
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-20
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-20
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-21
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-21
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-22
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-22
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-23
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-23
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-26
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-26
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-27
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-27
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-28
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-28
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-29
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-29
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-30
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-30
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-31
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-31
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-32
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-32
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-25
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-25
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-24
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-24
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-2
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-2
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-3
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-3
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-35
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-35
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-34
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-34
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-36
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-36
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-37
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-37
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-38
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-38
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-39
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-39
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-40
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-40
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-41
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-41
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-42
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-42
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-43
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-43
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-44
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-44
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-45
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-45
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-46
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-46
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-47
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-47
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:09:42 clsMysql - Parameter: i-48
13:09:42 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:09:42 clsMysql - Parameter: i-48
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:09:42 clsMysql - Parameter: i-
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:09:42 clsMysql - Parameter: i-
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:09:42 clsMysql - Parameter: i-
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:09:42 clsMysql - Parameter: i-
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:09:42 clsMysql - Parameter: i-
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:09:42 clsMysql - Parameter: i-
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:09:42 clsMysql - Parameter: i-
13:09:42 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:09:42 clsMysql - Parameter: i-
13:09:44 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:09:44 clsMysql - Parameter: i-
13:09:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:09:59 clsMysql - Parameter: i-
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:10:01 clsMysql - Parameter: i-1
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id IN (-1, 0)
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-1
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-1
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-9
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-9
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-4
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-4
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-5
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-5
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-6
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-6
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-7
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-7
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-8
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-8
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-10
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-10
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-11
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-11
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-12
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-12
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-13
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-13
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-14
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-14
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-15
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-15
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-16
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-16
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-17
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-17
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-18
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-18
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-19
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-19
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-20
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-20
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-21
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-21
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-22
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-22
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-23
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-23
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-26
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-26
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-27
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-27
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-28
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-28
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-29
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-29
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-30
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-30
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-31
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-31
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-32
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-32
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-25
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-25
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-24
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-24
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-2
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-2
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-3
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-3
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-35
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-35
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-34
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-34
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-36
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-36
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-37
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-37
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-38
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-38
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-39
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-39
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-40
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-40
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-41
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-41
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-42
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-42
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-43
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-43
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-44
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-44
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-45
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-45
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-46
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-46
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-47
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-47
13:10:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:10:01 clsMysql - Parameter: i-48
13:10:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:10:01 clsMysql - Parameter: i-48
13:10:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:10:02 clsMysql - Parameter: i-
13:10:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:10:02 clsMysql - Parameter: i-
13:10:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:10:02 clsMysql - Parameter: i-
13:10:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:10:02 clsMysql - Parameter: i-
13:10:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:10:02 clsMysql - Parameter: i-
13:10:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:10:02 clsMysql - Parameter: i-
13:10:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:10:02 clsMysql - Parameter: i-
13:10:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:10:02 clsMysql - Parameter: i-
13:13:27 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:13:27 clsMysql - Parameter: i-1
13:13:27 clsMysql - Debug - Statement: INSERT INTO kategorie (name, benutzer_id) VALUES (?, ?)
13:13:27 clsMysql - Parameter: si-Algorithmen-1
13:13:33 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:13:33 clsMysql - Parameter: i-1
13:13:33 clsMysql - Debug - Statement: UPDATE kategorie SET parent_id = ? WHERE id = ?
13:13:33 clsMysql - Parameter: ii-48-49
13:13:33 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:13:33 clsMysql - Parameter: i-1
13:13:33 clsMysql - Debug - Statement: UPDATE kategorie SET parent_id = ? WHERE id = ?
13:13:33 clsMysql - Parameter: ii-48-49
13:13:50 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:13:50 clsMysql - Parameter: i-1
13:13:50 clsMysql - Debug - Statement: INSERT INTO kategorie (name, benutzer_id) VALUES (?, ?)
13:13:50 clsMysql - Parameter: si-Sortieralgorithmen-1
13:14:01 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:14:01 clsMysql - Parameter: i-1
13:14:01 clsMysql - Debug - Statement: INSERT INTO kategorie (name, benutzer_id) VALUES (?, ?)
13:14:01 clsMysql - Parameter: si-Suchalgorithmen-1
13:14:06 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:14:06 clsMysql - Parameter: i-1
13:14:06 clsMysql - Debug - Statement: UPDATE kategorie SET parent_id = ? WHERE id = ?
13:14:06 clsMysql - Parameter: ii-49-50
13:14:06 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:14:06 clsMysql - Parameter: i-1
13:14:06 clsMysql - Debug - Statement: UPDATE kategorie SET parent_id = ? WHERE id = ?
13:14:06 clsMysql - Parameter: ii-49-50
13:14:06 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:14:06 clsMysql - Parameter: i-1
13:14:06 clsMysql - Debug - Statement: UPDATE kategorie SET parent_id = ? WHERE id = ?
13:14:06 clsMysql - Parameter: ii-49-50
13:14:08 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:14:08 clsMysql - Parameter: i-1
13:14:08 clsMysql - Debug - Statement: UPDATE kategorie SET parent_id = ? WHERE id = ?
13:14:08 clsMysql - Parameter: ii-49-51
13:14:08 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:14:08 clsMysql - Parameter: i-1
13:14:08 clsMysql - Debug - Statement: UPDATE kategorie SET parent_id = ? WHERE id = ?
13:14:08 clsMysql - Parameter: ii-49-51
13:14:08 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:14:08 clsMysql - Parameter: i-1
13:14:08 clsMysql - Debug - Statement: UPDATE kategorie SET parent_id = ? WHERE id = ?
13:14:08 clsMysql - Parameter: ii-49-51
13:15:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:15:12 clsMysql - Parameter: i-1
13:15:12 clsMysql - Debug - Statement: SELECT name FROM kategorie WHERE id = ?
13:15:12 clsMysql - Parameter: i-50
13:15:12 clsMysql - Debug - Statement: SELECT id, frage, hinweis, antwort, todo FROM karte WHERE kategorie_id = ? ORDER BY id asc
13:15:12 clsMysql - Parameter: i-50
13:16:23 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:16:23 clsMysql - Parameter: i-1
13:16:23 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
13:16:23 clsMysql - Parameter: isssi-50-Wie funktioniert Bubble Sort?--In der Bubble-Phase wird die Eingabe-Liste von links nach rechts durchlaufen. Dabei wird in jedem Schritt das aktuelle Element mit dem rechten Nachbarn verglichen. Falls die beiden Elemente das Sortierkriterium verletzen, werden sie getauscht. Am Ende der Phase steht bei auf- bzw. absteigender Sortierung das größte bzw. kleinste Element der Eingabe am Ende der Liste.

Die Bubble-Phase wird solange wiederholt, bis die Eingabeliste vollständig sortiert ist. Dabei muss das letzte Element des vorherigen Durchlaufs nicht mehr betrachtet werden, da die restliche zu sortierende Eingabe keine größeren bzw. kleineren Elemente mehr enthält.-0
13:17:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:17:59 clsMysql - Parameter: i-1
13:17:59 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
13:17:59 clsMysql - Parameter: isssi-50-Welche Laufzeit hat Bubble Sort?--Worst Case: O(n²)
Best Case: O(n)-0
13:18:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:18:05 clsMysql - Parameter: i-1
13:18:05 clsMysql - Debug - Statement: UPDATE karte SET frage = ?, hinweis = ?, antwort = ?, todo = ? WHERE id = ?
13:18:05 clsMysql - Parameter: sssii-Wie funktioniert Bubble Sort?--In der Bubble-Phase wird die Eingabe-Liste von links nach rechts durchlaufen. Dabei wird in jedem Schritt das aktuelle Element mit dem rechten Nachbarn verglichen. Falls die beiden Elemente das Sortierkriterium verletzen, werden sie getauscht. Am Ende der Phase steht bei auf- bzw. absteigender Sortierung das größte bzw. kleinste Element der Eingabe am Ende der Liste.

Die Bubble-Phase wird solange wiederholt, bis die Eingabeliste vollständig sortiert ist. Dabei muss das letzte Element des vorherigen Durchlaufs nicht mehr betrachtet werden, da die restliche zu sortierende Eingabe keine größeren bzw. kleineren Elemente mehr enthält.-0-1733
13:18:10 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:18:10 clsMysql - Parameter: i-1
13:18:10 clsMysql - Debug - Statement: UPDATE karte SET frage = ?, hinweis = ?, antwort = ?, todo = ? WHERE id = ?
13:18:10 clsMysql - Parameter: sssii-Welche Laufzeit hat Bubble Sort?--Worst Case: O(n²)
Best Case: O(n)-0-1734
13:21:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:21:26 clsMysql - Parameter: i-1
13:21:26 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
13:21:26 clsMysql - Parameter: isssi-50-Wie lässt sich Bubble Sort optimieren?--Mit einer Abfrage, ob im letzten Durchlauf der äußeren Schleife ein Tausch vorgenommen wurde. Wenn in einem kompletten Durchlauf kein Tausch vorgenommen wurde, ist die Liste fertig sortiert und das Sortieren kann beendet werden.-0
13:21:41 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:21:41 clsMysql - Parameter: i-1
13:21:41 clsMysql - Debug - Statement: INSERT INTO kategorie (name, benutzer_id) VALUES (?, ?)
13:21:41 clsMysql - Parameter: si-PHP-1
13:21:48 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:21:48 clsMysql - Parameter: i-1
13:21:48 clsMysql - Debug - Statement: UPDATE kategorie SET parent_id = ? WHERE id = ?
13:21:48 clsMysql - Parameter: ii-50-52
13:21:48 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:21:48 clsMysql - Parameter: i-1
13:21:48 clsMysql - Debug - Statement: UPDATE kategorie SET parent_id = ? WHERE id = ?
13:21:48 clsMysql - Parameter: ii-50-52
13:21:48 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:21:48 clsMysql - Parameter: i-1
13:21:48 clsMysql - Debug - Statement: UPDATE kategorie SET parent_id = ? WHERE id = ?
13:21:48 clsMysql - Parameter: ii-50-52
13:21:48 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:21:48 clsMysql - Parameter: i-1
13:21:48 clsMysql - Debug - Statement: UPDATE kategorie SET parent_id = ? WHERE id = ?
13:21:48 clsMysql - Parameter: ii-50-52
13:21:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:21:53 clsMysql - Parameter: i-1
13:21:53 clsMysql - Debug - Statement: SELECT name FROM kategorie WHERE id = ?
13:21:53 clsMysql - Parameter: i-52
13:21:53 clsMysql - Debug - Statement: SELECT id, frage, hinweis, antwort, todo FROM karte WHERE kategorie_id = ? ORDER BY id asc
13:21:53 clsMysql - Parameter: i-52
13:21:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:21:58 clsMysql - Parameter: i-1
13:21:58 clsMysql - Debug - Statement: SELECT name FROM kategorie WHERE id = ?
13:21:58 clsMysql - Parameter: i-50
13:21:58 clsMysql - Debug - Statement: SELECT id, frage, hinweis, antwort, todo FROM karte WHERE kategorie_id = ? ORDER BY id asc
13:21:58 clsMysql - Parameter: i-50
13:22:11 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:22:11 clsMysql - Parameter: i-1
13:22:11 clsMysql - Debug - Statement: SELECT name FROM kategorie WHERE id = ?
13:22:11 clsMysql - Parameter: i-52
13:22:11 clsMysql - Debug - Statement: SELECT id, frage, hinweis, antwort, todo FROM karte WHERE kategorie_id = ? ORDER BY id asc
13:22:11 clsMysql - Parameter: i-52
13:24:32 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:24:32 clsMysql - Parameter: i-1
13:24:32 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
13:24:32 clsMysql - Parameter: isssi-52-Implementiere den Bubble Sort in PHP--//$list = zu sortierende Liste
for ($i = count($list); $i > 1; --$i) {
  for ($j = 0; $j < $i-1;   $j) {
    if ($list[$j] > $list[$j 1]) {
      $temp = $list[$j];
      $list[$j] = $list[$j 1];
      $list[$j 1] = $temp;
    }
  }
}
-0
13:26:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:26:05 clsMysql - Parameter: i-1
13:26:05 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
13:26:05 clsMysql - Parameter: isssi-52-Implementiere den optimierten Bubble Sort in PHP--//$list = zu sortierende Liste
$i = count($list);
do {
  $swapped = false;
  for ($j = 0; $j < $i-1;   $j) {
    if ($list[$j] > $list[$j 1]) {
      $temp = $list[$j];
      $list[$j] = $list[$j 1];
      $list[$j 1] = $temp;
      $swapped = true;
    }
  }
  $i--;
} while ($swapped);
-0
13:27:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:27:20 clsMysql - Parameter: i-1
13:27:20 clsMysql - Debug - Statement: SELECT name FROM kategorie WHERE id = ?
13:27:20 clsMysql - Parameter: i-50
13:27:20 clsMysql - Debug - Statement: SELECT id, frage, hinweis, antwort, todo FROM karte WHERE kategorie_id = ? ORDER BY id asc
13:27:20 clsMysql - Parameter: i-50
13:28:25 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:28:25 clsMysql - Parameter: i-1
13:28:25 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
13:28:25 clsMysql - Parameter: isssi-50-Was bedeutet wenn ein Algorithmus "in-place" arbeitet?--Ein Algorithmus arbeitet in-place bzw. in situ, wenn er außer dem für die Speicherung der zu bearbeitenden Daten benötigten Speicher nur eine konstante, also von der zu bearbeitenden Datenmenge unabhängige Menge von Speicher benötigt. Der Algorithmus überschreibt die Eingabedaten mit den Ausgabedaten.-0
13:29:04 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:29:04 clsMysql - Parameter: i-1
13:29:04 clsMysql - Debug - Statement: UPDATE karte SET frage = ?, hinweis = ?, antwort = ?, todo = ? WHERE id = ?
13:29:04 clsMysql - Parameter: sssii-Was bedeutet wenn ein Algorithmus "in-place" oder "in situ" arbeitet?--Ein Algorithmus arbeitet in-place bzw. in situ, wenn er außer dem für die Speicherung der zu bearbeitenden Daten benötigten Speicher nur eine konstante, also von der zu bearbeitenden Datenmenge unabhängige Menge von Speicher benötigt. Der Algorithmus überschreibt die Eingabedaten mit den Ausgabedaten.-0-1738
13:30:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:30:43 clsMysql - Parameter: i-1
13:30:43 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
13:30:43 clsMysql - Parameter: isssi-50-Was bedeutet es wenn ein Algorithmus "stabil" arbeitet?--Ein stabiles Sortierverfahren ist ein Sortieralgorithmus, der die Reihenfolge der Datensätze, deren Sortierschlüssel gleich sind, bewahrt.

Wenn bspw. eine Liste alphabetisch sortierter Personendateien nach dem Geburtsdatum neu sortiert wird, dann bleiben unter einem stabilen Sortierverfahren alle Personen mit gleichem Geburtsdatum alphabetisch sortiert.-0
13:32:56 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:32:56 clsMysql - Parameter: i-1
13:32:56 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
13:32:56 clsMysql - Parameter: isssi-50-Welche Platzkomplexität hat Bubble Sort?-in-place oder out-of-place-in-place-0
13:34:39 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:34:39 clsMysql - Parameter: i-1
13:34:39 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
13:34:39 clsMysql - Parameter: isssi-50-Welche Stabilität hat Bubble Sort?-stabil oder instabil-stabil-0
13:38:31 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:38:31 clsMysql - Parameter: i-1
13:38:31 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
13:38:31 clsMysql - Parameter: isssi-50-Wie funktioniert Insertion Sort?--Das Vorgehen ist mit der Sortierung eines Spielkartenblatts vergleichbar. Am Anfang liegen die Karten des Blatts verdeckt auf dem Tisch. Die Karten werden nacheinander aufgedeckt und an der korrekten Position in das Blatt, das in der Hand gehalten wird, eingefügt. Um die Einfügestelle für eine neue Karte zu finden, wird entweder die Karte sukzessive (von links nach rechts) mit den bereits einsortierten Karten des Blattes verglichen, oder eine binäre Suche durchgeführt. Zu jedem Zeitpunkt sind die Karten in der Hand sortiert und bestehen aus den bereits vom Tisch entnommenen Karten. Zum Einfügen der neuen Karte müssen alle auf der Hand nachfolgenden eine Position weiter nach rechts wandern.-0
13:39:16 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:39:16 clsMysql - Parameter: i-1
13:39:16 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
13:39:16 clsMysql - Parameter: isssi-50-Welche Laufzeit hat Insertion Sort?--Worst Case: O(n²)
Best Case: O(n)-0
13:40:01 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:40:01 clsMysql - Parameter: i-1
13:40:01 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
13:40:01 clsMysql - Parameter: isssi-50-Welche Platzkomplexität hat Insertion Sort?-in-place oder out-of-place-in-place-0
13:40:42 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:40:42 clsMysql - Parameter: i-1
13:40:42 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
13:40:42 clsMysql - Parameter: isssi-50-Welche Stabilität hat Insertion Sort?-stabil oder instabil-stabil-0
13:41:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:41:46 clsMysql - Parameter: i-1
13:41:46 clsMysql - Debug - Statement: SELECT name FROM kategorie WHERE id = ?
13:41:46 clsMysql - Parameter: i-52
13:41:46 clsMysql - Debug - Statement: SELECT id, frage, hinweis, antwort, todo FROM karte WHERE kategorie_id = ? ORDER BY id asc
13:41:46 clsMysql - Parameter: i-52
13:42:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:42:53 clsMysql - Parameter: i-1
13:42:53 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
13:42:53 clsMysql - Parameter: isssi-52-Implementiere den Insertion Sort in PHP--//$list = zu sortierende Liste
for ($i = 1; $i < count($list); $i  ) {
  $value = $list[$i];
  $j = $i;
  while ($j > 0 && $list[$j -1] > $value) {
    $list[$j] = $list[$j-1];
    $j--;
  }
  $list[$j] = $value;
}
-0
13:44:40 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:44:40 clsMysql - Parameter: i-1
13:44:41 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
13:44:41 clsMysql - Parameter: isssi-52-Implementiere den Merge Sort in PHP--//$list = zu sortierende Liste
function merge($llist, $rlist){
  $nlist = Array();
  while (count($llist) > 0 && count($rlist) > 0) {
    if ($llist[0] <= $rlist[0]){
      array_push($nlist, $llist[0]);
      array_shift($llist);
    } else {
      array_push($nlist, $rlist[0]);
      array_shift($rlist);
    }
  }

  while (count($llist) > 0) {
    array_push($nlist, $llist[0]);
    array_shift($llist);
  }

  while (count($rlist) > 0) {
    array_push($nlist, $rlist[0]);
    array_shift($rlist);
  }

  return $nlist;
}

function mergesort($list){
  if (count($list) <= 1) {
    return $list;
  } else {
    $llist = array_slice($list, 0, floor(count($list) / 2));
    $rlist = array_slice($list, floor(count($list) / 2));

    $llist = mergesort($llist);
    $rlist = mergesort($rlist);

    return merge($llist, $rlist);
  }
}

$list = mergesort($list);
-0
13:45:08 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:45:08 clsMysql - Parameter: i-1
13:45:08 clsMysql - Debug - Statement: SELECT name FROM kategorie WHERE id = ?
13:45:08 clsMysql - Parameter: i-52
13:45:08 clsMysql - Debug - Statement: SELECT id, frage, hinweis, antwort, todo FROM karte WHERE kategorie_id = ? ORDER BY id asc
13:45:08 clsMysql - Parameter: i-52
13:45:11 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:45:11 clsMysql - Parameter: i-1
13:45:11 clsMysql - Debug - Statement: SELECT name FROM kategorie WHERE id = ?
13:45:11 clsMysql - Parameter: i-50
13:45:11 clsMysql - Debug - Statement: SELECT id, frage, hinweis, antwort, todo FROM karte WHERE kategorie_id = ? ORDER BY id asc
13:45:11 clsMysql - Parameter: i-50
13:46:03 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:46:03 clsMysql - Parameter: i-1
13:46:03 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
13:46:03 clsMysql - Parameter: isssi-50-Wie funktioniert Merge Sort?--Mergesort betrachtet die zu sortierenden Daten als Liste und zerlegt sie in kleinere Listen, die jede für sich sortiert werden. Die kleinen sortierten Listen werden dann im Reißverschlussverfahren zu größeren sortierten Listen zusammengefügt (engl. (to) merge), bis eine sortierte Gesamtliste erreicht ist. Das Verfahren arbeitet bei Arrays in der Regel nicht in-place, es sind dafür aber (trickreiche) Implementierungen bekannt, in welchen die Teil-Arrays üblicherweise rekursiv zusammengeführt werden.[2] Verkettete Listen sind besonders geeignet zur Implementierung von Mergesort, dabei ergibt sich die in-place-Sortierung fast von selbst.-0
13:47:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:47:58 clsMysql - Parameter: i-1
13:47:58 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
13:47:58 clsMysql - Parameter: isssi-50-Welche Laufzeit hat Merge Sort?--O(n * log(n))-0
13:49:01 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:49:01 clsMysql - Parameter: i-1
13:49:01 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
13:49:01 clsMysql - Parameter: isssi-50-Welche Platzkomplexität hat Merge Sort?-in-place oder out-of-place-out-of-place, aber in-place bei verketteten Listen-0
13:49:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:49:34 clsMysql - Parameter: i-1
13:49:34 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
13:49:34 clsMysql - Parameter: isssi-50-Welche Stabilität hat Merge Sort?-stabil oder instabil-stabil-0
13:50:15 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:50:15 clsMysql - Parameter: i-1
13:50:15 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte
13:50:15 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM kategorie
13:50:15 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE())
13:50:15 clsMysql - Parameter: i-1
13:50:15 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 1 DAY))
13:50:15 clsMysql - Parameter: i-1
13:50:16 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 2 DAY))
13:50:16 clsMysql - Parameter: i-1
13:50:16 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM fortschritt WHERE benutzer_id = ? AND YEAR(idate) = YEAR(CURDATE())
13:50:16 clsMysql - Parameter: i-1
13:50:16 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 1
13:50:16 clsMysql - Parameter: i-1
13:50:16 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 0
13:50:16 clsMysql - Parameter: i-1
13:50:16 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte where todo = 1
13:50:16 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM kategorie inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
13:50:16 clsMysql - Parameter: i-1
13:50:16 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:50:16 clsMysql - Parameter: i-
13:50:16 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:50:16 clsMysql - Parameter: i-
13:50:16 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:50:16 clsMysql - Parameter: i-
13:50:16 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:50:16 clsMysql - Parameter: i-
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:50:24 clsMysql - Parameter: i-1
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id IN (-1, 0)
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-1
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-1
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-9
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-9
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-4
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-4
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-5
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-5
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-6
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-6
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-7
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-7
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-8
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-8
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-10
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-10
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-11
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-11
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-12
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-12
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-13
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-13
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-14
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-14
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-15
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-15
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-16
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-16
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-17
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-17
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-18
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-18
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-19
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-19
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-20
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-20
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-21
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-21
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-22
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-22
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-23
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-23
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-26
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-26
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-27
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-27
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-28
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-28
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-29
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-29
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-30
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-30
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-31
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-31
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-32
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-32
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-25
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-25
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-24
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-24
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-2
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-2
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-3
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-3
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-35
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-35
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-34
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-34
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-36
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-36
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-37
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-37
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-38
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-38
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-39
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-39
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-40
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-40
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-41
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-41
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-42
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-42
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-43
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-43
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-44
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-44
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-45
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-45
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-46
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-46
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-47
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-47
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-48
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-48
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-49
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-49
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-50
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-50
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-52
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-52
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
13:50:24 clsMysql - Parameter: i-51
13:50:24 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
13:50:24 clsMysql - Parameter: i-51
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:50:24 clsMysql - Parameter: i-
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:50:24 clsMysql - Parameter: i-
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:50:24 clsMysql - Parameter: i-
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:50:24 clsMysql - Parameter: i-
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:50:24 clsMysql - Parameter: i-
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:50:24 clsMysql - Parameter: i-
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:50:24 clsMysql - Parameter: i-
13:50:24 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
13:50:24 clsMysql - Parameter: i-
