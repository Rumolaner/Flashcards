10:57:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:57:57 clsMysql - Parameter: i-
10:57:57 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte
10:57:57 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM kategorie
10:57:57 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE())
10:57:57 clsMysql - Parameter: i-
10:57:57 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 1 DAY))
10:57:57 clsMysql - Parameter: i-
10:57:57 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 2 DAY))
10:57:57 clsMysql - Parameter: i-
10:57:57 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM fortschritt WHERE benutzer_id = ? AND YEAR(idate) = YEAR(CURDATE())
10:57:57 clsMysql - Parameter: i-
10:57:57 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 1
10:57:57 clsMysql - Parameter: i-
10:57:57 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 0
10:57:57 clsMysql - Parameter: i-
10:57:57 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte where todo = 1
10:57:57 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM kategorie inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:57:57 clsMysql - Parameter: i-
10:57:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:57:57 clsMysql - Parameter: i-
10:57:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:57:57 clsMysql - Parameter: i-
10:57:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:57:57 clsMysql - Parameter: i-
10:57:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:57:57 clsMysql - Parameter: i-
11:26:36 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:26:36 clsMysql - Parameter: i-
11:26:36 clsMysql - Debug - Statement: SELECT id, name FROM benutzer order by name
11:26:36 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:26:36 clsMysql - Parameter: i-
11:26:36 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:26:36 clsMysql - Parameter: i-
11:26:36 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:26:36 clsMysql - Parameter: i-
11:26:36 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:26:36 clsMysql - Parameter: i-
11:26:44 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:26:44 clsMysql - Parameter: i-
11:26:44 clsMysql - Debug - Statement: SELECT count(name) as anzahl, id FROM benutzer WHERE id = ?
11:26:44 clsMysql - Parameter: i-1
11:26:44 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:26:44 clsMysql - Parameter: i-1
11:26:44 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte
11:26:44 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM kategorie
11:26:44 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE())
11:26:44 clsMysql - Parameter: i-1
11:26:44 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 1 DAY))
11:26:44 clsMysql - Parameter: i-1
11:26:44 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 2 DAY))
11:26:44 clsMysql - Parameter: i-1
11:26:44 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM fortschritt WHERE benutzer_id = ? AND YEAR(idate) = YEAR(CURDATE())
11:26:44 clsMysql - Parameter: i-1
11:26:44 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 1
11:26:44 clsMysql - Parameter: i-1
11:26:44 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 0
11:26:44 clsMysql - Parameter: i-1
11:26:44 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte where todo = 1
11:26:44 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM kategorie inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:26:44 clsMysql - Parameter: i-1
11:26:44 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:26:44 clsMysql - Parameter: i-
11:26:44 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:26:44 clsMysql - Parameter: i-
11:26:44 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:26:44 clsMysql - Parameter: i-
11:26:44 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:26:44 clsMysql - Parameter: i-
11:27:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:27:05 clsMysql - Parameter: i-1
11:27:05 clsMysql - Debug - Statement: SELECT DISTINCT id, name FROM benutzerset where benutzer_id = ? ORDER BY name
11:27:05 clsMysql - Parameter: i-1
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where parent_id = -1 GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-2
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-35
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-34
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-36
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-37
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-38
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-39
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-40
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-41
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-43
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-44
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-45
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-46
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-42
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-47
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-3
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-48
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-49
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-50
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-52
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-51
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-53
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-1
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-20
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-31
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-32
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-23
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-27
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-28
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-29
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-21
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-22
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-26
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-30
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-10
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-13
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-16
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-14
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-17
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-18
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-11
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-12
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-15
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-19
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-9
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-4
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-5
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-6
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-7
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-8
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-25
11:27:05 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:27:05 clsMysql - Parameter: i-24
11:27:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:27:05 clsMysql - Parameter: i-
11:27:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:27:05 clsMysql - Parameter: i-
11:27:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:27:05 clsMysql - Parameter: i-
11:27:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:27:05 clsMysql - Parameter: i-
11:27:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:27:05 clsMysql - Parameter: i-
11:27:09 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:27:09 clsMysql - Parameter: i-1
11:27:09 clsMysql - Debug - Statement: DELETE FROM benutzer2kategorie where benutzer_id = ?
11:27:09 clsMysql - Parameter: i-1
11:27:09 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:27:09 clsMysql - Parameter: ii-1-31
11:27:09 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:27:09 clsMysql - Parameter: ii-1-32
11:27:09 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:27:09 clsMysql - Parameter: ii-1-23
11:27:09 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:27:09 clsMysql - Parameter: ii-1-27
11:27:09 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:27:09 clsMysql - Parameter: ii-1-28
11:27:09 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:27:09 clsMysql - Parameter: ii-1-29
11:27:09 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:27:09 clsMysql - Parameter: ii-1-21
11:27:09 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:27:09 clsMysql - Parameter: ii-1-22
11:27:09 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:27:09 clsMysql - Parameter: ii-1-26
11:27:09 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:27:09 clsMysql - Parameter: ii-1-30
11:27:09 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:27:09 clsMysql - Parameter: ii-1-13
11:27:09 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:27:09 clsMysql - Parameter: ii-1-16
11:27:09 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:27:09 clsMysql - Parameter: ii-1-14
11:27:09 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:27:09 clsMysql - Parameter: ii-1-17
11:27:09 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:27:09 clsMysql - Parameter: ii-1-18
11:27:09 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:27:09 clsMysql - Parameter: ii-1-11
11:27:09 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:27:09 clsMysql - Parameter: ii-1-12
11:27:09 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:27:09 clsMysql - Parameter: ii-1-15
11:27:09 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:27:09 clsMysql - Parameter: ii-1-19
11:27:09 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:27:09 clsMysql - Parameter: ii-1-4
11:27:09 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:27:09 clsMysql - Parameter: ii-1-5
11:27:09 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:27:09 clsMysql - Parameter: ii-1-6
11:27:09 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:27:09 clsMysql - Parameter: ii-1-7
11:27:09 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:27:09 clsMysql - Parameter: ii-1-8
11:27:09 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:27:09 clsMysql - Parameter: i-1
11:27:09 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:27:09 clsMysql - Parameter: ii-1-1
11:27:09 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:27:09 clsMysql - Parameter: i-15
11:27:09 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:27:09 clsMysql - Parameter: i-10
11:27:09 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:27:09 clsMysql - Parameter: i-1
11:27:09 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:27:09 clsMysql - Parameter: i--1
11:27:09 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:27:09 clsMysql - Parameter: ii-1-1
11:27:09 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:27:09 clsMysql - Parameter: i-
11:27:09 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:27:09 clsMysql - Parameter: i-
11:27:09 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:27:09 clsMysql - Parameter: i-
11:27:09 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:27:09 clsMysql - Parameter: i-
11:27:09 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:27:09 clsMysql - Parameter: i-
11:27:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:27:13 clsMysql - Parameter: i-1
11:27:13 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:27:13 clsMysql - Parameter: i-273
11:27:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:27:18 clsMysql - Parameter: i-1
11:27:18 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:27:18 clsMysql - Parameter: ii-1-273
11:27:18 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:27:18 clsMysql - Parameter: ii-1-273
11:27:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:27:18 clsMysql - Parameter: i-1
11:27:18 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:27:18 clsMysql - Parameter: ii-1-1
11:27:19 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:27:19 clsMysql - Parameter: i-17
11:27:19 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:27:19 clsMysql - Parameter: i-10
11:27:19 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:27:19 clsMysql - Parameter: i-1
11:27:19 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:27:19 clsMysql - Parameter: i--1
11:27:19 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:27:19 clsMysql - Parameter: ii-1-1
11:27:19 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:27:19 clsMysql - Parameter: i-
11:27:19 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:27:19 clsMysql - Parameter: i-
11:27:19 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:27:19 clsMysql - Parameter: i-
11:27:19 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:27:19 clsMysql - Parameter: i-
11:27:19 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:27:19 clsMysql - Parameter: i-
11:27:27 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:27:27 clsMysql - Parameter: i-1
11:27:27 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:27:27 clsMysql - Parameter: i-329
11:27:36 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:27:36 clsMysql - Parameter: i-1
11:27:36 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 1, 0) ON DUPLICATE KEY UPDATE fortschritt = IF(fortschritt <= 2, 1, fortschritt - 1), datum = NOW(), gewusst = 0
11:27:36 clsMysql - Parameter: ii-1-329
11:27:36 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 0)
11:27:36 clsMysql - Parameter: ii-1-329
11:27:36 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:27:36 clsMysql - Parameter: i-1
11:27:36 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:27:36 clsMysql - Parameter: ii-1-1
11:27:36 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:27:36 clsMysql - Parameter: i-4
11:27:36 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:27:36 clsMysql - Parameter: i-9
11:27:36 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:27:36 clsMysql - Parameter: i-1
11:27:36 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:27:36 clsMysql - Parameter: i--1
11:27:36 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:27:36 clsMysql - Parameter: ii-1-1
11:27:36 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:27:36 clsMysql - Parameter: i-
11:27:36 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:27:36 clsMysql - Parameter: i-
11:27:36 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:27:36 clsMysql - Parameter: i-
11:27:36 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:27:36 clsMysql - Parameter: i-
11:27:36 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:27:36 clsMysql - Parameter: i-
11:27:44 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:27:44 clsMysql - Parameter: i-1
11:27:44 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:27:44 clsMysql - Parameter: i-15
11:28:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:28:07 clsMysql - Parameter: i-1
11:28:07 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:28:07 clsMysql - Parameter: ii-1-15
11:28:07 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:28:07 clsMysql - Parameter: ii-1-15
11:28:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:28:07 clsMysql - Parameter: i-1
11:28:07 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:28:07 clsMysql - Parameter: ii-1-1
11:28:07 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:28:07 clsMysql - Parameter: i-27
11:28:07 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:28:07 clsMysql - Parameter: i-20
11:28:07 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:28:07 clsMysql - Parameter: i-1
11:28:07 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:28:07 clsMysql - Parameter: i--1
11:28:07 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:28:07 clsMysql - Parameter: ii-1-1
11:28:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:28:07 clsMysql - Parameter: i-
11:28:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:28:07 clsMysql - Parameter: i-
11:28:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:28:07 clsMysql - Parameter: i-
11:28:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:28:07 clsMysql - Parameter: i-
11:28:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:28:07 clsMysql - Parameter: i-
11:28:19 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:28:19 clsMysql - Parameter: i-1
11:28:19 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:28:19 clsMysql - Parameter: i-522
11:28:23 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:28:23 clsMysql - Parameter: i-1
11:28:23 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:28:23 clsMysql - Parameter: ii-1-522
11:28:23 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:28:23 clsMysql - Parameter: ii-1-522
11:28:23 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:28:23 clsMysql - Parameter: i-1
11:28:23 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:28:23 clsMysql - Parameter: ii-1-1
11:28:23 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:28:23 clsMysql - Parameter: i-21
11:28:23 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:28:23 clsMysql - Parameter: i-20
11:28:23 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:28:23 clsMysql - Parameter: i-1
11:28:23 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:28:23 clsMysql - Parameter: i--1
11:28:23 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:28:23 clsMysql - Parameter: ii-1-1
11:28:23 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:28:23 clsMysql - Parameter: i-
11:28:23 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:28:23 clsMysql - Parameter: i-
11:28:23 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:28:23 clsMysql - Parameter: i-
11:28:23 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:28:23 clsMysql - Parameter: i-
11:28:23 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:28:23 clsMysql - Parameter: i-
11:28:42 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:28:42 clsMysql - Parameter: i-1
11:28:42 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:28:42 clsMysql - Parameter: i-444
11:28:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:28:46 clsMysql - Parameter: i-1
11:28:46 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:28:46 clsMysql - Parameter: ii-1-444
11:28:46 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:28:46 clsMysql - Parameter: ii-1-444
11:28:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:28:46 clsMysql - Parameter: i-1
11:28:46 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:28:46 clsMysql - Parameter: ii-1-1
11:28:46 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:28:46 clsMysql - Parameter: i-23
11:28:46 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:28:46 clsMysql - Parameter: i-20
11:28:46 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:28:46 clsMysql - Parameter: i-1
11:28:46 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:28:46 clsMysql - Parameter: i--1
11:28:46 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:28:46 clsMysql - Parameter: ii-1-1
11:28:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:28:46 clsMysql - Parameter: i-
11:28:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:28:46 clsMysql - Parameter: i-
11:28:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:28:46 clsMysql - Parameter: i-
11:28:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:28:46 clsMysql - Parameter: i-
11:28:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:28:46 clsMysql - Parameter: i-
11:29:27 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:29:27 clsMysql - Parameter: i-1
11:29:27 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:29:27 clsMysql - Parameter: i-484
11:29:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:29:57 clsMysql - Parameter: i-1
11:29:57 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:29:57 clsMysql - Parameter: ii-1-484
11:29:57 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:29:57 clsMysql - Parameter: ii-1-484
11:29:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:29:57 clsMysql - Parameter: i-1
11:29:57 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:29:57 clsMysql - Parameter: ii-1-1
11:29:57 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:29:57 clsMysql - Parameter: i-16
11:29:57 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:29:57 clsMysql - Parameter: i-10
11:29:57 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:29:57 clsMysql - Parameter: i-1
11:29:57 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:29:57 clsMysql - Parameter: i--1
11:29:57 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:29:57 clsMysql - Parameter: ii-1-1
11:29:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:29:57 clsMysql - Parameter: i-
11:29:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:29:57 clsMysql - Parameter: i-
11:29:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:29:57 clsMysql - Parameter: i-
11:29:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:29:57 clsMysql - Parameter: i-
11:29:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:29:57 clsMysql - Parameter: i-
11:30:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:30:00 clsMysql - Parameter: i-1
11:30:00 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:30:00 clsMysql - Parameter: i-297
11:30:03 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:30:03 clsMysql - Parameter: i-1
11:30:03 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:30:03 clsMysql - Parameter: ii-1-297
11:30:03 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:30:03 clsMysql - Parameter: ii-1-297
11:30:03 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:30:03 clsMysql - Parameter: i-1
11:30:03 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:30:03 clsMysql - Parameter: ii-1-1
11:30:04 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:30:04 clsMysql - Parameter: i-7
11:30:04 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:30:04 clsMysql - Parameter: i-9
11:30:04 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:30:04 clsMysql - Parameter: i-1
11:30:04 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:30:04 clsMysql - Parameter: i--1
11:30:04 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:30:04 clsMysql - Parameter: ii-1-1
11:30:04 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:30:04 clsMysql - Parameter: i-
11:30:04 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:30:04 clsMysql - Parameter: i-
11:30:04 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:30:04 clsMysql - Parameter: i-
11:30:04 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:30:04 clsMysql - Parameter: i-
11:30:04 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:30:04 clsMysql - Parameter: i-
11:30:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:30:13 clsMysql - Parameter: i-1
11:30:13 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:30:13 clsMysql - Parameter: i-162
11:30:25 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:30:25 clsMysql - Parameter: i-1
11:30:25 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:30:25 clsMysql - Parameter: ii-1-162
11:30:25 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:30:25 clsMysql - Parameter: ii-1-162
11:30:25 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:30:25 clsMysql - Parameter: i-1
11:30:25 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:30:25 clsMysql - Parameter: ii-1-1
11:30:25 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:30:25 clsMysql - Parameter: i-5
11:30:25 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:30:25 clsMysql - Parameter: i-9
11:30:25 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:30:25 clsMysql - Parameter: i-1
11:30:25 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:30:25 clsMysql - Parameter: i--1
11:30:25 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:30:25 clsMysql - Parameter: ii-1-1
11:30:25 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:30:25 clsMysql - Parameter: i-
11:30:25 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:30:25 clsMysql - Parameter: i-
11:30:25 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:30:25 clsMysql - Parameter: i-
11:30:25 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:30:25 clsMysql - Parameter: i-
11:30:25 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:30:25 clsMysql - Parameter: i-
11:30:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:30:43 clsMysql - Parameter: i-1
11:30:43 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:30:43 clsMysql - Parameter: i-110
11:30:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:30:45 clsMysql - Parameter: i-1
11:30:45 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:30:45 clsMysql - Parameter: ii-1-110
11:30:45 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:30:45 clsMysql - Parameter: ii-1-110
11:30:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:30:45 clsMysql - Parameter: i-1
11:30:45 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:30:45 clsMysql - Parameter: ii-1-1
11:30:45 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:30:45 clsMysql - Parameter: i-15
11:30:45 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:30:45 clsMysql - Parameter: i-10
11:30:45 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:30:45 clsMysql - Parameter: i-1
11:30:45 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:30:45 clsMysql - Parameter: i--1
11:30:45 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:30:45 clsMysql - Parameter: ii-1-1
11:30:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:30:45 clsMysql - Parameter: i-
11:30:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:30:45 clsMysql - Parameter: i-
11:30:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:30:45 clsMysql - Parameter: i-
11:30:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:30:45 clsMysql - Parameter: i-
11:30:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:30:45 clsMysql - Parameter: i-
11:30:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:30:57 clsMysql - Parameter: i-1
11:30:57 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:30:57 clsMysql - Parameter: i-283
11:31:01 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:31:01 clsMysql - Parameter: i-1
11:31:01 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 1, 0) ON DUPLICATE KEY UPDATE fortschritt = IF(fortschritt <= 2, 1, fortschritt - 1), datum = NOW(), gewusst = 0
11:31:01 clsMysql - Parameter: ii-1-283
11:31:01 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 0)
11:31:01 clsMysql - Parameter: ii-1-283
11:31:01 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:31:01 clsMysql - Parameter: i-1
11:31:01 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:31:01 clsMysql - Parameter: ii-1-1
11:31:01 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:31:01 clsMysql - Parameter: i-7
11:31:01 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:31:01 clsMysql - Parameter: i-9
11:31:01 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:31:01 clsMysql - Parameter: i-1
11:31:01 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:31:01 clsMysql - Parameter: i--1
11:31:01 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:31:01 clsMysql - Parameter: ii-1-1
11:31:01 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:31:01 clsMysql - Parameter: i-
11:31:01 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:31:01 clsMysql - Parameter: i-
11:31:01 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:31:01 clsMysql - Parameter: i-
11:31:01 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:31:01 clsMysql - Parameter: i-
11:31:01 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:31:01 clsMysql - Parameter: i-
11:31:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:31:14 clsMysql - Parameter: i-1
11:31:14 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:31:14 clsMysql - Parameter: i-151
11:31:37 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:31:37 clsMysql - Parameter: i-1
11:31:37 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:31:37 clsMysql - Parameter: ii-1-151
11:31:37 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:31:37 clsMysql - Parameter: ii-1-151
11:31:37 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:31:37 clsMysql - Parameter: i-1
11:31:37 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:31:37 clsMysql - Parameter: ii-1-1
11:31:37 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:31:37 clsMysql - Parameter: i-19
11:31:37 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:31:37 clsMysql - Parameter: i-10
11:31:37 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:31:37 clsMysql - Parameter: i-1
11:31:37 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:31:37 clsMysql - Parameter: i--1
11:31:37 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:31:37 clsMysql - Parameter: ii-1-1
11:31:37 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:31:37 clsMysql - Parameter: i-
11:31:37 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:31:37 clsMysql - Parameter: i-
11:31:37 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:31:37 clsMysql - Parameter: i-
11:31:37 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:31:37 clsMysql - Parameter: i-
11:31:37 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:31:37 clsMysql - Parameter: i-
11:31:42 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:31:42 clsMysql - Parameter: i-1
11:31:42 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:31:42 clsMysql - Parameter: i-402
11:31:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:31:47 clsMysql - Parameter: i-1
11:31:47 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:31:47 clsMysql - Parameter: ii-1-402
11:31:47 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:31:47 clsMysql - Parameter: ii-1-402
11:31:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:31:47 clsMysql - Parameter: i-1
11:31:47 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:31:47 clsMysql - Parameter: ii-1-1
11:31:47 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:31:47 clsMysql - Parameter: i-21
11:31:47 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:31:47 clsMysql - Parameter: i-20
11:31:47 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:31:47 clsMysql - Parameter: i-1
11:31:47 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:31:47 clsMysql - Parameter: i--1
11:31:47 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:31:47 clsMysql - Parameter: ii-1-1
11:31:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:31:47 clsMysql - Parameter: i-
11:31:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:31:47 clsMysql - Parameter: i-
11:31:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:31:47 clsMysql - Parameter: i-
11:31:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:31:47 clsMysql - Parameter: i-
11:31:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:31:47 clsMysql - Parameter: i-
11:32:04 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:32:04 clsMysql - Parameter: i-1
11:32:04 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:32:04 clsMysql - Parameter: i-453
11:32:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:32:20 clsMysql - Parameter: i-1
11:32:20 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:32:20 clsMysql - Parameter: ii-1-453
11:32:20 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:32:20 clsMysql - Parameter: ii-1-453
11:32:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:32:20 clsMysql - Parameter: i-1
11:32:20 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:32:20 clsMysql - Parameter: ii-1-1
11:32:20 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:32:20 clsMysql - Parameter: i-4
11:32:20 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:32:20 clsMysql - Parameter: i-9
11:32:20 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:32:20 clsMysql - Parameter: i-1
11:32:20 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:32:20 clsMysql - Parameter: i--1
11:32:20 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:32:20 clsMysql - Parameter: ii-1-1
11:32:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:32:20 clsMysql - Parameter: i-
11:32:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:32:20 clsMysql - Parameter: i-
11:32:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:32:20 clsMysql - Parameter: i-
11:32:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:32:20 clsMysql - Parameter: i-
11:32:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:32:20 clsMysql - Parameter: i-
11:32:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:32:30 clsMysql - Parameter: i-1
11:32:30 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:32:30 clsMysql - Parameter: i-18
11:32:56 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:32:56 clsMysql - Parameter: i-1
11:32:56 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:32:56 clsMysql - Parameter: ii-1-18
11:32:56 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:32:56 clsMysql - Parameter: ii-1-18
11:32:56 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:32:56 clsMysql - Parameter: i-1
11:32:56 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:32:56 clsMysql - Parameter: ii-1-1
11:32:57 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:32:57 clsMysql - Parameter: i-12
11:32:57 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:32:57 clsMysql - Parameter: i-10
11:32:57 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:32:57 clsMysql - Parameter: i-1
11:32:57 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:32:57 clsMysql - Parameter: i--1
11:32:57 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:32:57 clsMysql - Parameter: ii-1-1
11:32:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:32:57 clsMysql - Parameter: i-
11:32:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:32:57 clsMysql - Parameter: i-
11:32:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:32:57 clsMysql - Parameter: i-
11:32:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:32:57 clsMysql - Parameter: i-
11:32:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:32:57 clsMysql - Parameter: i-
11:33:01 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:33:01 clsMysql - Parameter: i-1
11:33:01 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:33:01 clsMysql - Parameter: i-223
11:33:09 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:33:09 clsMysql - Parameter: i-1
11:33:09 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:33:09 clsMysql - Parameter: ii-1-223
11:33:09 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:33:09 clsMysql - Parameter: ii-1-223
11:33:09 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:33:09 clsMysql - Parameter: i-1
11:33:09 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:33:09 clsMysql - Parameter: ii-1-1
11:33:09 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:33:09 clsMysql - Parameter: i-19
11:33:09 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:33:09 clsMysql - Parameter: i-10
11:33:09 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:33:09 clsMysql - Parameter: i-1
11:33:09 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:33:09 clsMysql - Parameter: i--1
11:33:09 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:33:09 clsMysql - Parameter: ii-1-1
11:33:09 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:33:09 clsMysql - Parameter: i-
11:33:09 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:33:09 clsMysql - Parameter: i-
11:33:09 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:33:09 clsMysql - Parameter: i-
11:33:09 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:33:09 clsMysql - Parameter: i-
11:33:09 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:33:09 clsMysql - Parameter: i-
11:33:17 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:33:17 clsMysql - Parameter: i-1
11:33:17 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:33:17 clsMysql - Parameter: i-430
11:33:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:33:29 clsMysql - Parameter: i-1
11:33:29 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:33:29 clsMysql - Parameter: ii-1-430
11:33:29 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:33:29 clsMysql - Parameter: ii-1-430
11:33:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:33:29 clsMysql - Parameter: i-1
11:33:29 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:33:29 clsMysql - Parameter: ii-1-1
11:33:29 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:33:29 clsMysql - Parameter: i-7
11:33:29 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:33:29 clsMysql - Parameter: i-9
11:33:29 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:33:29 clsMysql - Parameter: i-1
11:33:29 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:33:29 clsMysql - Parameter: i--1
11:33:29 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:33:29 clsMysql - Parameter: ii-1-1
11:33:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:33:29 clsMysql - Parameter: i-
11:33:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:33:29 clsMysql - Parameter: i-
11:33:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:33:29 clsMysql - Parameter: i-
11:33:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:33:29 clsMysql - Parameter: i-
11:33:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:33:29 clsMysql - Parameter: i-
11:33:35 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:33:35 clsMysql - Parameter: i-1
11:33:35 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:33:35 clsMysql - Parameter: i-146
11:33:42 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:33:42 clsMysql - Parameter: i-1
11:33:42 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:33:42 clsMysql - Parameter: ii-1-146
11:33:42 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:33:42 clsMysql - Parameter: ii-1-146
11:33:42 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:33:42 clsMysql - Parameter: i-1
11:33:42 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:33:42 clsMysql - Parameter: ii-1-1
11:33:42 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:33:42 clsMysql - Parameter: i-13
11:33:42 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:33:42 clsMysql - Parameter: i-10
11:33:42 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:33:42 clsMysql - Parameter: i-1
11:33:42 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:33:42 clsMysql - Parameter: i--1
11:33:42 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:33:42 clsMysql - Parameter: ii-1-1
11:33:42 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:33:42 clsMysql - Parameter: i-
11:33:42 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:33:42 clsMysql - Parameter: i-
11:33:42 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:33:42 clsMysql - Parameter: i-
11:33:42 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:33:42 clsMysql - Parameter: i-
11:33:42 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:33:42 clsMysql - Parameter: i-
11:33:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:33:46 clsMysql - Parameter: i-1
11:33:46 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:33:46 clsMysql - Parameter: i-236
11:33:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:33:49 clsMysql - Parameter: i-1
11:33:49 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:33:49 clsMysql - Parameter: ii-1-236
11:33:49 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:33:49 clsMysql - Parameter: ii-1-236
11:33:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:33:49 clsMysql - Parameter: i-1
11:33:49 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:33:49 clsMysql - Parameter: ii-1-1
11:33:49 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:33:49 clsMysql - Parameter: i-19
11:33:49 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:33:49 clsMysql - Parameter: i-10
11:33:49 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:33:49 clsMysql - Parameter: i-1
11:33:49 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:33:49 clsMysql - Parameter: i--1
11:33:49 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:33:49 clsMysql - Parameter: ii-1-1
11:33:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:33:49 clsMysql - Parameter: i-
11:33:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:33:49 clsMysql - Parameter: i-
11:33:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:33:49 clsMysql - Parameter: i-
11:33:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:33:49 clsMysql - Parameter: i-
11:33:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:33:49 clsMysql - Parameter: i-
11:33:51 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:33:51 clsMysql - Parameter: i-1
11:33:51 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:33:51 clsMysql - Parameter: i-426
11:34:03 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:34:03 clsMysql - Parameter: i-1
11:34:03 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:34:03 clsMysql - Parameter: ii-1-426
11:34:03 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:34:03 clsMysql - Parameter: ii-1-426
11:34:03 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:34:03 clsMysql - Parameter: i-1
11:34:03 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:34:03 clsMysql - Parameter: ii-1-1
11:34:03 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:34:03 clsMysql - Parameter: i-28
11:34:03 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:34:03 clsMysql - Parameter: i-20
11:34:03 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:34:03 clsMysql - Parameter: i-1
11:34:03 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:34:03 clsMysql - Parameter: i--1
11:34:03 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:34:03 clsMysql - Parameter: ii-1-1
11:34:03 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:34:03 clsMysql - Parameter: i-
11:34:03 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:34:03 clsMysql - Parameter: i-
11:34:03 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:34:03 clsMysql - Parameter: i-
11:34:03 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:34:03 clsMysql - Parameter: i-
11:34:03 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:34:03 clsMysql - Parameter: i-
11:34:28 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:34:28 clsMysql - Parameter: i-1
11:34:28 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:34:28 clsMysql - Parameter: i-537
11:41:06 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:06 clsMysql - Parameter: i-1
11:41:06 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:41:06 clsMysql - Parameter: ii-1-537
11:41:06 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:41:06 clsMysql - Parameter: ii-1-537
11:41:06 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:06 clsMysql - Parameter: i-1
11:41:06 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:41:06 clsMysql - Parameter: ii-1-1
11:41:06 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:41:06 clsMysql - Parameter: i-5
11:41:06 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:41:06 clsMysql - Parameter: i-9
11:41:06 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:41:06 clsMysql - Parameter: i-1
11:41:06 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:41:06 clsMysql - Parameter: i--1
11:41:06 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:41:06 clsMysql - Parameter: ii-1-1
11:41:06 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:06 clsMysql - Parameter: i-
11:41:06 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:06 clsMysql - Parameter: i-
11:41:06 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:06 clsMysql - Parameter: i-
11:41:06 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:06 clsMysql - Parameter: i-
11:41:06 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:06 clsMysql - Parameter: i-
11:41:32 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:32 clsMysql - Parameter: i-1
11:41:32 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:41:32 clsMysql - Parameter: i-88
11:41:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:43 clsMysql - Parameter: i-1
11:41:43 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:41:43 clsMysql - Parameter: ii-1-88
11:41:43 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:41:43 clsMysql - Parameter: ii-1-88
11:41:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:43 clsMysql - Parameter: i-1
11:41:43 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:41:43 clsMysql - Parameter: ii-1-1
11:41:43 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:41:43 clsMysql - Parameter: i-6
11:41:43 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:41:43 clsMysql - Parameter: i-9
11:41:43 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:41:43 clsMysql - Parameter: i-1
11:41:43 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:41:43 clsMysql - Parameter: i--1
11:41:43 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:41:43 clsMysql - Parameter: ii-1-1
11:41:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:43 clsMysql - Parameter: i-
11:41:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:43 clsMysql - Parameter: i-
11:41:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:43 clsMysql - Parameter: i-
11:41:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:43 clsMysql - Parameter: i-
11:41:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:43 clsMysql - Parameter: i-
11:41:54 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:41:54 clsMysql - Parameter: i-1
11:41:54 clsMysql - Debug - Statement: SELECT hinweis FROM karte WHERE id = ?
11:41:54 clsMysql - Parameter: i-143
11:42:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:42:20 clsMysql - Parameter: i-1
11:42:20 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:42:20 clsMysql - Parameter: ii-1-143
11:42:20 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:42:20 clsMysql - Parameter: ii-1-143
11:42:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:42:20 clsMysql - Parameter: i-1
11:42:20 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:42:20 clsMysql - Parameter: ii-1-1
11:42:20 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:42:20 clsMysql - Parameter: i-6
11:42:20 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:42:20 clsMysql - Parameter: i-9
11:42:20 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:42:20 clsMysql - Parameter: i-1
11:42:20 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:42:20 clsMysql - Parameter: i--1
11:42:20 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:42:20 clsMysql - Parameter: ii-1-1
11:42:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:42:20 clsMysql - Parameter: i-
11:42:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:42:20 clsMysql - Parameter: i-
11:42:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:42:20 clsMysql - Parameter: i-
11:42:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:42:20 clsMysql - Parameter: i-
11:42:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:42:20 clsMysql - Parameter: i-
11:42:27 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:42:27 clsMysql - Parameter: i-1
11:42:27 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:42:27 clsMysql - Parameter: i-132
11:42:35 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:42:35 clsMysql - Parameter: i-1
11:42:35 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:42:35 clsMysql - Parameter: ii-1-132
11:42:35 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:42:35 clsMysql - Parameter: ii-1-132
11:42:35 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:42:35 clsMysql - Parameter: i-1
11:42:35 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:42:35 clsMysql - Parameter: ii-1-1
11:42:35 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:42:35 clsMysql - Parameter: i-6
11:42:35 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:42:35 clsMysql - Parameter: i-9
11:42:35 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:42:35 clsMysql - Parameter: i-1
11:42:35 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:42:35 clsMysql - Parameter: i--1
11:42:35 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:42:35 clsMysql - Parameter: ii-1-1
11:42:35 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:42:35 clsMysql - Parameter: i-
11:42:35 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:42:35 clsMysql - Parameter: i-
11:42:35 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:42:35 clsMysql - Parameter: i-
11:42:35 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:42:35 clsMysql - Parameter: i-
11:42:35 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:42:35 clsMysql - Parameter: i-
11:43:22 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:43:22 clsMysql - Parameter: i-1
11:43:22 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte
11:43:22 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM kategorie
11:43:22 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE())
11:43:22 clsMysql - Parameter: i-1
11:43:22 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 1 DAY))
11:43:22 clsMysql - Parameter: i-1
11:43:23 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 2 DAY))
11:43:23 clsMysql - Parameter: i-1
11:43:23 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM fortschritt WHERE benutzer_id = ? AND YEAR(idate) = YEAR(CURDATE())
11:43:23 clsMysql - Parameter: i-1
11:43:23 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 1
11:43:23 clsMysql - Parameter: i-1
11:43:23 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 0
11:43:23 clsMysql - Parameter: i-1
11:43:23 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte where todo = 1
11:43:23 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM kategorie inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:43:23 clsMysql - Parameter: i-1
11:43:23 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:43:23 clsMysql - Parameter: i-
11:43:23 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:43:23 clsMysql - Parameter: i-
11:43:23 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:43:23 clsMysql - Parameter: i-
11:43:23 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:43:23 clsMysql - Parameter: i-
11:44:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:44:13 clsMysql - Parameter: i-1
11:44:13 clsMysql - Debug - Statement: SELECT DISTINCT id, name FROM benutzerset where benutzer_id = ? ORDER BY name
11:44:13 clsMysql - Parameter: i-1
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where parent_id = -1 GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-2
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-35
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-34
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-36
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-37
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-38
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-39
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-40
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-41
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-43
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-44
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-45
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-46
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-42
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-47
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-3
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-48
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-49
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-50
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-52
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-51
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-53
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-1
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-20
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-31
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-32
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-23
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-27
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-28
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-29
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-21
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-22
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-26
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-30
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-10
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-13
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-16
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-14
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-17
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-18
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-11
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-12
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-15
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-19
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-9
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-4
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-5
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-6
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-7
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-8
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-25
11:44:13 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:44:13 clsMysql - Parameter: i-24
11:44:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:44:14 clsMysql - Parameter: i-
11:44:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:44:14 clsMysql - Parameter: i-
11:44:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:44:14 clsMysql - Parameter: i-
11:44:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:44:14 clsMysql - Parameter: i-
11:44:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:44:14 clsMysql - Parameter: i-
11:44:16 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:44:16 clsMysql - Parameter: i-1
11:44:16 clsMysql - Debug - Statement: DELETE FROM benutzer2kategorie where benutzer_id = ?
11:44:16 clsMysql - Parameter: i-1
11:44:16 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:44:16 clsMysql - Parameter: ii-1-31
11:44:16 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:44:16 clsMysql - Parameter: ii-1-32
11:44:16 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:44:16 clsMysql - Parameter: ii-1-23
11:44:16 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:44:16 clsMysql - Parameter: ii-1-27
11:44:16 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:44:16 clsMysql - Parameter: ii-1-28
11:44:16 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:44:16 clsMysql - Parameter: ii-1-29
11:44:16 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:44:16 clsMysql - Parameter: ii-1-21
11:44:16 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:44:16 clsMysql - Parameter: ii-1-22
11:44:16 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:44:16 clsMysql - Parameter: ii-1-26
11:44:16 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:44:16 clsMysql - Parameter: ii-1-30
11:44:16 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:44:16 clsMysql - Parameter: ii-1-13
11:44:16 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:44:16 clsMysql - Parameter: ii-1-16
11:44:16 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:44:16 clsMysql - Parameter: ii-1-14
11:44:16 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:44:16 clsMysql - Parameter: ii-1-17
11:44:16 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:44:16 clsMysql - Parameter: ii-1-18
11:44:16 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:44:16 clsMysql - Parameter: ii-1-11
11:44:16 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:44:16 clsMysql - Parameter: ii-1-12
11:44:16 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:44:16 clsMysql - Parameter: ii-1-15
11:44:16 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:44:16 clsMysql - Parameter: ii-1-19
11:44:16 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:44:16 clsMysql - Parameter: ii-1-4
11:44:16 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:44:16 clsMysql - Parameter: ii-1-5
11:44:16 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:44:16 clsMysql - Parameter: ii-1-6
11:44:16 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:44:16 clsMysql - Parameter: ii-1-7
11:44:16 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:44:16 clsMysql - Parameter: ii-1-8
11:44:16 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:44:16 clsMysql - Parameter: i-1
11:44:16 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:44:16 clsMysql - Parameter: ii-1-1
11:44:16 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:44:16 clsMysql - Parameter: i-21
11:44:16 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:44:16 clsMysql - Parameter: i-20
11:44:16 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:44:16 clsMysql - Parameter: i-1
11:44:16 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:44:16 clsMysql - Parameter: i--1
11:44:16 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:44:16 clsMysql - Parameter: ii-1-1
11:44:16 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:44:16 clsMysql - Parameter: i-
11:44:16 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:44:16 clsMysql - Parameter: i-
11:44:16 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:44:16 clsMysql - Parameter: i-
11:44:16 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:44:16 clsMysql - Parameter: i-
11:44:16 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:44:16 clsMysql - Parameter: i-
11:44:22 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:44:22 clsMysql - Parameter: i-1
11:44:22 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:44:22 clsMysql - Parameter: i-451
11:44:32 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:44:32 clsMysql - Parameter: i-1
11:44:32 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:44:32 clsMysql - Parameter: ii-1-451
11:44:32 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:44:32 clsMysql - Parameter: ii-1-451
11:44:32 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:44:32 clsMysql - Parameter: i-1
11:44:32 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:44:32 clsMysql - Parameter: ii-1-1
11:44:32 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:44:32 clsMysql - Parameter: i-16
11:44:32 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:44:32 clsMysql - Parameter: i-10
11:44:32 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:44:32 clsMysql - Parameter: i-1
11:44:32 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:44:32 clsMysql - Parameter: i--1
11:44:32 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:44:32 clsMysql - Parameter: ii-1-1
11:44:32 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:44:32 clsMysql - Parameter: i-
11:44:32 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:44:32 clsMysql - Parameter: i-
11:44:32 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:44:32 clsMysql - Parameter: i-
11:44:32 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:44:32 clsMysql - Parameter: i-
11:44:32 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:44:32 clsMysql - Parameter: i-
11:44:35 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:44:35 clsMysql - Parameter: i-1
11:44:35 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:44:35 clsMysql - Parameter: i-314
11:46:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:46:43 clsMysql - Parameter: i-1
11:46:43 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:46:43 clsMysql - Parameter: ii-1-314
11:46:43 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:46:43 clsMysql - Parameter: ii-1-314
11:46:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:46:43 clsMysql - Parameter: i-1
11:46:43 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:46:43 clsMysql - Parameter: ii-1-1
11:46:43 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:46:43 clsMysql - Parameter: i-17
11:46:43 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:46:43 clsMysql - Parameter: i-10
11:46:43 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:46:43 clsMysql - Parameter: i-1
11:46:43 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:46:43 clsMysql - Parameter: i--1
11:46:43 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:46:43 clsMysql - Parameter: ii-1-1
11:46:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:46:43 clsMysql - Parameter: i-
11:46:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:46:43 clsMysql - Parameter: i-
11:46:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:46:43 clsMysql - Parameter: i-
11:46:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:46:43 clsMysql - Parameter: i-
11:46:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:46:43 clsMysql - Parameter: i-
11:47:50 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:47:50 clsMysql - Parameter: i-1
11:47:50 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:47:50 clsMysql - Parameter: i-326
11:47:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:47:59 clsMysql - Parameter: i-1
11:47:59 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:47:59 clsMysql - Parameter: ii-1-326
11:47:59 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:47:59 clsMysql - Parameter: ii-1-326
11:47:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:47:59 clsMysql - Parameter: i-1
11:47:59 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:47:59 clsMysql - Parameter: ii-1-1
11:47:59 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:47:59 clsMysql - Parameter: i-22
11:47:59 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:47:59 clsMysql - Parameter: i-20
11:47:59 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:47:59 clsMysql - Parameter: i-1
11:47:59 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:47:59 clsMysql - Parameter: i--1
11:47:59 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:47:59 clsMysql - Parameter: ii-1-1
11:47:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:47:59 clsMysql - Parameter: i-
11:47:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:47:59 clsMysql - Parameter: i-
11:47:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:47:59 clsMysql - Parameter: i-
11:47:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:47:59 clsMysql - Parameter: i-
11:47:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:47:59 clsMysql - Parameter: i-
11:48:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:48:12 clsMysql - Parameter: i-1
11:48:12 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:48:12 clsMysql - Parameter: i-466
11:48:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:48:14 clsMysql - Parameter: i-1
11:48:14 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 1, 0) ON DUPLICATE KEY UPDATE fortschritt = IF(fortschritt <= 2, 1, fortschritt - 1), datum = NOW(), gewusst = 0
11:48:14 clsMysql - Parameter: ii-1-466
11:48:14 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 0)
11:48:14 clsMysql - Parameter: ii-1-466
11:48:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:48:14 clsMysql - Parameter: i-1
11:48:14 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:48:14 clsMysql - Parameter: ii-1-1
11:48:14 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:48:14 clsMysql - Parameter: i-17
11:48:14 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:48:14 clsMysql - Parameter: i-10
11:48:14 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:48:14 clsMysql - Parameter: i-1
11:48:14 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:48:14 clsMysql - Parameter: i--1
11:48:14 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:48:14 clsMysql - Parameter: ii-1-1
11:48:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:48:14 clsMysql - Parameter: i-
11:48:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:48:14 clsMysql - Parameter: i-
11:48:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:48:14 clsMysql - Parameter: i-
11:48:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:48:14 clsMysql - Parameter: i-
11:48:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:48:14 clsMysql - Parameter: i-
11:48:17 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:48:17 clsMysql - Parameter: i-1
11:48:17 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:48:17 clsMysql - Parameter: i-328
11:48:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:48:26 clsMysql - Parameter: i-1
11:48:26 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:48:26 clsMysql - Parameter: ii-1-328
11:48:26 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:48:26 clsMysql - Parameter: ii-1-328
11:48:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:48:26 clsMysql - Parameter: i-1
11:48:26 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:48:26 clsMysql - Parameter: ii-1-1
11:48:26 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:48:26 clsMysql - Parameter: i-21
11:48:26 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:48:26 clsMysql - Parameter: i-20
11:48:26 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:48:26 clsMysql - Parameter: i-1
11:48:26 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:48:26 clsMysql - Parameter: i--1
11:48:26 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:48:26 clsMysql - Parameter: ii-1-1
11:48:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:48:26 clsMysql - Parameter: i-
11:48:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:48:26 clsMysql - Parameter: i-
11:48:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:48:26 clsMysql - Parameter: i-
11:48:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:48:26 clsMysql - Parameter: i-
11:48:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:48:26 clsMysql - Parameter: i-
11:48:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:48:38 clsMysql - Parameter: i-1
11:48:38 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:48:38 clsMysql - Parameter: i-439
11:49:16 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:49:16 clsMysql - Parameter: i-1
11:49:16 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:49:16 clsMysql - Parameter: ii-1-439
11:49:16 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:49:16 clsMysql - Parameter: ii-1-439
11:49:16 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:49:16 clsMysql - Parameter: i-1
11:49:16 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:49:16 clsMysql - Parameter: ii-1-1
11:49:16 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:49:16 clsMysql - Parameter: i-18
11:49:16 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:49:16 clsMysql - Parameter: i-10
11:49:16 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:49:16 clsMysql - Parameter: i-1
11:49:16 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:49:16 clsMysql - Parameter: i--1
11:49:16 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:49:16 clsMysql - Parameter: ii-1-1
11:49:16 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:49:16 clsMysql - Parameter: i-
11:49:16 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:49:16 clsMysql - Parameter: i-
11:49:16 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:49:16 clsMysql - Parameter: i-
11:49:16 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:49:16 clsMysql - Parameter: i-
11:49:16 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:49:16 clsMysql - Parameter: i-
11:49:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:49:26 clsMysql - Parameter: i-1
11:49:26 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:49:26 clsMysql - Parameter: i-367
11:49:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:49:30 clsMysql - Parameter: i-1
11:49:30 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:49:30 clsMysql - Parameter: ii-1-367
11:49:30 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:49:30 clsMysql - Parameter: ii-1-367
11:49:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:49:30 clsMysql - Parameter: i-1
11:49:30 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:49:30 clsMysql - Parameter: ii-1-1
11:49:30 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:49:30 clsMysql - Parameter: i-32
11:49:30 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:49:30 clsMysql - Parameter: i-20
11:49:30 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:49:30 clsMysql - Parameter: i-1
11:49:30 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:49:30 clsMysql - Parameter: i--1
11:49:30 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:49:30 clsMysql - Parameter: ii-1-1
11:49:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:49:30 clsMysql - Parameter: i-
11:49:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:49:30 clsMysql - Parameter: i-
11:49:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:49:30 clsMysql - Parameter: i-
11:49:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:49:30 clsMysql - Parameter: i-
11:49:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:49:30 clsMysql - Parameter: i-
11:52:39 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:52:39 clsMysql - Parameter: i-1
11:52:39 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:52:39 clsMysql - Parameter: i-596
11:52:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:52:57 clsMysql - Parameter: i-1
11:52:57 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 1, 0) ON DUPLICATE KEY UPDATE fortschritt = IF(fortschritt <= 2, 1, fortschritt - 1), datum = NOW(), gewusst = 0
11:52:57 clsMysql - Parameter: ii-1-596
11:52:57 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 0)
11:52:57 clsMysql - Parameter: ii-1-596
11:52:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:52:57 clsMysql - Parameter: i-1
11:52:57 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:52:57 clsMysql - Parameter: ii-1-1
11:52:57 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:52:57 clsMysql - Parameter: i-15
11:52:57 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:52:57 clsMysql - Parameter: i-10
11:52:57 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:52:57 clsMysql - Parameter: i-1
11:52:57 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:52:57 clsMysql - Parameter: i--1
11:52:57 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:52:57 clsMysql - Parameter: ii-1-1
11:52:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:52:57 clsMysql - Parameter: i-
11:52:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:52:57 clsMysql - Parameter: i-
11:52:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:52:57 clsMysql - Parameter: i-
11:52:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:52:57 clsMysql - Parameter: i-
11:52:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:52:57 clsMysql - Parameter: i-
11:53:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:53:00 clsMysql - Parameter: i-1
11:53:00 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:53:00 clsMysql - Parameter: i-255
11:53:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:53:05 clsMysql - Parameter: i-1
11:53:05 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:53:05 clsMysql - Parameter: ii-1-255
11:53:05 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:53:05 clsMysql - Parameter: ii-1-255
11:53:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:53:05 clsMysql - Parameter: i-1
11:53:05 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:53:05 clsMysql - Parameter: ii-1-1
11:53:05 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:53:05 clsMysql - Parameter: i-19
11:53:05 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:53:05 clsMysql - Parameter: i-10
11:53:05 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:53:05 clsMysql - Parameter: i-1
11:53:05 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:53:05 clsMysql - Parameter: i--1
11:53:05 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:53:05 clsMysql - Parameter: ii-1-1
11:53:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:53:05 clsMysql - Parameter: i-
11:53:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:53:05 clsMysql - Parameter: i-
11:53:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:53:05 clsMysql - Parameter: i-
11:53:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:53:05 clsMysql - Parameter: i-
11:53:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:53:05 clsMysql - Parameter: i-
11:53:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:53:12 clsMysql - Parameter: i-1
11:53:12 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:53:12 clsMysql - Parameter: i-395
11:53:25 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:53:25 clsMysql - Parameter: i-1
11:53:25 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:53:25 clsMysql - Parameter: ii-1-395
11:53:25 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:53:25 clsMysql - Parameter: ii-1-395
11:53:25 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:53:25 clsMysql - Parameter: i-1
11:53:25 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:53:25 clsMysql - Parameter: ii-1-1
11:53:25 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:53:25 clsMysql - Parameter: i-16
11:53:25 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:53:25 clsMysql - Parameter: i-10
11:53:25 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:53:25 clsMysql - Parameter: i-1
11:53:25 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:53:25 clsMysql - Parameter: i--1
11:53:25 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:53:25 clsMysql - Parameter: ii-1-1
11:53:25 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:53:25 clsMysql - Parameter: i-
11:53:25 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:53:25 clsMysql - Parameter: i-
11:53:25 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:53:25 clsMysql - Parameter: i-
11:53:25 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:53:25 clsMysql - Parameter: i-
11:53:25 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:53:25 clsMysql - Parameter: i-
11:53:31 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:53:31 clsMysql - Parameter: i-1
11:53:31 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:53:31 clsMysql - Parameter: i-313
11:53:35 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:53:35 clsMysql - Parameter: i-1
11:53:35 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:53:35 clsMysql - Parameter: ii-1-313
11:53:35 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:53:35 clsMysql - Parameter: ii-1-313
11:53:35 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:53:35 clsMysql - Parameter: i-1
11:53:35 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:53:35 clsMysql - Parameter: ii-1-1
11:53:35 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:53:35 clsMysql - Parameter: i-6
11:53:35 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:53:35 clsMysql - Parameter: i-9
11:53:35 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:53:35 clsMysql - Parameter: i-1
11:53:35 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:53:35 clsMysql - Parameter: i--1
11:53:35 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:53:35 clsMysql - Parameter: ii-1-1
11:53:35 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:53:35 clsMysql - Parameter: i-
11:53:35 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:53:35 clsMysql - Parameter: i-
11:53:35 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:53:35 clsMysql - Parameter: i-
11:53:35 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:53:35 clsMysql - Parameter: i-
11:53:35 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:53:35 clsMysql - Parameter: i-
11:54:19 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:54:19 clsMysql - Parameter: i-1
11:54:19 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:54:19 clsMysql - Parameter: i-123
11:54:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:54:30 clsMysql - Parameter: i-1
11:54:30 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:54:30 clsMysql - Parameter: ii-1-123
11:54:30 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:54:30 clsMysql - Parameter: ii-1-123
11:54:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:54:30 clsMysql - Parameter: i-1
11:54:30 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:54:30 clsMysql - Parameter: ii-1-1
11:54:30 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:54:30 clsMysql - Parameter: i-23
11:54:30 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:54:30 clsMysql - Parameter: i-20
11:54:30 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:54:30 clsMysql - Parameter: i-1
11:54:30 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:54:30 clsMysql - Parameter: i--1
11:54:30 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:54:30 clsMysql - Parameter: ii-1-1
11:54:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:54:30 clsMysql - Parameter: i-
11:54:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:54:30 clsMysql - Parameter: i-
11:54:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:54:30 clsMysql - Parameter: i-
11:54:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:54:30 clsMysql - Parameter: i-
11:54:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:54:30 clsMysql - Parameter: i-
11:55:23 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:55:23 clsMysql - Parameter: i-1
11:55:23 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:55:23 clsMysql - Parameter: i-481
11:55:33 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:55:33 clsMysql - Parameter: i-1
11:55:33 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:55:33 clsMysql - Parameter: ii-1-481
11:55:33 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:55:33 clsMysql - Parameter: ii-1-481
11:55:33 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:55:33 clsMysql - Parameter: i-1
11:55:33 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:55:33 clsMysql - Parameter: ii-1-1
11:55:33 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:55:33 clsMysql - Parameter: i-32
11:55:33 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:55:33 clsMysql - Parameter: i-20
11:55:33 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:55:33 clsMysql - Parameter: i-1
11:55:33 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:55:33 clsMysql - Parameter: i--1
11:55:33 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:55:33 clsMysql - Parameter: ii-1-1
11:55:33 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:55:33 clsMysql - Parameter: i-
11:55:33 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:55:33 clsMysql - Parameter: i-
11:55:33 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:55:33 clsMysql - Parameter: i-
11:55:33 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:55:33 clsMysql - Parameter: i-
11:55:33 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:55:33 clsMysql - Parameter: i-
11:55:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:55:38 clsMysql - Parameter: i-1
11:55:38 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte
11:55:38 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM kategorie
11:55:38 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE())
11:55:38 clsMysql - Parameter: i-1
11:55:38 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 1 DAY))
11:55:38 clsMysql - Parameter: i-1
11:55:38 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 2 DAY))
11:55:38 clsMysql - Parameter: i-1
11:55:38 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM fortschritt WHERE benutzer_id = ? AND YEAR(idate) = YEAR(CURDATE())
11:55:38 clsMysql - Parameter: i-1
11:55:38 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 1
11:55:38 clsMysql - Parameter: i-1
11:55:38 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 0
11:55:38 clsMysql - Parameter: i-1
11:55:38 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte where todo = 1
11:55:38 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM kategorie inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:55:38 clsMysql - Parameter: i-1
11:55:39 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:55:39 clsMysql - Parameter: i-
11:55:39 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:55:39 clsMysql - Parameter: i-
11:55:39 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:55:39 clsMysql - Parameter: i-
11:55:39 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:55:39 clsMysql - Parameter: i-
11:56:39 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:56:39 clsMysql - Parameter: i-1
11:56:39 clsMysql - Debug - Statement: SELECT DISTINCT id, name FROM benutzerset where benutzer_id = ? ORDER BY name
11:56:39 clsMysql - Parameter: i-1
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where parent_id = -1 GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-2
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-35
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-34
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-36
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-37
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-38
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-39
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-40
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-41
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-43
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-44
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-45
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-46
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-42
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-47
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-3
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-48
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-49
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-50
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-52
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-51
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-53
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-1
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-20
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-31
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-32
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-23
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-27
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-28
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-29
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-21
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-22
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-26
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-30
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-10
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-13
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-16
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-14
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-17
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-18
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-11
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-12
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-15
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-19
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-9
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-4
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-5
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-6
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-7
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-8
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-25
11:56:39 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:56:39 clsMysql - Parameter: i-24
11:56:40 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:56:40 clsMysql - Parameter: i-
11:56:40 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:56:40 clsMysql - Parameter: i-
11:56:40 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:56:40 clsMysql - Parameter: i-
11:56:40 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:56:40 clsMysql - Parameter: i-
11:56:40 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:56:40 clsMysql - Parameter: i-
11:56:42 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:56:42 clsMysql - Parameter: i-1
11:56:42 clsMysql - Debug - Statement: DELETE FROM benutzer2kategorie where benutzer_id = ?
11:56:42 clsMysql - Parameter: i-1
11:56:42 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:56:42 clsMysql - Parameter: ii-1-31
11:56:42 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:56:42 clsMysql - Parameter: ii-1-32
11:56:42 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:56:42 clsMysql - Parameter: ii-1-23
11:56:42 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:56:42 clsMysql - Parameter: ii-1-27
11:56:42 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:56:42 clsMysql - Parameter: ii-1-28
11:56:42 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:56:42 clsMysql - Parameter: ii-1-29
11:56:42 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:56:42 clsMysql - Parameter: ii-1-21
11:56:42 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:56:42 clsMysql - Parameter: ii-1-22
11:56:42 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:56:42 clsMysql - Parameter: ii-1-26
11:56:42 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:56:42 clsMysql - Parameter: ii-1-30
11:56:42 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:56:42 clsMysql - Parameter: ii-1-13
11:56:42 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:56:42 clsMysql - Parameter: ii-1-16
11:56:42 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:56:42 clsMysql - Parameter: ii-1-14
11:56:42 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:56:42 clsMysql - Parameter: ii-1-17
11:56:42 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:56:42 clsMysql - Parameter: ii-1-18
11:56:42 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:56:42 clsMysql - Parameter: ii-1-11
11:56:42 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:56:42 clsMysql - Parameter: ii-1-12
11:56:42 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:56:42 clsMysql - Parameter: ii-1-15
11:56:42 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:56:42 clsMysql - Parameter: ii-1-19
11:56:42 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:56:42 clsMysql - Parameter: ii-1-4
11:56:42 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:56:42 clsMysql - Parameter: ii-1-5
11:56:42 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:56:42 clsMysql - Parameter: ii-1-6
11:56:42 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:56:42 clsMysql - Parameter: ii-1-7
11:56:42 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
11:56:42 clsMysql - Parameter: ii-1-8
11:56:42 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:56:42 clsMysql - Parameter: i-1
11:56:42 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:56:42 clsMysql - Parameter: ii-1-1
11:56:42 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:56:42 clsMysql - Parameter: i-15
11:56:42 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:56:42 clsMysql - Parameter: i-10
11:56:42 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:56:42 clsMysql - Parameter: i-1
11:56:42 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:56:42 clsMysql - Parameter: i--1
11:56:42 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:56:42 clsMysql - Parameter: ii-1-1
11:56:42 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:56:42 clsMysql - Parameter: i-
11:56:42 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:56:42 clsMysql - Parameter: i-
11:56:42 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:56:42 clsMysql - Parameter: i-
11:56:42 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:56:42 clsMysql - Parameter: i-
11:56:42 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:56:42 clsMysql - Parameter: i-
11:56:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:56:46 clsMysql - Parameter: i-1
11:56:46 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:56:46 clsMysql - Parameter: i-272
11:56:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:56:49 clsMysql - Parameter: i-1
11:56:49 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:56:49 clsMysql - Parameter: ii-1-272
11:56:49 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:56:49 clsMysql - Parameter: ii-1-272
11:56:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:56:49 clsMysql - Parameter: i-1
11:56:49 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:56:49 clsMysql - Parameter: ii-1-1
11:56:49 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:56:49 clsMysql - Parameter: i-28
11:56:49 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:56:49 clsMysql - Parameter: i-20
11:56:49 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:56:49 clsMysql - Parameter: i-1
11:56:49 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:56:49 clsMysql - Parameter: i--1
11:56:49 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:56:49 clsMysql - Parameter: ii-1-1
11:56:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:56:49 clsMysql - Parameter: i-
11:56:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:56:49 clsMysql - Parameter: i-
11:56:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:56:49 clsMysql - Parameter: i-
11:56:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:56:49 clsMysql - Parameter: i-
11:56:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:56:49 clsMysql - Parameter: i-
11:57:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:57:00 clsMysql - Parameter: i-1
11:57:00 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:57:00 clsMysql - Parameter: i-538
11:57:44 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:57:44 clsMysql - Parameter: i-1
11:57:44 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:57:44 clsMysql - Parameter: ii-1-538
11:57:44 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:57:44 clsMysql - Parameter: ii-1-538
11:57:44 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:57:44 clsMysql - Parameter: i-1
11:57:44 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:57:44 clsMysql - Parameter: ii-1-1
11:57:44 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:57:44 clsMysql - Parameter: i-26
11:57:44 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:57:44 clsMysql - Parameter: i-20
11:57:44 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:57:44 clsMysql - Parameter: i-1
11:57:44 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:57:44 clsMysql - Parameter: i--1
11:57:44 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:57:44 clsMysql - Parameter: ii-1-1
11:57:44 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:57:44 clsMysql - Parameter: i-
11:57:44 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:57:44 clsMysql - Parameter: i-
11:57:44 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:57:44 clsMysql - Parameter: i-
11:57:44 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:57:44 clsMysql - Parameter: i-
11:57:44 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:57:44 clsMysql - Parameter: i-
11:57:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:57:59 clsMysql - Parameter: i-1
11:57:59 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:57:59 clsMysql - Parameter: i-506
11:58:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:58:13 clsMysql - Parameter: i-1
11:58:13 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:58:13 clsMysql - Parameter: ii-1-506
11:58:13 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:58:13 clsMysql - Parameter: ii-1-506
11:58:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:58:14 clsMysql - Parameter: i-1
11:58:14 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:58:14 clsMysql - Parameter: ii-1-1
11:58:14 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:58:14 clsMysql - Parameter: i-30
11:58:14 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:58:14 clsMysql - Parameter: i-20
11:58:14 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:58:14 clsMysql - Parameter: i-1
11:58:14 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:58:14 clsMysql - Parameter: i--1
11:58:14 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:58:14 clsMysql - Parameter: ii-1-1
11:58:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:58:14 clsMysql - Parameter: i-
11:58:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:58:14 clsMysql - Parameter: i-
11:58:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:58:14 clsMysql - Parameter: i-
11:58:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:58:14 clsMysql - Parameter: i-
11:58:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:58:14 clsMysql - Parameter: i-
11:58:35 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:58:35 clsMysql - Parameter: i-1
11:58:35 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:58:35 clsMysql - Parameter: i-565
11:58:56 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:58:56 clsMysql - Parameter: i-1
11:58:56 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:58:56 clsMysql - Parameter: ii-1-565
11:58:57 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:58:57 clsMysql - Parameter: ii-1-565
11:58:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:58:57 clsMysql - Parameter: i-1
11:58:57 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:58:57 clsMysql - Parameter: ii-1-1
11:58:57 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:58:57 clsMysql - Parameter: i-16
11:58:57 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:58:57 clsMysql - Parameter: i-10
11:58:57 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:58:57 clsMysql - Parameter: i-1
11:58:57 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:58:57 clsMysql - Parameter: i--1
11:58:57 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:58:57 clsMysql - Parameter: ii-1-1
11:58:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:58:57 clsMysql - Parameter: i-
11:58:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:58:57 clsMysql - Parameter: i-
11:58:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:58:57 clsMysql - Parameter: i-
11:58:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:58:57 clsMysql - Parameter: i-
11:58:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:58:57 clsMysql - Parameter: i-
11:59:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:00 clsMysql - Parameter: i-1
11:59:00 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:59:00 clsMysql - Parameter: i-300
11:59:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:07 clsMysql - Parameter: i-1
11:59:07 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:59:07 clsMysql - Parameter: ii-1-300
11:59:07 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:59:07 clsMysql - Parameter: ii-1-300
11:59:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:07 clsMysql - Parameter: i-1
11:59:07 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:59:07 clsMysql - Parameter: ii-1-1
11:59:07 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:59:07 clsMysql - Parameter: i-19
11:59:07 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:59:07 clsMysql - Parameter: i-10
11:59:07 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:59:07 clsMysql - Parameter: i-1
11:59:07 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:59:07 clsMysql - Parameter: i--1
11:59:07 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:59:07 clsMysql - Parameter: ii-1-1
11:59:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:07 clsMysql - Parameter: i-
11:59:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:07 clsMysql - Parameter: i-
11:59:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:07 clsMysql - Parameter: i-
11:59:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:07 clsMysql - Parameter: i-
11:59:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:07 clsMysql - Parameter: i-
11:59:11 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:11 clsMysql - Parameter: i-1
11:59:11 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:59:11 clsMysql - Parameter: i-392
11:59:17 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:17 clsMysql - Parameter: i-1
11:59:17 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:59:17 clsMysql - Parameter: ii-1-392
11:59:17 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:59:17 clsMysql - Parameter: ii-1-392
11:59:17 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:17 clsMysql - Parameter: i-1
11:59:17 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:59:17 clsMysql - Parameter: ii-1-1
11:59:17 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:59:17 clsMysql - Parameter: i-12
11:59:17 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:59:17 clsMysql - Parameter: i-10
11:59:17 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:59:17 clsMysql - Parameter: i-1
11:59:17 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:59:17 clsMysql - Parameter: i--1
11:59:17 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:59:17 clsMysql - Parameter: ii-1-1
11:59:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:18 clsMysql - Parameter: i-
11:59:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:18 clsMysql - Parameter: i-
11:59:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:18 clsMysql - Parameter: i-
11:59:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:18 clsMysql - Parameter: i-
11:59:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:18 clsMysql - Parameter: i-
11:59:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:20 clsMysql - Parameter: i-1
11:59:20 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:59:20 clsMysql - Parameter: i-233
11:59:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:26 clsMysql - Parameter: i-1
11:59:26 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:59:26 clsMysql - Parameter: ii-1-233
11:59:26 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:59:26 clsMysql - Parameter: ii-1-233
11:59:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:26 clsMysql - Parameter: i-1
11:59:26 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:59:26 clsMysql - Parameter: ii-1-1
11:59:26 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:59:26 clsMysql - Parameter: i-19
11:59:26 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:59:26 clsMysql - Parameter: i-10
11:59:26 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:59:26 clsMysql - Parameter: i-1
11:59:26 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:59:26 clsMysql - Parameter: i--1
11:59:26 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:59:26 clsMysql - Parameter: ii-1-1
11:59:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:26 clsMysql - Parameter: i-
11:59:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:26 clsMysql - Parameter: i-
11:59:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:26 clsMysql - Parameter: i-
11:59:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:26 clsMysql - Parameter: i-
11:59:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:26 clsMysql - Parameter: i-
11:59:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:29 clsMysql - Parameter: i-1
11:59:29 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:59:29 clsMysql - Parameter: i-396
11:59:51 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:51 clsMysql - Parameter: i-1
11:59:51 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:59:51 clsMysql - Parameter: ii-1-396
11:59:51 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:59:51 clsMysql - Parameter: ii-1-396
11:59:51 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:51 clsMysql - Parameter: i-1
11:59:51 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:59:51 clsMysql - Parameter: ii-1-1
11:59:51 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:59:51 clsMysql - Parameter: i-19
11:59:51 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:59:51 clsMysql - Parameter: i-10
11:59:51 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:59:51 clsMysql - Parameter: i-1
11:59:51 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:59:51 clsMysql - Parameter: i--1
11:59:51 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:59:51 clsMysql - Parameter: ii-1-1
11:59:51 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:51 clsMysql - Parameter: i-
11:59:51 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:51 clsMysql - Parameter: i-
11:59:51 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:51 clsMysql - Parameter: i-
11:59:51 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:51 clsMysql - Parameter: i-
11:59:51 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:51 clsMysql - Parameter: i-
11:59:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:53 clsMysql - Parameter: i-1
11:59:53 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
11:59:53 clsMysql - Parameter: i-415
11:59:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:58 clsMysql - Parameter: i-1
11:59:58 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
11:59:58 clsMysql - Parameter: ii-1-415
11:59:58 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
11:59:58 clsMysql - Parameter: ii-1-415
11:59:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:58 clsMysql - Parameter: i-1
11:59:58 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
11:59:58 clsMysql - Parameter: ii-1-1
11:59:58 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:59:58 clsMysql - Parameter: i-32
11:59:58 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:59:58 clsMysql - Parameter: i-20
11:59:58 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:59:58 clsMysql - Parameter: i-1
11:59:58 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
11:59:58 clsMysql - Parameter: i--1
11:59:58 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
11:59:58 clsMysql - Parameter: ii-1-1
11:59:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:58 clsMysql - Parameter: i-
11:59:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:58 clsMysql - Parameter: i-
11:59:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:58 clsMysql - Parameter: i-
11:59:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:58 clsMysql - Parameter: i-
11:59:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:59:58 clsMysql - Parameter: i-
12:00:01 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:00:01 clsMysql - Parameter: i-1
12:00:01 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
12:00:01 clsMysql - Parameter: i-590
12:00:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:00:14 clsMysql - Parameter: i-1
12:00:14 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
12:00:14 clsMysql - Parameter: ii-1-590
12:00:14 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
12:00:14 clsMysql - Parameter: ii-1-590
12:00:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:00:14 clsMysql - Parameter: i-1
12:00:14 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
12:00:14 clsMysql - Parameter: ii-1-1
12:00:14 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
12:00:14 clsMysql - Parameter: i-16
12:00:14 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
12:00:14 clsMysql - Parameter: i-10
12:00:14 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
12:00:14 clsMysql - Parameter: i-1
12:00:14 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
12:00:14 clsMysql - Parameter: i--1
12:00:14 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
12:00:14 clsMysql - Parameter: ii-1-1
12:00:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:00:14 clsMysql - Parameter: i-
12:00:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:00:14 clsMysql - Parameter: i-
12:00:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:00:14 clsMysql - Parameter: i-
12:00:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:00:14 clsMysql - Parameter: i-
12:00:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:00:14 clsMysql - Parameter: i-
12:00:23 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:00:23 clsMysql - Parameter: i-1
12:00:23 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
12:00:23 clsMysql - Parameter: i-321
12:00:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:00:26 clsMysql - Parameter: i-1
12:00:26 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
12:00:26 clsMysql - Parameter: ii-1-321
12:00:26 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
12:00:26 clsMysql - Parameter: ii-1-321
12:00:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:00:26 clsMysql - Parameter: i-1
12:00:26 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
12:00:26 clsMysql - Parameter: ii-1-1
12:00:26 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
12:00:26 clsMysql - Parameter: i-8
12:00:26 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
12:00:26 clsMysql - Parameter: i-9
12:00:26 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
12:00:26 clsMysql - Parameter: i-1
12:00:26 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
12:00:26 clsMysql - Parameter: i--1
12:00:26 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
12:00:26 clsMysql - Parameter: ii-1-1
12:00:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:00:26 clsMysql - Parameter: i-
12:00:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:00:26 clsMysql - Parameter: i-
12:00:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:00:26 clsMysql - Parameter: i-
12:00:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:00:26 clsMysql - Parameter: i-
12:00:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:00:26 clsMysql - Parameter: i-
12:00:50 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:00:50 clsMysql - Parameter: i-1
12:00:50 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
12:00:50 clsMysql - Parameter: i-177
12:01:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:01:13 clsMysql - Parameter: i-1
12:01:13 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
12:01:13 clsMysql - Parameter: ii-1-177
12:01:13 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
12:01:13 clsMysql - Parameter: ii-1-177
12:01:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:01:13 clsMysql - Parameter: i-1
12:01:13 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
12:01:13 clsMysql - Parameter: ii-1-1
12:01:13 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
12:01:13 clsMysql - Parameter: i-15
12:01:13 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
12:01:13 clsMysql - Parameter: i-10
12:01:13 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
12:01:13 clsMysql - Parameter: i-1
12:01:13 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
12:01:13 clsMysql - Parameter: i--1
12:01:13 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
12:01:13 clsMysql - Parameter: ii-1-1
12:01:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:01:13 clsMysql - Parameter: i-
12:01:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:01:13 clsMysql - Parameter: i-
12:01:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:01:13 clsMysql - Parameter: i-
12:01:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:01:13 clsMysql - Parameter: i-
12:01:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:01:13 clsMysql - Parameter: i-
12:01:17 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:01:17 clsMysql - Parameter: i-1
12:01:17 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
12:01:17 clsMysql - Parameter: i-267
12:01:28 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:01:28 clsMysql - Parameter: i-1
12:01:29 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
12:01:29 clsMysql - Parameter: ii-1-267
12:01:29 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
12:01:29 clsMysql - Parameter: ii-1-267
12:01:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:01:29 clsMysql - Parameter: i-1
12:01:29 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
12:01:29 clsMysql - Parameter: ii-1-1
12:01:29 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
12:01:29 clsMysql - Parameter: i-5
12:01:29 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
12:01:29 clsMysql - Parameter: i-9
12:01:29 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
12:01:29 clsMysql - Parameter: i-1
12:01:29 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
12:01:29 clsMysql - Parameter: i--1
12:01:29 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
12:01:29 clsMysql - Parameter: ii-1-1
12:01:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:01:29 clsMysql - Parameter: i-
12:01:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:01:29 clsMysql - Parameter: i-
12:01:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:01:29 clsMysql - Parameter: i-
12:01:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:01:29 clsMysql - Parameter: i-
12:01:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:01:29 clsMysql - Parameter: i-
12:01:35 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:01:35 clsMysql - Parameter: i-1
12:01:35 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
12:01:35 clsMysql - Parameter: i-96
12:01:40 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:01:40 clsMysql - Parameter: i-1
12:01:40 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
12:01:40 clsMysql - Parameter: ii-1-96
12:01:40 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
12:01:40 clsMysql - Parameter: ii-1-96
12:01:40 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:01:40 clsMysql - Parameter: i-1
12:01:40 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
12:01:40 clsMysql - Parameter: ii-1-1
12:01:40 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
12:01:40 clsMysql - Parameter: i-7
12:01:40 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
12:01:40 clsMysql - Parameter: i-9
12:01:40 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
12:01:40 clsMysql - Parameter: i-1
12:01:40 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
12:01:40 clsMysql - Parameter: i--1
12:01:40 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
12:01:40 clsMysql - Parameter: ii-1-1
12:01:40 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:01:40 clsMysql - Parameter: i-
12:01:40 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:01:40 clsMysql - Parameter: i-
12:01:40 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:01:40 clsMysql - Parameter: i-
12:01:40 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:01:40 clsMysql - Parameter: i-
12:01:40 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:01:40 clsMysql - Parameter: i-
12:01:56 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:01:56 clsMysql - Parameter: i-1
12:01:56 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
12:01:56 clsMysql - Parameter: i-170
12:02:06 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:02:06 clsMysql - Parameter: i-1
12:02:06 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
12:02:06 clsMysql - Parameter: ii-1-170
12:02:06 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
12:02:06 clsMysql - Parameter: ii-1-170
12:02:06 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:02:06 clsMysql - Parameter: i-1
12:02:06 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
12:02:06 clsMysql - Parameter: ii-1-1
12:02:06 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
12:02:06 clsMysql - Parameter: i-32
12:02:06 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
12:02:06 clsMysql - Parameter: i-20
12:02:06 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
12:02:06 clsMysql - Parameter: i-1
12:02:06 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
12:02:06 clsMysql - Parameter: i--1
12:02:06 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
12:02:06 clsMysql - Parameter: ii-1-1
12:02:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:02:07 clsMysql - Parameter: i-
12:02:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:02:07 clsMysql - Parameter: i-
12:02:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:02:07 clsMysql - Parameter: i-
12:02:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:02:07 clsMysql - Parameter: i-
12:02:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:02:07 clsMysql - Parameter: i-
12:02:17 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:02:17 clsMysql - Parameter: i-1
12:02:17 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
12:02:17 clsMysql - Parameter: i-592
12:02:23 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:02:23 clsMysql - Parameter: i-1
12:02:23 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
12:02:23 clsMysql - Parameter: ii-1-592
12:02:23 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
12:02:23 clsMysql - Parameter: ii-1-592
12:02:23 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:02:23 clsMysql - Parameter: i-1
12:02:23 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
12:02:23 clsMysql - Parameter: ii-1-1
12:02:23 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
12:02:23 clsMysql - Parameter: i-26
12:02:23 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
12:02:23 clsMysql - Parameter: i-20
12:02:23 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
12:02:23 clsMysql - Parameter: i-1
12:02:23 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
12:02:23 clsMysql - Parameter: i--1
12:02:23 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
12:02:23 clsMysql - Parameter: ii-1-1
12:02:23 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:02:23 clsMysql - Parameter: i-
12:02:23 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:02:23 clsMysql - Parameter: i-
12:02:23 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:02:23 clsMysql - Parameter: i-
12:02:23 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:02:23 clsMysql - Parameter: i-
12:02:23 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:02:23 clsMysql - Parameter: i-
12:02:41 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:02:41 clsMysql - Parameter: i-1
12:02:41 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
12:02:41 clsMysql - Parameter: i-508
12:03:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:03:02 clsMysql - Parameter: i-1
12:03:02 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
12:03:02 clsMysql - Parameter: ii-1-508
12:03:02 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
12:03:02 clsMysql - Parameter: ii-1-508
12:03:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:03:02 clsMysql - Parameter: i-1
12:03:02 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
12:03:02 clsMysql - Parameter: ii-1-1
12:03:02 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
12:03:02 clsMysql - Parameter: i-8
12:03:02 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
12:03:02 clsMysql - Parameter: i-9
12:03:02 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
12:03:02 clsMysql - Parameter: i-1
12:03:02 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
12:03:02 clsMysql - Parameter: i--1
12:03:02 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
12:03:02 clsMysql - Parameter: ii-1-1
12:03:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:03:02 clsMysql - Parameter: i-
12:03:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:03:02 clsMysql - Parameter: i-
12:03:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:03:02 clsMysql - Parameter: i-
12:03:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:03:02 clsMysql - Parameter: i-
12:03:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:03:02 clsMysql - Parameter: i-
12:03:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:03:05 clsMysql - Parameter: i-1
12:03:05 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
12:03:05 clsMysql - Parameter: i-182
12:03:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:03:12 clsMysql - Parameter: i-1
12:03:12 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
12:03:12 clsMysql - Parameter: ii-1-182
12:03:12 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
12:03:12 clsMysql - Parameter: ii-1-182
12:03:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:03:12 clsMysql - Parameter: i-1
12:03:12 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
12:03:12 clsMysql - Parameter: ii-1-1
12:03:12 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
12:03:12 clsMysql - Parameter: i-8
12:03:12 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
12:03:12 clsMysql - Parameter: i-9
12:03:12 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
12:03:12 clsMysql - Parameter: i-1
12:03:12 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
12:03:12 clsMysql - Parameter: i--1
12:03:12 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
12:03:12 clsMysql - Parameter: ii-1-1
12:03:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:03:12 clsMysql - Parameter: i-
12:03:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:03:12 clsMysql - Parameter: i-
12:03:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:03:12 clsMysql - Parameter: i-
12:03:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:03:12 clsMysql - Parameter: i-
12:03:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:03:12 clsMysql - Parameter: i-
12:03:15 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:03:15 clsMysql - Parameter: i-1
12:03:15 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte
12:03:15 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM kategorie
12:03:15 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE())
12:03:15 clsMysql - Parameter: i-1
12:03:15 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 1 DAY))
12:03:15 clsMysql - Parameter: i-1
12:03:15 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 2 DAY))
12:03:15 clsMysql - Parameter: i-1
12:03:15 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM fortschritt WHERE benutzer_id = ? AND YEAR(idate) = YEAR(CURDATE())
12:03:15 clsMysql - Parameter: i-1
12:03:15 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 1
12:03:15 clsMysql - Parameter: i-1
12:03:15 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 0
12:03:15 clsMysql - Parameter: i-1
12:03:15 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte where todo = 1
12:03:15 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM kategorie inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
12:03:15 clsMysql - Parameter: i-1
12:03:15 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:03:15 clsMysql - Parameter: i-
12:03:15 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:03:15 clsMysql - Parameter: i-
12:03:15 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:03:15 clsMysql - Parameter: i-
12:03:15 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
12:03:15 clsMysql - Parameter: i-
14:16:55 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:16:55 clsMysql - Parameter: i-
14:16:55 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte
14:16:55 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM kategorie
14:16:55 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE())
14:16:55 clsMysql - Parameter: i-
14:16:55 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 1 DAY))
14:16:55 clsMysql - Parameter: i-
14:16:55 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 2 DAY))
14:16:55 clsMysql - Parameter: i-
14:16:55 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM fortschritt WHERE benutzer_id = ? AND YEAR(idate) = YEAR(CURDATE())
14:16:55 clsMysql - Parameter: i-
14:16:55 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 1
14:16:55 clsMysql - Parameter: i-
14:16:55 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 0
14:16:55 clsMysql - Parameter: i-
14:16:55 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte where todo = 1
14:16:55 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM kategorie inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
14:16:55 clsMysql - Parameter: i-
14:16:55 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:16:55 clsMysql - Parameter: i-
14:16:55 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:16:55 clsMysql - Parameter: i-
14:16:55 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:16:55 clsMysql - Parameter: i-
14:16:55 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:16:55 clsMysql - Parameter: i-
14:16:55 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:16:55 clsMysql - Parameter: i-
14:16:55 clsMysql - Debug - Statement: SELECT id, name FROM benutzer order by name
14:16:55 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:16:55 clsMysql - Parameter: i-
14:16:55 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:16:55 clsMysql - Parameter: i-
14:16:55 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:16:55 clsMysql - Parameter: i-
14:16:55 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:16:55 clsMysql - Parameter: i-
14:16:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:16:58 clsMysql - Parameter: i-
14:16:58 clsMysql - Debug - Statement: SELECT count(name) as anzahl, id FROM benutzer WHERE id = ?
14:16:58 clsMysql - Parameter: i-1
14:16:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:16:58 clsMysql - Parameter: i-1
14:16:58 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte
14:16:58 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM kategorie
14:16:58 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE())
14:16:58 clsMysql - Parameter: i-1
14:16:58 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 1 DAY))
14:16:58 clsMysql - Parameter: i-1
14:16:58 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 2 DAY))
14:16:58 clsMysql - Parameter: i-1
14:16:58 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM fortschritt WHERE benutzer_id = ? AND YEAR(idate) = YEAR(CURDATE())
14:16:58 clsMysql - Parameter: i-1
14:16:58 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 1
14:16:58 clsMysql - Parameter: i-1
14:16:58 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 0
14:16:58 clsMysql - Parameter: i-1
14:16:58 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte where todo = 1
14:16:58 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM kategorie inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
14:16:58 clsMysql - Parameter: i-1
14:16:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:16:58 clsMysql - Parameter: i-
14:16:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:16:58 clsMysql - Parameter: i-
14:16:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:16:58 clsMysql - Parameter: i-
14:16:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:16:58 clsMysql - Parameter: i-
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:17:00 clsMysql - Parameter: i-1
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id IN (-1, 0)
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-1
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-1
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-9
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-9
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-4
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-4
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-5
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-5
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-6
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-6
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-7
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-7
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-8
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-8
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-10
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-10
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-11
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-11
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-12
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-12
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-13
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-13
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-14
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-14
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-15
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-15
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-16
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-16
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-17
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-17
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-18
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-18
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-19
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-19
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-20
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-20
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-21
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-21
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-22
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-22
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-23
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-23
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-26
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-26
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-27
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-27
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-28
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-28
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-29
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-29
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-30
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-30
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-31
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-31
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-32
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-32
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-25
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-25
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-24
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-24
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-2
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-2
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-3
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-3
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-35
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-35
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-34
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-34
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-36
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-36
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-37
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-37
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-38
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-38
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-39
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-39
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-40
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-40
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-41
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-41
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-42
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-42
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-43
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-43
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-44
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-44
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-45
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-45
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-46
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-46
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-47
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-47
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-48
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-48
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-49
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-49
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-50
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-50
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-52
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-52
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-51
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-51
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
14:17:00 clsMysql - Parameter: i-53
14:17:00 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
14:17:00 clsMysql - Parameter: i-53
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:17:00 clsMysql - Parameter: i-
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:17:00 clsMysql - Parameter: i-
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:17:00 clsMysql - Parameter: i-
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:17:00 clsMysql - Parameter: i-
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:17:00 clsMysql - Parameter: i-
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:17:00 clsMysql - Parameter: i-
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:17:00 clsMysql - Parameter: i-
14:17:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:17:00 clsMysql - Parameter: i-
14:17:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:17:07 clsMysql - Parameter: i-1
14:17:07 clsMysql - Debug - Statement: SELECT name FROM kategorie WHERE id = ?
14:17:07 clsMysql - Parameter: i-51
14:17:07 clsMysql - Debug - Statement: SELECT id, frage, hinweis, antwort, todo FROM karte WHERE kategorie_id = ? ORDER BY id asc
14:17:07 clsMysql - Parameter: i-51
14:17:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:17:13 clsMysql - Parameter: i-1
14:17:13 clsMysql - Debug - Statement: SELECT name FROM kategorie WHERE id = ?
14:17:13 clsMysql - Parameter: i-50
14:17:13 clsMysql - Debug - Statement: SELECT id, frage, hinweis, antwort, todo FROM karte WHERE kategorie_id = ? ORDER BY id asc
14:17:13 clsMysql - Parameter: i-50
14:18:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:18:07 clsMysql - Parameter: i-1
14:18:07 clsMysql - Debug - Statement: SELECT name FROM kategorie WHERE id = ?
14:18:07 clsMysql - Parameter: i-51
14:18:07 clsMysql - Debug - Statement: SELECT id, frage, hinweis, antwort, todo FROM karte WHERE kategorie_id = ? ORDER BY id asc
14:18:07 clsMysql - Parameter: i-51
14:18:32 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:18:32 clsMysql - Parameter: i-1
14:18:32 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
14:18:32 clsMysql - Parameter: isssi-51-Wie funktioniert Linear Search?---0
14:20:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:20:30 clsMysql - Parameter: i-1
14:20:30 clsMysql - Debug - Statement: UPDATE karte SET frage = ?, hinweis = ?, antwort = ?, todo = ? WHERE id = ?
14:20:30 clsMysql - Parameter: sssii-Wie funktioniert Linear Search?--Lineare Suche ist ein Algorithmus, der auch unter dem Namen sequentielle Suche bekannt ist. Er ist der einfachste Suchalgorithmus überhaupt.

Die Aufgabe besteht darin, ein Element in einer Liste oder einem Array mit n Elementen zu finden. Man geht dazu die Liste Element für Element durch, bis man es gefunden hat. Der Suchaufwand wächst linear mit der Anzahl der Elemente in der Liste.-1-1772
14:21:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:21:07 clsMysql - Parameter: i-1
14:21:07 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
14:21:07 clsMysql - Parameter: isssi-51-Welche Laufzeit hat Linear Search?--Worst Case: O(n)-0
14:21:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:21:14 clsMysql - Parameter: i-1
14:21:14 clsMysql - Debug - Statement: UPDATE karte SET frage = ?, hinweis = ?, antwort = ?, todo = ? WHERE id = ?
14:21:14 clsMysql - Parameter: sssii-Wie funktioniert Linear Search?--Lineare Suche ist ein Algorithmus, der auch unter dem Namen sequentielle Suche bekannt ist. Er ist der einfachste Suchalgorithmus überhaupt.

Die Aufgabe besteht darin, ein Element in einer Liste oder einem Array mit n Elementen zu finden. Man geht dazu die Liste Element für Element durch, bis man es gefunden hat. Der Suchaufwand wächst linear mit der Anzahl der Elemente in der Liste.-0-1772
14:21:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:21:20 clsMysql - Parameter: i-1
14:21:20 clsMysql - Debug - Statement: UPDATE karte SET frage = ?, hinweis = ?, antwort = ?, todo = ? WHERE id = ?
14:21:20 clsMysql - Parameter: sssii-Welche Laufzeit hat Linear Search?--Worst Case: O(n)-0-1773
14:22:48 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:22:48 clsMysql - Parameter: i-1
14:22:48 clsMysql - Debug - Statement: SELECT name FROM kategorie WHERE id = ?
14:22:48 clsMysql - Parameter: i-53
14:22:48 clsMysql - Debug - Statement: SELECT id, frage, hinweis, antwort, todo FROM karte WHERE kategorie_id = ? ORDER BY id asc
14:22:48 clsMysql - Parameter: i-53
14:25:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:25:02 clsMysql - Parameter: i-1
14:25:02 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
14:25:02 clsMysql - Parameter: isssi-53-Implementiere den Linear Search in PHP--function ($list, $search){
  $found = -1;

  for ($i = 0; $i < count($list);$i  )
  {
    if ($list[$i] == $search)
    {
      $found = $i;
      break;
    }
  }

  return $found;
}-0
14:30:23 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:30:23 clsMysql - Parameter: i-1
14:30:23 clsMysql - Debug - Statement: SELECT name FROM kategorie WHERE id = ?
14:30:23 clsMysql - Parameter: i-51
14:30:23 clsMysql - Debug - Statement: SELECT id, frage, hinweis, antwort, todo FROM karte WHERE kategorie_id = ? ORDER BY id asc
14:30:23 clsMysql - Parameter: i-51
14:31:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:31:38 clsMysql - Parameter: i-1
14:31:38 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
14:31:38 clsMysql - Parameter: isssi-51-Wie funktioniert Binary Search?--Zuerst wird das mittlere Element des Felds überprüft. Es kann kleiner, größer oder gleich dem Suchwert sein. Ist es gleich dem Suchwert, dann wurde das gesuchte Element gefunden und die Suche ist beendet. Ist es kleiner als der gesuchte Wert, muss sich das gesuchte Element in der hinteren Hälfte befinden. Ist das geprüfte mittlere Element hingegen größer, muss nur in der vorderen Hälfte weitergesucht werden. Die jeweils andere Hälfte muss nicht mehr betrachtet werden.

In der zu untersuchenden Hälfte (und rekursiv in der jeweils verbliebenen Hälfte) wird genauso verfahren: Das mittlere Element liefert wieder die Entscheidung darüber, ob und wo weitergesucht werden muss – davor oder dahinter. Die Länge des Suchbereiches wird so von Schritt zu Schritt halbiert. Spätestens wenn der Suchbereich auf ein einzelnes Element geschrumpft ist, ist die Suche beendet. Dieses eine Element ist entweder das gesuchte Element, oder das gesuchte Element kommt nicht vor; dann ist als Ergebnis bekannt, wohin es einsortiert werden müsste.

Der Algorithmus zur binären Suche wird entweder als Iteration oder Rekursion implementiert. Um ihn verwenden zu können, müssen die Daten bereits sortiert und in einer Datenstruktur vorliegen, in der „direkt“ auf das n-te Element zugegriffen werden kann. Auf einer einfachen verketteten Liste würde die Effizienz verloren gehen-0
14:32:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:32:14 clsMysql - Parameter: i-1
14:32:14 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
14:32:14 clsMysql - Parameter: isssi-51-Welche Laufzeit hat Binary Search?--Worst Case: O(log n)-0
14:32:25 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:32:25 clsMysql - Parameter: i-1
14:32:25 clsMysql - Debug - Statement: SELECT name FROM kategorie WHERE id = ?
14:32:25 clsMysql - Parameter: i-53
14:32:25 clsMysql - Debug - Statement: SELECT id, frage, hinweis, antwort, todo FROM karte WHERE kategorie_id = ? ORDER BY id asc
14:32:25 clsMysql - Parameter: i-53
14:34:16 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:34:16 clsMysql - Parameter: i-1
14:34:16 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
14:34:16 clsMysql - Parameter: isssi-53-Implementiere den Binary Search in PHP--function binary($list, $search){
  $found = -1;

  for ($i = 0; $i < count($list);$i  )
  {
    if ($list[$i] == $search)
    {
      $found = $i;
      break;
    }
  }

  return $found;
}-0
14:56:01 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:56:01 clsMysql - Parameter: i-1
14:56:01 clsMysql - Debug - Statement: SELECT name FROM kategorie WHERE id = ?
14:56:01 clsMysql - Parameter: i-51
14:56:01 clsMysql - Debug - Statement: SELECT id, frage, hinweis, antwort, todo FROM karte WHERE kategorie_id = ? ORDER BY id asc
14:56:01 clsMysql - Parameter: i-51
14:59:22 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
14:59:22 clsMysql - Parameter: i-1
14:59:22 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
14:59:22 clsMysql - Parameter: isssi-51-Wie funktioniert Breitensuche / Breadth First Search / BFS?--Die Breitensuche ist eine uninformierte Suche, welche durch Expansion der einzelnen Level der Graphen ausgehend vom Startknoten den Graph in die Breite nach einem Element durchsucht.

Zuerst wird ein Startknoten u ausgewählt. Von diesem Knoten aus wird nun jede Kante (u,v) betrachtet und getestet, ob der gegenüberliegende Knoten v schon entdeckt wurde bzw. das gesuchte Element ist. Ist dies noch nicht der Fall, so wird der entsprechende Knoten in einer Warteschlange gespeichert und im nächsten Schritt bearbeitet. Hierbei ist zu beachten, dass Breitensuche immer zuerst alle Knoten der gleichen Ebene bearbeitet, und nicht wie die Tiefensuche einem Pfad in die Tiefe folgt. Nachdem alle Kanten des Ausgangsknotens betrachtet wurden, wird der erste Knoten der Warteschlange entnommen und das Verfahren wiederholt.

Algorithmus
  1. Bestimme den Knoten, an dem die Suche beginnen soll, markiere ihn als gesehen und speichere ihn in einer Warteschlange ab.
  2. Entnimm einen Knoten vom Beginn der Warteschlange.
     Falls das gesuchte Element gefunden wurde, brich die Suche ab und liefere „gefunden“ zurück.
     Anderenfalls hänge alle bisher unmarkierten Nachfolger dieses Knotens ans Ende der Warteschlange an und markiere sie als gesehen.
  3. Wenn die Warteschlange leer ist, dann wurde jeder Knoten bereits untersucht. Beende die Suche und liefere „nicht gefunden“ zurück.
  4.Wiederhole Schritt 2.-0
15:17:22 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
15:17:22 clsMysql - Parameter: i-1
15:17:22 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
15:17:22 clsMysql - Parameter: isssi-51-Welche Laufzeit hat Breitensuche / Breadth First Search / BFS?--Die Breitensuche (BFS) hat eine Laufzeit von O(|V| |E|), wobei |V| die Anzahl der Knoten im Graphen und |E| die Anzahl der Kanten im Graphen ist.-0
15:37:31 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
15:37:31 clsMysql - Parameter: i-1
15:37:31 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
15:37:31 clsMysql - Parameter: isssi-51-Wie funktioniert Tiefensuche / Depth First Search / DFS?--Die Tiefensuche ist ein uninformierter Suchalgorithmus, welche durch Expansion des jeweils ersten auftretenden Nachfolgeknotens im Graphen nach und nach vom Startknoten aus weiter in die Tiefe sucht. In welcher Reihenfolge die Nachfolger eines Knotens dabei bestimmt werden, hängt von der Repräsentation der Nachfolger ab. Bei der Repräsentation über eine Adjazenzliste mittels einer verketteten Liste werden beispielsweise die Knoten in der Reihenfolge ihres Eintrags in dieser Liste durchlaufen.
Für ungerichtete Graphen sieht das Verfahren wie folgt aus: Zuerst wird ein Startknoten u ausgewählt. Von diesem Knoten aus wird nun die erste Kante (u,v) betrachtet und getestet, ob der gegenüberliegende Knoten v schon entdeckt wurde bzw. das gesuchte Element ist. Ist dies noch nicht der Fall, so wird rekursiv für diesen Knoten die Tiefensuche aufgerufen, wodurch wieder der erste Nachfolger dieses Knotens expandiert wird. Diese Art der Suche wird solange fortgesetzt, bis das gesuchte Element entweder gefunden wurde oder die Suche bei einer Senke im Graphen angekommen ist und somit keine weiteren Nachfolgeknoten mehr untersuchen kann. An dieser Stelle kehrt der Algorithmus nun zum zuletzt expandierten Knoten u zurück und untersucht den nächsten Nachfolger des Knotens. Sollte es hier keine weiteren Nachfolger mehr geben, geht der Algorithmus wieder Schritt für Schritt zum jeweiligen Vorgänger zurück und versucht es dort erneut.
Der Index der Rekursionstiefe der rekursiven Methode oder Prozedur für die Tiefensuche entspricht dem Knotenabstand des aktuell durchlaufenen Knotens vom Startknoten im in der rechten Abbildung gezeigten Baum. Dieser Index müsste, um zum Beispiel auf der Konsole ausgegeben zu werden, in einer Variablen gespeichert werden. Diese rekursive Methode oder Prozedur wird so oft aufgerufen, wie die Anzahl der Knoten des Graphen ist. Die Rekursion bricht ab, wenn der aktuell durchlaufene Knoten nur Nachbarknoten hat, die schon vorher durchlaufen wurden.
Bei gerichteten Graphen ist der Knotenabstand zwischen zwei verschiedenen Knoten nicht unbedingt symmetrisch.
Der Baum, den die Tiefensuche durchläuft, ist ein Spannbaum des Graphen und hängt vom Startknoten ab. Es ist außerdem wichtig, ob es sich um einen gerichteten Graphen oder ungerichteten Graphen handelt.
Der Knotenabstand und die Rekursionstiefe ist nur für zusammenhängende Graphen definiert und hängt vom Startknoten ab. Für nicht zusammenhängende Graphen ist der Knotenabstand und die Rekursionstiefe nur innerhalb jeder Zusammenhangskomponente definiert.-0
15:49:28 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
15:49:28 clsMysql - Parameter: i-1
15:49:28 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
15:49:28 clsMysql - Parameter: isssi-51-Welche Laufzeit hat Tiefensuche / Depth First Search / DFS?--Die Tiefensuche (DFS) hat eine Laufzeit von O(|V| |E|), wobei |V| die Anzahl der Knoten im Graphen und |E| die Anzahl der Kanten im Graphen ist.-0
16:03:37 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
16:03:37 clsMysql - Parameter: i-1
16:03:37 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
16:03:37 clsMysql - Parameter: isssi-51-Wie funktioniert die Interpolationssuche?--Die Interpolationssuche geht von sortierten Daten aus. Sie eignet sich am besten für gleichverteilte Daten. Des Weiteren wird ein wahlfreier Zugriff auf die Elemente vorausgesetzt. Die Daten werden bei der Interpolationssuche in Abhängigkeit vom Schlüssel geteilt. Hat dieser einen großen Wert, befindet sich das gesuchte Element aufgrund der Vorsortierung im hinteren Teil der Daten. Dementsprechend wird auch im hinteren Teil der Daten die Teilung vorgenommen. Bei einem kleinen Schlüssel wird das Feld entsprechend im vorderen Teil gespalten.

Für alle Daten lässt sich die Teilungsposition berechnen, indem zunächst die Anzahl aller Elemente durch die Anzahl verschiedener Elemente dividiert wird, und anschließend mit dem gesuchten Schlüssel multipliziert wird: 

            Anzahl der Elemente
Position = ------------------------------- * gesuchter Wert
            Anzahl verschiedener Elemente

Die Position des gesuchten Elementes wird somit interpoliert, indem die Gleichverteilung der Daten für eine Abbildung des Schlüssels auf die Liste bzw. das Feld genutzt wird.
Nun kann überprüft werden, ob der Schlüssel des teilenden Elementes einen größeren oder kleineren Wert als der Schlüssel des gesuchten Elementes hat. Bei identischen Schlüsseln ist die Suche bereits beendet. Wenn das teilende Element einen kleineren Wert hat, wird der rechte Teilbereich weiteruntersucht, andernfalls der linke Teilbereich. Die Zahl der Elemente sowie die Zahl der verschiedenen Schlüssel wird für den neuen Bereich ermittelt, und anschließend eine neue Teilungsposition interpoliert.-0
16:04:35 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
16:04:35 clsMysql - Parameter: i-1
16:04:35 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
16:04:35 clsMysql - Parameter: isssi-51-Welche Laufzeit hat die Interpolationssuche?--O(log(log(n)))-0
16:04:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
16:04:43 clsMysql - Parameter: i-1
16:04:43 clsMysql - Debug - Statement: SELECT name FROM kategorie WHERE id = ?
16:04:43 clsMysql - Parameter: i-53
16:04:43 clsMysql - Debug - Statement: SELECT id, frage, hinweis, antwort, todo FROM karte WHERE kategorie_id = ? ORDER BY id asc
16:04:43 clsMysql - Parameter: i-53
16:04:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
16:04:53 clsMysql - Parameter: i-1
16:04:53 clsMysql - Debug - Statement: SELECT name FROM kategorie WHERE id = ?
16:04:53 clsMysql - Parameter: i-51
16:04:53 clsMysql - Debug - Statement: SELECT id, frage, hinweis, antwort, todo FROM karte WHERE kategorie_id = ? ORDER BY id asc
16:04:53 clsMysql - Parameter: i-51
