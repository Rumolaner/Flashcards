08:52:41 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:52:41 clsMysql - Parameter: i-
08:52:41 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte
08:52:41 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM kategorie
08:52:41 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE())
08:52:41 clsMysql - Parameter: i-
08:52:41 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 1 DAY))
08:52:41 clsMysql - Parameter: i-
08:52:41 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 2 DAY))
08:52:41 clsMysql - Parameter: i-
08:52:41 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM fortschritt WHERE benutzer_id = ? AND YEAR(idate) = YEAR(CURDATE())
08:52:41 clsMysql - Parameter: i-
08:52:41 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 1
08:52:41 clsMysql - Parameter: i-
08:52:41 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 0
08:52:41 clsMysql - Parameter: i-
08:52:41 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte where todo = 1
08:52:41 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM kategorie inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
08:52:41 clsMysql - Parameter: i-
08:52:41 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:52:41 clsMysql - Parameter: i-
08:52:41 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:52:41 clsMysql - Parameter: i-
08:52:41 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:52:41 clsMysql - Parameter: i-
08:52:41 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:52:41 clsMysql - Parameter: i-
08:52:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:52:45 clsMysql - Parameter: i-
08:52:45 clsMysql - Debug - Statement: SELECT id, name FROM benutzer order by name
08:52:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:52:45 clsMysql - Parameter: i-
08:52:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:52:45 clsMysql - Parameter: i-
08:52:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:52:45 clsMysql - Parameter: i-
08:52:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:52:45 clsMysql - Parameter: i-
08:52:48 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:52:48 clsMysql - Parameter: i-
08:52:49 clsMysql - Debug - Statement: SELECT count(name) as anzahl, id FROM benutzer WHERE id = ?
08:52:49 clsMysql - Parameter: i-1
08:52:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:52:49 clsMysql - Parameter: i-1
08:52:49 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte
08:52:49 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM kategorie
08:52:49 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE())
08:52:49 clsMysql - Parameter: i-1
08:52:49 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 1 DAY))
08:52:49 clsMysql - Parameter: i-1
08:52:49 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 2 DAY))
08:52:49 clsMysql - Parameter: i-1
08:52:49 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM fortschritt WHERE benutzer_id = ? AND YEAR(idate) = YEAR(CURDATE())
08:52:49 clsMysql - Parameter: i-1
08:52:49 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 1
08:52:49 clsMysql - Parameter: i-1
08:52:49 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 0
08:52:49 clsMysql - Parameter: i-1
08:52:49 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte where todo = 1
08:52:49 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM kategorie inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
08:52:49 clsMysql - Parameter: i-1
08:52:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:52:49 clsMysql - Parameter: i-
08:52:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:52:49 clsMysql - Parameter: i-
08:52:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:52:49 clsMysql - Parameter: i-
08:52:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:52:49 clsMysql - Parameter: i-
08:52:56 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:52:56 clsMysql - Parameter: i-1
08:52:56 clsMysql - Debug - Statement: SELECT DISTINCT id, name FROM benutzerset where benutzer_id = ? ORDER BY name
08:52:56 clsMysql - Parameter: i-1
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where parent_id = -1 GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-2
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-35
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-34
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-36
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-37
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-38
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-39
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-40
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-41
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-43
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-44
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-45
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-46
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-42
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-47
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-3
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-48
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-49
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-50
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-52
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-51
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-1
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-20
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-31
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-32
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-23
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-27
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-28
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-29
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-21
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-22
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-26
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-30
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-10
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-13
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-16
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-14
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-17
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-18
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-11
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-12
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-15
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-19
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-9
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-4
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-5
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-6
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-7
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-8
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-25
08:52:56 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
08:52:56 clsMysql - Parameter: i-24
08:52:56 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:52:56 clsMysql - Parameter: i-
08:52:56 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:52:56 clsMysql - Parameter: i-
08:52:56 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:52:56 clsMysql - Parameter: i-
08:52:56 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:52:56 clsMysql - Parameter: i-
08:52:56 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:52:56 clsMysql - Parameter: i-
08:52:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:52:59 clsMysql - Parameter: i-1
08:52:59 clsMysql - Debug - Statement: DELETE FROM benutzer2kategorie where benutzer_id = ?
08:52:59 clsMysql - Parameter: i-1
08:52:59 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
08:52:59 clsMysql - Parameter: ii-1-31
08:52:59 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
08:52:59 clsMysql - Parameter: ii-1-32
08:52:59 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
08:52:59 clsMysql - Parameter: ii-1-23
08:52:59 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
08:52:59 clsMysql - Parameter: ii-1-27
08:52:59 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
08:52:59 clsMysql - Parameter: ii-1-28
08:52:59 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
08:52:59 clsMysql - Parameter: ii-1-29
08:52:59 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
08:52:59 clsMysql - Parameter: ii-1-21
08:52:59 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
08:52:59 clsMysql - Parameter: ii-1-22
08:52:59 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
08:52:59 clsMysql - Parameter: ii-1-26
08:52:59 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
08:52:59 clsMysql - Parameter: ii-1-30
08:52:59 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
08:52:59 clsMysql - Parameter: ii-1-13
08:52:59 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
08:52:59 clsMysql - Parameter: ii-1-16
08:52:59 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
08:52:59 clsMysql - Parameter: ii-1-14
08:52:59 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
08:52:59 clsMysql - Parameter: ii-1-17
08:52:59 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
08:52:59 clsMysql - Parameter: ii-1-18
08:52:59 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
08:52:59 clsMysql - Parameter: ii-1-11
08:52:59 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
08:52:59 clsMysql - Parameter: ii-1-12
08:52:59 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
08:52:59 clsMysql - Parameter: ii-1-15
08:52:59 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
08:52:59 clsMysql - Parameter: ii-1-19
08:52:59 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
08:52:59 clsMysql - Parameter: ii-1-4
08:52:59 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
08:52:59 clsMysql - Parameter: ii-1-5
08:52:59 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
08:52:59 clsMysql - Parameter: ii-1-6
08:52:59 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
08:52:59 clsMysql - Parameter: ii-1-7
08:52:59 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
08:52:59 clsMysql - Parameter: ii-1-8
08:53:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:53:00 clsMysql - Parameter: i-1
08:53:00 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
08:53:00 clsMysql - Parameter: ii-1-1
08:53:00 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
08:53:00 clsMysql - Parameter: i-23
08:53:00 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
08:53:00 clsMysql - Parameter: i-20
08:53:00 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
08:53:00 clsMysql - Parameter: i-1
08:53:00 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
08:53:00 clsMysql - Parameter: i--1
08:53:00 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
08:53:00 clsMysql - Parameter: ii-1-1
08:53:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:53:00 clsMysql - Parameter: i-
08:53:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:53:00 clsMysql - Parameter: i-
08:53:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:53:00 clsMysql - Parameter: i-
08:53:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:53:00 clsMysql - Parameter: i-
08:53:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:53:00 clsMysql - Parameter: i-
08:53:52 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:53:52 clsMysql - Parameter: i-1
08:53:52 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
08:53:52 clsMysql - Parameter: i-482
08:58:50 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:58:50 clsMysql - Parameter: i-1
08:58:50 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
08:58:50 clsMysql - Parameter: ii-1-482
08:58:50 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
08:58:50 clsMysql - Parameter: ii-1-482
08:58:50 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:58:50 clsMysql - Parameter: i-1
08:58:50 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
08:58:50 clsMysql - Parameter: ii-1-1
08:58:50 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
08:58:50 clsMysql - Parameter: i-7
08:58:50 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
08:58:50 clsMysql - Parameter: i-9
08:58:50 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
08:58:50 clsMysql - Parameter: i-1
08:58:50 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
08:58:50 clsMysql - Parameter: i--1
08:58:50 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
08:58:50 clsMysql - Parameter: ii-1-1
08:58:50 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:58:50 clsMysql - Parameter: i-
08:58:50 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:58:50 clsMysql - Parameter: i-
08:58:50 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:58:50 clsMysql - Parameter: i-
08:58:50 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:58:50 clsMysql - Parameter: i-
08:58:50 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:58:50 clsMysql - Parameter: i-
08:59:04 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:59:04 clsMysql - Parameter: i-1
08:59:04 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
08:59:04 clsMysql - Parameter: i-158
08:59:35 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:59:35 clsMysql - Parameter: i-1
08:59:35 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
08:59:35 clsMysql - Parameter: ii-1-158
08:59:35 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
08:59:35 clsMysql - Parameter: ii-1-158
08:59:35 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:59:35 clsMysql - Parameter: i-1
08:59:35 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
08:59:35 clsMysql - Parameter: ii-1-1
08:59:35 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
08:59:35 clsMysql - Parameter: i-26
08:59:35 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
08:59:35 clsMysql - Parameter: i-20
08:59:35 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
08:59:35 clsMysql - Parameter: i-1
08:59:35 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
08:59:35 clsMysql - Parameter: i--1
08:59:35 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
08:59:35 clsMysql - Parameter: ii-1-1
08:59:35 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:59:35 clsMysql - Parameter: i-
08:59:35 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:59:35 clsMysql - Parameter: i-
08:59:35 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:59:35 clsMysql - Parameter: i-
08:59:35 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:59:35 clsMysql - Parameter: i-
08:59:35 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:59:35 clsMysql - Parameter: i-
08:59:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
08:59:45 clsMysql - Parameter: i-1
08:59:45 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
08:59:45 clsMysql - Parameter: i-495
09:03:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:03:26 clsMysql - Parameter: i-1
09:03:26 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:03:26 clsMysql - Parameter: ii-1-495
09:03:26 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:03:26 clsMysql - Parameter: ii-1-495
09:03:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:03:26 clsMysql - Parameter: i-1
09:03:26 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:03:26 clsMysql - Parameter: ii-1-1
09:03:26 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:03:26 clsMysql - Parameter: i-4
09:03:26 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:03:26 clsMysql - Parameter: i-9
09:03:26 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:03:26 clsMysql - Parameter: i-1
09:03:26 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:03:26 clsMysql - Parameter: i--1
09:03:26 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:03:26 clsMysql - Parameter: ii-1-1
09:03:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:03:26 clsMysql - Parameter: i-
09:03:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:03:26 clsMysql - Parameter: i-
09:03:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:03:26 clsMysql - Parameter: i-
09:03:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:03:26 clsMysql - Parameter: i-
09:03:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:03:26 clsMysql - Parameter: i-
09:03:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:03:30 clsMysql - Parameter: i-1
09:03:30 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:03:30 clsMysql - Parameter: i-22
09:03:31 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:03:31 clsMysql - Parameter: i-1
09:03:31 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:03:31 clsMysql - Parameter: ii-1-22
09:03:31 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:03:31 clsMysql - Parameter: ii-1-22
09:03:31 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:03:31 clsMysql - Parameter: i-1
09:03:31 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:03:31 clsMysql - Parameter: ii-1-1
09:03:31 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:03:31 clsMysql - Parameter: i-15
09:03:31 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:03:31 clsMysql - Parameter: i-10
09:03:31 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:03:31 clsMysql - Parameter: i-1
09:03:31 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:03:31 clsMysql - Parameter: i--1
09:03:31 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:03:31 clsMysql - Parameter: ii-1-1
09:03:31 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:03:31 clsMysql - Parameter: i-
09:03:31 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:03:31 clsMysql - Parameter: i-
09:03:31 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:03:31 clsMysql - Parameter: i-
09:03:31 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:03:31 clsMysql - Parameter: i-
09:03:31 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:03:31 clsMysql - Parameter: i-
09:03:39 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:03:39 clsMysql - Parameter: i-1
09:03:39 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:03:39 clsMysql - Parameter: i-258
09:03:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:03:46 clsMysql - Parameter: i-1
09:03:46 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:03:46 clsMysql - Parameter: ii-1-258
09:03:46 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:03:46 clsMysql - Parameter: ii-1-258
09:03:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:03:46 clsMysql - Parameter: i-1
09:03:46 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:03:46 clsMysql - Parameter: ii-1-1
09:03:46 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:03:46 clsMysql - Parameter: i-5
09:03:46 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:03:46 clsMysql - Parameter: i-9
09:03:46 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:03:46 clsMysql - Parameter: i-1
09:03:46 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:03:46 clsMysql - Parameter: i--1
09:03:46 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:03:46 clsMysql - Parameter: ii-1-1
09:03:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:03:46 clsMysql - Parameter: i-
09:03:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:03:46 clsMysql - Parameter: i-
09:03:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:03:46 clsMysql - Parameter: i-
09:03:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:03:46 clsMysql - Parameter: i-
09:03:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:03:46 clsMysql - Parameter: i-
09:04:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:04:02 clsMysql - Parameter: i-1
09:04:02 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:04:02 clsMysql - Parameter: i-102
09:07:40 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:07:40 clsMysql - Parameter: i-1
09:07:40 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:07:40 clsMysql - Parameter: ii-1-102
09:07:40 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:07:40 clsMysql - Parameter: ii-1-102
09:07:40 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:07:40 clsMysql - Parameter: i-1
09:07:40 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:07:40 clsMysql - Parameter: ii-1-1
09:07:40 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:07:40 clsMysql - Parameter: i-7
09:07:40 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:07:40 clsMysql - Parameter: i-9
09:07:40 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:07:40 clsMysql - Parameter: i-1
09:07:40 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:07:40 clsMysql - Parameter: i--1
09:07:40 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:07:40 clsMysql - Parameter: ii-1-1
09:07:40 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:07:40 clsMysql - Parameter: i-
09:07:40 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:07:40 clsMysql - Parameter: i-
09:07:40 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:07:40 clsMysql - Parameter: i-
09:07:40 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:07:40 clsMysql - Parameter: i-
09:07:40 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:07:40 clsMysql - Parameter: i-
09:07:55 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:07:55 clsMysql - Parameter: i-1
09:07:55 clsMysql - Debug - Statement: SELECT hinweis FROM karte WHERE id = ?
09:07:55 clsMysql - Parameter: i-173
09:08:17 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:08:17 clsMysql - Parameter: i-1
09:08:17 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:08:17 clsMysql - Parameter: i-173
09:09:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:02 clsMysql - Parameter: i-1
09:09:02 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:09:02 clsMysql - Parameter: ii-1-173
09:09:02 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:09:02 clsMysql - Parameter: ii-1-173
09:09:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:02 clsMysql - Parameter: i-1
09:09:02 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:09:02 clsMysql - Parameter: ii-1-1
09:09:02 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:09:02 clsMysql - Parameter: i-18
09:09:02 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:09:02 clsMysql - Parameter: i-10
09:09:02 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:09:02 clsMysql - Parameter: i-1
09:09:02 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:09:02 clsMysql - Parameter: i--1
09:09:02 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:09:02 clsMysql - Parameter: ii-1-1
09:09:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:02 clsMysql - Parameter: i-
09:09:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:02 clsMysql - Parameter: i-
09:09:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:02 clsMysql - Parameter: i-
09:09:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:02 clsMysql - Parameter: i-
09:09:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:02 clsMysql - Parameter: i-
09:09:09 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:09 clsMysql - Parameter: i-1
09:09:09 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:09:09 clsMysql - Parameter: i-368
09:09:10 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:10 clsMysql - Parameter: i-1
09:09:10 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:09:10 clsMysql - Parameter: ii-1-368
09:09:10 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:09:10 clsMysql - Parameter: ii-1-368
09:09:10 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:10 clsMysql - Parameter: i-1
09:09:10 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:09:10 clsMysql - Parameter: ii-1-1
09:09:10 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:09:10 clsMysql - Parameter: i-11
09:09:10 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:09:10 clsMysql - Parameter: i-10
09:09:10 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:09:10 clsMysql - Parameter: i-1
09:09:10 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:09:10 clsMysql - Parameter: i--1
09:09:10 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:09:10 clsMysql - Parameter: ii-1-1
09:09:11 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:11 clsMysql - Parameter: i-
09:09:11 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:11 clsMysql - Parameter: i-
09:09:11 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:11 clsMysql - Parameter: i-
09:09:11 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:11 clsMysql - Parameter: i-
09:09:11 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:11 clsMysql - Parameter: i-
09:09:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:14 clsMysql - Parameter: i-1
09:09:14 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:09:14 clsMysql - Parameter: i-212
09:09:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:18 clsMysql - Parameter: i-1
09:09:18 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:09:18 clsMysql - Parameter: ii-1-212
09:09:18 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:09:18 clsMysql - Parameter: ii-1-212
09:09:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:18 clsMysql - Parameter: i-1
09:09:18 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:09:18 clsMysql - Parameter: ii-1-1
09:09:18 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:09:18 clsMysql - Parameter: i-18
09:09:18 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:09:18 clsMysql - Parameter: i-10
09:09:18 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:09:18 clsMysql - Parameter: i-1
09:09:18 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:09:18 clsMysql - Parameter: i--1
09:09:18 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:09:18 clsMysql - Parameter: ii-1-1
09:09:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:18 clsMysql - Parameter: i-
09:09:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:18 clsMysql - Parameter: i-
09:09:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:18 clsMysql - Parameter: i-
09:09:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:18 clsMysql - Parameter: i-
09:09:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:18 clsMysql - Parameter: i-
09:09:21 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:21 clsMysql - Parameter: i-1
09:09:21 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:09:21 clsMysql - Parameter: i-382
09:09:27 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:27 clsMysql - Parameter: i-1
09:09:27 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:09:27 clsMysql - Parameter: ii-1-382
09:09:27 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:09:27 clsMysql - Parameter: ii-1-382
09:09:27 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:27 clsMysql - Parameter: i-1
09:09:27 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:09:27 clsMysql - Parameter: ii-1-1
09:09:27 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:09:27 clsMysql - Parameter: i-13
09:09:27 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:09:27 clsMysql - Parameter: i-10
09:09:27 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:09:27 clsMysql - Parameter: i-1
09:09:27 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:09:27 clsMysql - Parameter: i--1
09:09:27 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:09:27 clsMysql - Parameter: ii-1-1
09:09:27 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:27 clsMysql - Parameter: i-
09:09:27 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:27 clsMysql - Parameter: i-
09:09:27 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:27 clsMysql - Parameter: i-
09:09:27 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:27 clsMysql - Parameter: i-
09:09:27 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:27 clsMysql - Parameter: i-
09:09:32 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:32 clsMysql - Parameter: i-1
09:09:32 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:09:32 clsMysql - Parameter: i-234
09:09:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:34 clsMysql - Parameter: i-1
09:09:34 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:09:34 clsMysql - Parameter: ii-1-234
09:09:34 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:09:34 clsMysql - Parameter: ii-1-234
09:09:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:34 clsMysql - Parameter: i-1
09:09:34 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:09:34 clsMysql - Parameter: ii-1-1
09:09:34 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:09:34 clsMysql - Parameter: i-18
09:09:34 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:09:34 clsMysql - Parameter: i-10
09:09:34 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:09:34 clsMysql - Parameter: i-1
09:09:34 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:09:34 clsMysql - Parameter: i--1
09:09:34 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:09:34 clsMysql - Parameter: ii-1-1
09:09:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:34 clsMysql - Parameter: i-
09:09:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:34 clsMysql - Parameter: i-
09:09:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:34 clsMysql - Parameter: i-
09:09:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:34 clsMysql - Parameter: i-
09:09:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:34 clsMysql - Parameter: i-
09:09:39 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:39 clsMysql - Parameter: i-1
09:09:39 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:09:39 clsMysql - Parameter: i-373
09:09:42 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:42 clsMysql - Parameter: i-1
09:09:42 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:09:42 clsMysql - Parameter: ii-1-373
09:09:42 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:09:42 clsMysql - Parameter: ii-1-373
09:09:42 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:42 clsMysql - Parameter: i-1
09:09:42 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:09:42 clsMysql - Parameter: ii-1-1
09:09:43 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:09:43 clsMysql - Parameter: i-26
09:09:43 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:09:43 clsMysql - Parameter: i-20
09:09:43 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:09:43 clsMysql - Parameter: i-1
09:09:43 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:09:43 clsMysql - Parameter: i--1
09:09:43 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:09:43 clsMysql - Parameter: ii-1-1
09:09:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:43 clsMysql - Parameter: i-
09:09:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:43 clsMysql - Parameter: i-
09:09:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:43 clsMysql - Parameter: i-
09:09:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:43 clsMysql - Parameter: i-
09:09:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:43 clsMysql - Parameter: i-
09:09:54 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:09:54 clsMysql - Parameter: i-1
09:09:54 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:09:54 clsMysql - Parameter: i-510
09:10:03 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:10:03 clsMysql - Parameter: i-1
09:10:03 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:10:03 clsMysql - Parameter: ii-1-510
09:10:03 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:10:03 clsMysql - Parameter: ii-1-510
09:10:03 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:10:03 clsMysql - Parameter: i-1
09:10:03 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:10:03 clsMysql - Parameter: ii-1-1
09:10:03 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:10:03 clsMysql - Parameter: i-18
09:10:03 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:10:03 clsMysql - Parameter: i-10
09:10:03 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:10:03 clsMysql - Parameter: i-1
09:10:03 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:10:03 clsMysql - Parameter: i--1
09:10:03 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:10:03 clsMysql - Parameter: ii-1-1
09:10:03 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:10:03 clsMysql - Parameter: i-
09:10:03 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:10:03 clsMysql - Parameter: i-
09:10:03 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:10:03 clsMysql - Parameter: i-
09:10:03 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:10:03 clsMysql - Parameter: i-
09:10:03 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:10:03 clsMysql - Parameter: i-
09:10:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:10:07 clsMysql - Parameter: i-1
09:10:07 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:10:07 clsMysql - Parameter: i-366
09:10:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:10:12 clsMysql - Parameter: i-1
09:10:12 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:10:12 clsMysql - Parameter: ii-1-366
09:10:12 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:10:12 clsMysql - Parameter: ii-1-366
09:10:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:10:12 clsMysql - Parameter: i-1
09:10:12 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:10:12 clsMysql - Parameter: ii-1-1
09:10:12 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:10:12 clsMysql - Parameter: i-11
09:10:12 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:10:12 clsMysql - Parameter: i-10
09:10:12 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:10:12 clsMysql - Parameter: i-1
09:10:12 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:10:12 clsMysql - Parameter: i--1
09:10:12 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:10:12 clsMysql - Parameter: ii-1-1
09:10:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:10:12 clsMysql - Parameter: i-
09:10:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:10:12 clsMysql - Parameter: i-
09:10:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:10:12 clsMysql - Parameter: i-
09:10:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:10:12 clsMysql - Parameter: i-
09:10:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:10:12 clsMysql - Parameter: i-
09:10:19 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:10:19 clsMysql - Parameter: i-1
09:10:19 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:10:19 clsMysql - Parameter: i-214
09:10:28 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:10:28 clsMysql - Parameter: i-1
09:10:28 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:10:28 clsMysql - Parameter: ii-1-214
09:10:28 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:10:28 clsMysql - Parameter: ii-1-214
09:10:28 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:10:28 clsMysql - Parameter: i-1
09:10:28 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:10:28 clsMysql - Parameter: ii-1-1
09:10:28 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:10:28 clsMysql - Parameter: i-28
09:10:28 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:10:28 clsMysql - Parameter: i-20
09:10:28 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:10:28 clsMysql - Parameter: i-1
09:10:28 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:10:28 clsMysql - Parameter: i--1
09:10:28 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:10:28 clsMysql - Parameter: ii-1-1
09:10:28 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:10:28 clsMysql - Parameter: i-
09:10:28 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:10:28 clsMysql - Parameter: i-
09:10:28 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:10:28 clsMysql - Parameter: i-
09:10:28 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:10:28 clsMysql - Parameter: i-
09:10:28 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:10:28 clsMysql - Parameter: i-
09:10:40 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:10:40 clsMysql - Parameter: i-1
09:10:40 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:10:40 clsMysql - Parameter: i-538
09:11:08 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:11:08 clsMysql - Parameter: i-1
09:11:08 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:11:08 clsMysql - Parameter: ii-1-538
09:11:08 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:11:08 clsMysql - Parameter: ii-1-538
09:11:09 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:11:09 clsMysql - Parameter: i-1
09:11:09 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:11:09 clsMysql - Parameter: ii-1-1
09:11:09 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:11:09 clsMysql - Parameter: i-16
09:11:09 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:11:09 clsMysql - Parameter: i-10
09:11:09 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:11:09 clsMysql - Parameter: i-1
09:11:09 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:11:09 clsMysql - Parameter: i--1
09:11:09 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:11:09 clsMysql - Parameter: ii-1-1
09:11:09 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:11:09 clsMysql - Parameter: i-
09:11:09 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:11:09 clsMysql - Parameter: i-
09:11:09 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:11:09 clsMysql - Parameter: i-
09:11:09 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:11:09 clsMysql - Parameter: i-
09:11:09 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:11:09 clsMysql - Parameter: i-
09:11:21 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:11:21 clsMysql - Parameter: i-1
09:11:21 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:11:21 clsMysql - Parameter: i-322
09:11:28 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:11:28 clsMysql - Parameter: i-1
09:11:28 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:11:28 clsMysql - Parameter: ii-1-322
09:11:28 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:11:28 clsMysql - Parameter: ii-1-322
09:11:28 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:11:28 clsMysql - Parameter: i-1
09:11:28 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:11:28 clsMysql - Parameter: ii-1-1
09:11:28 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:11:28 clsMysql - Parameter: i-6
09:11:28 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:11:28 clsMysql - Parameter: i-9
09:11:28 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:11:28 clsMysql - Parameter: i-1
09:11:28 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:11:28 clsMysql - Parameter: i--1
09:11:28 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:11:28 clsMysql - Parameter: ii-1-1
09:11:28 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:11:28 clsMysql - Parameter: i-
09:11:28 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:11:28 clsMysql - Parameter: i-
09:11:28 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:11:28 clsMysql - Parameter: i-
09:11:28 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:11:28 clsMysql - Parameter: i-
09:11:28 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:11:28 clsMysql - Parameter: i-
09:11:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:11:38 clsMysql - Parameter: i-1
09:11:38 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:11:38 clsMysql - Parameter: i-115
09:11:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:11:53 clsMysql - Parameter: i-1
09:11:53 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:11:53 clsMysql - Parameter: ii-1-115
09:11:53 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:11:53 clsMysql - Parameter: ii-1-115
09:11:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:11:53 clsMysql - Parameter: i-1
09:11:53 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:11:53 clsMysql - Parameter: ii-1-1
09:11:54 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:11:54 clsMysql - Parameter: i-16
09:11:54 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:11:54 clsMysql - Parameter: i-10
09:11:54 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:11:54 clsMysql - Parameter: i-1
09:11:54 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:11:54 clsMysql - Parameter: i--1
09:11:54 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:11:54 clsMysql - Parameter: ii-1-1
09:11:54 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:11:54 clsMysql - Parameter: i-
09:11:54 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:11:54 clsMysql - Parameter: i-
09:11:54 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:11:54 clsMysql - Parameter: i-
09:11:54 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:11:54 clsMysql - Parameter: i-
09:11:54 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:11:54 clsMysql - Parameter: i-
09:12:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:12:02 clsMysql - Parameter: i-1
09:12:02 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:12:02 clsMysql - Parameter: i-289
09:12:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:12:13 clsMysql - Parameter: i-1
09:12:13 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:12:13 clsMysql - Parameter: ii-1-289
09:12:13 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:12:13 clsMysql - Parameter: ii-1-289
09:12:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:12:13 clsMysql - Parameter: i-1
09:12:13 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:12:13 clsMysql - Parameter: ii-1-1
09:12:13 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:12:13 clsMysql - Parameter: i-8
09:12:13 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:12:13 clsMysql - Parameter: i-9
09:12:13 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:12:13 clsMysql - Parameter: i-1
09:12:13 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:12:13 clsMysql - Parameter: i--1
09:12:13 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:12:13 clsMysql - Parameter: ii-1-1
09:12:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:12:13 clsMysql - Parameter: i-
09:12:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:12:13 clsMysql - Parameter: i-
09:12:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:12:13 clsMysql - Parameter: i-
09:12:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:12:13 clsMysql - Parameter: i-
09:12:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:12:13 clsMysql - Parameter: i-
09:12:55 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:12:55 clsMysql - Parameter: i-1
09:12:55 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:12:55 clsMysql - Parameter: i-203
09:12:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:12:58 clsMysql - Parameter: i-1
09:12:58 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:12:58 clsMysql - Parameter: ii-1-203
09:12:58 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:12:58 clsMysql - Parameter: ii-1-203
09:12:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:12:58 clsMysql - Parameter: i-1
09:12:58 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:12:59 clsMysql - Parameter: ii-1-1
09:12:59 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:12:59 clsMysql - Parameter: i-5
09:12:59 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:12:59 clsMysql - Parameter: i-9
09:12:59 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:12:59 clsMysql - Parameter: i-1
09:12:59 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:12:59 clsMysql - Parameter: i--1
09:12:59 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:12:59 clsMysql - Parameter: ii-1-1
09:12:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:12:59 clsMysql - Parameter: i-
09:12:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:12:59 clsMysql - Parameter: i-
09:12:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:12:59 clsMysql - Parameter: i-
09:12:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:12:59 clsMysql - Parameter: i-
09:12:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:12:59 clsMysql - Parameter: i-
09:13:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:13:14 clsMysql - Parameter: i-1
09:13:14 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte
09:13:14 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM kategorie
09:13:14 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE())
09:13:14 clsMysql - Parameter: i-1
09:13:14 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 1 DAY))
09:13:14 clsMysql - Parameter: i-1
09:13:14 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 2 DAY))
09:13:14 clsMysql - Parameter: i-1
09:13:14 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM fortschritt WHERE benutzer_id = ? AND YEAR(idate) = YEAR(CURDATE())
09:13:14 clsMysql - Parameter: i-1
09:13:14 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 1
09:13:14 clsMysql - Parameter: i-1
09:13:14 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 0
09:13:14 clsMysql - Parameter: i-1
09:13:14 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte where todo = 1
09:13:14 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM kategorie inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:13:14 clsMysql - Parameter: i-1
09:13:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:13:14 clsMysql - Parameter: i-
09:13:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:13:14 clsMysql - Parameter: i-
09:13:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:13:14 clsMysql - Parameter: i-
09:13:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:13:14 clsMysql - Parameter: i-
09:13:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:13:43 clsMysql - Parameter: i-1
09:13:43 clsMysql - Debug - Statement: SELECT DISTINCT id, name FROM benutzerset where benutzer_id = ? ORDER BY name
09:13:43 clsMysql - Parameter: i-1
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where parent_id = -1 GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-2
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-35
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-34
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-36
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-37
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-38
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-39
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-40
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-41
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-43
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-44
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-45
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-46
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-42
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-47
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-3
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-48
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-49
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-50
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-52
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-51
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-1
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-20
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-31
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-32
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-23
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-27
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-28
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-29
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-21
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-22
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-26
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-30
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-10
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-13
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-16
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-14
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-17
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-18
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-11
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-12
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-15
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-19
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-9
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-4
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-5
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-6
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-7
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-8
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-25
09:13:43 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:13:43 clsMysql - Parameter: i-24
09:13:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:13:43 clsMysql - Parameter: i-
09:13:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:13:43 clsMysql - Parameter: i-
09:13:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:13:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:13:43 clsMysql - Parameter: i-
09:13:43 clsMysql - Parameter: i-
09:13:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:13:43 clsMysql - Parameter: i-
09:13:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:13:46 clsMysql - Parameter: i-1
09:13:46 clsMysql - Debug - Statement: DELETE FROM benutzer2kategorie where benutzer_id = ?
09:13:46 clsMysql - Parameter: i-1
09:13:46 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:13:46 clsMysql - Parameter: ii-1-31
09:13:46 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:13:46 clsMysql - Parameter: ii-1-32
09:13:46 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:13:46 clsMysql - Parameter: ii-1-23
09:13:46 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:13:46 clsMysql - Parameter: ii-1-27
09:13:46 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:13:46 clsMysql - Parameter: ii-1-28
09:13:46 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:13:46 clsMysql - Parameter: ii-1-29
09:13:46 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:13:46 clsMysql - Parameter: ii-1-21
09:13:46 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:13:46 clsMysql - Parameter: ii-1-22
09:13:46 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:13:46 clsMysql - Parameter: ii-1-26
09:13:46 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:13:46 clsMysql - Parameter: ii-1-30
09:13:46 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:13:46 clsMysql - Parameter: ii-1-13
09:13:46 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:13:46 clsMysql - Parameter: ii-1-16
09:13:46 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:13:46 clsMysql - Parameter: ii-1-14
09:13:46 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:13:46 clsMysql - Parameter: ii-1-17
09:13:46 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:13:46 clsMysql - Parameter: ii-1-18
09:13:46 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:13:46 clsMysql - Parameter: ii-1-11
09:13:46 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:13:46 clsMysql - Parameter: ii-1-12
09:13:46 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:13:46 clsMysql - Parameter: ii-1-15
09:13:46 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:13:46 clsMysql - Parameter: ii-1-19
09:13:47 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:13:47 clsMysql - Parameter: ii-1-4
09:13:47 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:13:47 clsMysql - Parameter: ii-1-5
09:13:47 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:13:47 clsMysql - Parameter: ii-1-6
09:13:47 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:13:47 clsMysql - Parameter: ii-1-7
09:13:47 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:13:47 clsMysql - Parameter: ii-1-8
09:13:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:13:47 clsMysql - Parameter: i-1
09:13:47 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:13:47 clsMysql - Parameter: ii-1-1
09:13:47 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:13:47 clsMysql - Parameter: i-16
09:13:47 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:13:47 clsMysql - Parameter: i-10
09:13:47 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:13:47 clsMysql - Parameter: i-1
09:13:47 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:13:47 clsMysql - Parameter: i--1
09:13:47 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:13:47 clsMysql - Parameter: ii-1-1
09:13:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:13:47 clsMysql - Parameter: i-
09:13:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:13:47 clsMysql - Parameter: i-
09:13:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:13:47 clsMysql - Parameter: i-
09:13:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:13:47 clsMysql - Parameter: i-
09:13:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:13:47 clsMysql - Parameter: i-
09:13:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:13:53 clsMysql - Parameter: i-1
09:13:53 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:13:53 clsMysql - Parameter: i-299
09:14:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:14:00 clsMysql - Parameter: i-1
09:14:00 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:14:00 clsMysql - Parameter: ii-1-299
09:14:00 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:14:00 clsMysql - Parameter: ii-1-299
09:14:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:14:00 clsMysql - Parameter: i-1
09:14:00 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:14:00 clsMysql - Parameter: ii-1-1
09:14:00 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:14:00 clsMysql - Parameter: i-5
09:14:00 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:14:00 clsMysql - Parameter: i-9
09:14:00 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:14:00 clsMysql - Parameter: i-1
09:14:00 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:14:00 clsMysql - Parameter: i--1
09:14:00 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:14:00 clsMysql - Parameter: ii-1-1
09:14:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:14:00 clsMysql - Parameter: i-
09:14:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:14:00 clsMysql - Parameter: i-
09:14:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:14:00 clsMysql - Parameter: i-
09:14:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:14:00 clsMysql - Parameter: i-
09:14:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:14:00 clsMysql - Parameter: i-
09:14:24 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:14:24 clsMysql - Parameter: i-1
09:14:24 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:14:24 clsMysql - Parameter: i-93
09:14:28 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:14:28 clsMysql - Parameter: i-1
09:14:28 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:14:28 clsMysql - Parameter: ii-1-93
09:14:28 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:14:28 clsMysql - Parameter: ii-1-93
09:14:28 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:14:28 clsMysql - Parameter: i-1
09:14:28 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:14:28 clsMysql - Parameter: ii-1-1
09:14:28 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:14:28 clsMysql - Parameter: i-6
09:14:28 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:14:28 clsMysql - Parameter: i-9
09:14:28 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:14:28 clsMysql - Parameter: i-1
09:14:28 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:14:28 clsMysql - Parameter: i--1
09:14:28 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:14:28 clsMysql - Parameter: ii-1-1
09:14:28 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:14:28 clsMysql - Parameter: i-
09:14:28 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:14:28 clsMysql - Parameter: i-
09:14:28 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:14:28 clsMysql - Parameter: i-
09:14:28 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:14:28 clsMysql - Parameter: i-
09:14:28 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:14:28 clsMysql - Parameter: i-
09:14:41 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:14:41 clsMysql - Parameter: i-1
09:14:41 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:14:41 clsMysql - Parameter: i-133
09:16:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:16:34 clsMysql - Parameter: i-1
09:16:34 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:16:34 clsMysql - Parameter: ii-1-133
09:16:34 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:16:34 clsMysql - Parameter: ii-1-133
09:16:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:16:34 clsMysql - Parameter: i-1
09:16:34 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:16:34 clsMysql - Parameter: ii-1-1
09:16:34 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:16:34 clsMysql - Parameter: i-31
09:16:34 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:16:34 clsMysql - Parameter: i-20
09:16:34 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:16:34 clsMysql - Parameter: i-1
09:16:34 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:16:34 clsMysql - Parameter: i--1
09:16:34 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:16:34 clsMysql - Parameter: ii-1-1
09:16:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:16:34 clsMysql - Parameter: i-
09:16:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:16:34 clsMysql - Parameter: i-
09:16:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:16:34 clsMysql - Parameter: i-
09:16:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:16:34 clsMysql - Parameter: i-
09:16:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:16:34 clsMysql - Parameter: i-
09:16:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:16:43 clsMysql - Parameter: i-1
09:16:43 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:16:43 clsMysql - Parameter: i-571
09:16:56 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:16:56 clsMysql - Parameter: i-1
09:16:56 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:16:56 clsMysql - Parameter: ii-1-571
09:16:56 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:16:56 clsMysql - Parameter: ii-1-571
09:16:56 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:16:56 clsMysql - Parameter: i-1
09:16:56 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:16:56 clsMysql - Parameter: ii-1-1
09:16:56 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:16:56 clsMysql - Parameter: i-26
09:16:56 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:16:56 clsMysql - Parameter: i-20
09:16:56 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:16:56 clsMysql - Parameter: i-1
09:16:56 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:16:56 clsMysql - Parameter: i--1
09:16:56 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:16:56 clsMysql - Parameter: ii-1-1
09:16:56 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:16:56 clsMysql - Parameter: i-
09:16:56 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:16:56 clsMysql - Parameter: i-
09:16:56 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:16:56 clsMysql - Parameter: i-
09:16:56 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:16:56 clsMysql - Parameter: i-
09:16:56 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:16:56 clsMysql - Parameter: i-
09:17:06 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:17:06 clsMysql - Parameter: i-1
09:17:06 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:17:06 clsMysql - Parameter: i-499
09:17:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:17:14 clsMysql - Parameter: i-1
09:17:14 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:17:14 clsMysql - Parameter: ii-1-499
09:17:14 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:17:14 clsMysql - Parameter: ii-1-499
09:17:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:17:14 clsMysql - Parameter: i-1
09:17:14 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:17:14 clsMysql - Parameter: ii-1-1
09:17:14 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:17:14 clsMysql - Parameter: i-27
09:17:14 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:17:14 clsMysql - Parameter: i-20
09:17:14 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:17:14 clsMysql - Parameter: i-1
09:17:14 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:17:14 clsMysql - Parameter: i--1
09:17:14 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:17:14 clsMysql - Parameter: ii-1-1
09:17:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:17:14 clsMysql - Parameter: i-
09:17:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:17:14 clsMysql - Parameter: i-
09:17:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:17:14 clsMysql - Parameter: i-
09:17:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:17:14 clsMysql - Parameter: i-
09:17:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:17:14 clsMysql - Parameter: i-
09:17:25 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:17:25 clsMysql - Parameter: i-1
09:17:25 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:17:25 clsMysql - Parameter: i-524
09:17:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:17:34 clsMysql - Parameter: i-1
09:17:34 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:17:34 clsMysql - Parameter: ii-1-524
09:17:34 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:17:34 clsMysql - Parameter: ii-1-524
09:17:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:17:34 clsMysql - Parameter: i-1
09:17:34 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:17:34 clsMysql - Parameter: ii-1-1
09:17:34 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:17:34 clsMysql - Parameter: i-7
09:17:34 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:17:34 clsMysql - Parameter: i-9
09:17:34 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:17:34 clsMysql - Parameter: i-1
09:17:34 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:17:34 clsMysql - Parameter: i--1
09:17:34 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:17:34 clsMysql - Parameter: ii-1-1
09:17:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:17:34 clsMysql - Parameter: i-
09:17:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:17:34 clsMysql - Parameter: i-
09:17:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:17:34 clsMysql - Parameter: i-
09:17:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:17:34 clsMysql - Parameter: i-
09:17:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:17:34 clsMysql - Parameter: i-
09:17:39 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:17:39 clsMysql - Parameter: i-1
09:17:39 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:17:39 clsMysql - Parameter: i-150
09:17:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:17:45 clsMysql - Parameter: i-1
09:17:45 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:17:45 clsMysql - Parameter: ii-1-150
09:17:45 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:17:45 clsMysql - Parameter: ii-1-150
09:17:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:17:45 clsMysql - Parameter: i-1
09:17:45 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:17:45 clsMysql - Parameter: ii-1-1
09:17:45 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:17:45 clsMysql - Parameter: i-22
09:17:45 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:17:45 clsMysql - Parameter: i-20
09:17:45 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:17:45 clsMysql - Parameter: i-1
09:17:45 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:17:45 clsMysql - Parameter: i--1
09:17:45 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:17:45 clsMysql - Parameter: ii-1-1
09:17:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:17:45 clsMysql - Parameter: i-
09:17:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:17:45 clsMysql - Parameter: i-
09:17:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:17:45 clsMysql - Parameter: i-
09:17:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:17:45 clsMysql - Parameter: i-
09:17:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:17:45 clsMysql - Parameter: i-
09:18:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:18:02 clsMysql - Parameter: i-1
09:18:02 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:18:02 clsMysql - Parameter: i-473
09:18:24 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:18:24 clsMysql - Parameter: i-1
09:18:24 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:18:24 clsMysql - Parameter: ii-1-473
09:18:24 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:18:24 clsMysql - Parameter: ii-1-473
09:18:24 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:18:24 clsMysql - Parameter: i-1
09:18:24 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:18:24 clsMysql - Parameter: ii-1-1
09:18:24 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:18:24 clsMysql - Parameter: i-5
09:18:24 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:18:24 clsMysql - Parameter: i-9
09:18:24 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:18:24 clsMysql - Parameter: i-1
09:18:24 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:18:24 clsMysql - Parameter: i--1
09:18:24 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:18:24 clsMysql - Parameter: ii-1-1
09:18:24 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:18:24 clsMysql - Parameter: i-
09:18:24 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:18:24 clsMysql - Parameter: i-
09:18:24 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:18:24 clsMysql - Parameter: i-
09:18:24 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:18:24 clsMysql - Parameter: i-
09:18:24 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:18:24 clsMysql - Parameter: i-
09:18:41 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:18:41 clsMysql - Parameter: i-1
09:18:41 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:18:41 clsMysql - Parameter: i-87
09:18:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:18:47 clsMysql - Parameter: i-1
09:18:47 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:18:47 clsMysql - Parameter: ii-1-87
09:18:47 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:18:47 clsMysql - Parameter: ii-1-87
09:18:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:18:47 clsMysql - Parameter: i-1
09:18:47 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:18:47 clsMysql - Parameter: ii-1-1
09:18:47 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:18:47 clsMysql - Parameter: i-29
09:18:47 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:18:47 clsMysql - Parameter: i-20
09:18:47 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:18:47 clsMysql - Parameter: i-1
09:18:47 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:18:47 clsMysql - Parameter: i--1
09:18:47 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:18:47 clsMysql - Parameter: ii-1-1
09:18:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:18:47 clsMysql - Parameter: i-
09:18:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:18:47 clsMysql - Parameter: i-
09:18:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:18:47 clsMysql - Parameter: i-
09:18:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:18:47 clsMysql - Parameter: i-
09:18:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:18:47 clsMysql - Parameter: i-
09:19:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:19:12 clsMysql - Parameter: i-1
09:19:12 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:19:12 clsMysql - Parameter: i-550
09:19:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:19:26 clsMysql - Parameter: i-1
09:19:26 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:19:26 clsMysql - Parameter: ii-1-550
09:19:26 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:19:26 clsMysql - Parameter: ii-1-550
09:19:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:19:26 clsMysql - Parameter: i-1
09:19:26 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:19:26 clsMysql - Parameter: ii-1-1
09:19:26 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:19:26 clsMysql - Parameter: i-21
09:19:26 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:19:26 clsMysql - Parameter: i-20
09:19:26 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:19:26 clsMysql - Parameter: i-1
09:19:26 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:19:26 clsMysql - Parameter: i--1
09:19:26 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:19:26 clsMysql - Parameter: ii-1-1
09:19:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:19:26 clsMysql - Parameter: i-
09:19:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:19:26 clsMysql - Parameter: i-
09:19:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:19:26 clsMysql - Parameter: i-
09:19:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:19:26 clsMysql - Parameter: i-
09:19:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:19:26 clsMysql - Parameter: i-
09:19:39 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:19:39 clsMysql - Parameter: i-1
09:19:39 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:19:39 clsMysql - Parameter: i-437
09:19:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:19:47 clsMysql - Parameter: i-1
09:19:47 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:19:47 clsMysql - Parameter: ii-1-437
09:19:47 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:19:47 clsMysql - Parameter: ii-1-437
09:19:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:19:47 clsMysql - Parameter: i-1
09:19:47 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:19:47 clsMysql - Parameter: ii-1-1
09:19:47 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:19:47 clsMysql - Parameter: i-26
09:19:47 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:19:47 clsMysql - Parameter: i-20
09:19:47 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:19:47 clsMysql - Parameter: i-1
09:19:47 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:19:47 clsMysql - Parameter: i--1
09:19:47 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:19:47 clsMysql - Parameter: ii-1-1
09:19:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:19:47 clsMysql - Parameter: i-
09:19:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:19:47 clsMysql - Parameter: i-
09:19:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:19:47 clsMysql - Parameter: i-
09:19:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:19:47 clsMysql - Parameter: i-
09:19:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:19:47 clsMysql - Parameter: i-
09:19:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:19:57 clsMysql - Parameter: i-1
09:19:57 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:19:57 clsMysql - Parameter: i-511
09:20:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:20:20 clsMysql - Parameter: i-1
09:20:20 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:20:20 clsMysql - Parameter: ii-1-511
09:20:20 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:20:20 clsMysql - Parameter: ii-1-511
09:20:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:20:20 clsMysql - Parameter: i-1
09:20:20 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:20:20 clsMysql - Parameter: ii-1-1
09:20:20 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:20:20 clsMysql - Parameter: i-16
09:20:20 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:20:20 clsMysql - Parameter: i-10
09:20:20 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:20:20 clsMysql - Parameter: i-1
09:20:20 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:20:20 clsMysql - Parameter: i--1
09:20:20 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:20:20 clsMysql - Parameter: ii-1-1
09:20:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:20:20 clsMysql - Parameter: i-
09:20:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:20:20 clsMysql - Parameter: i-
09:20:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:20:20 clsMysql - Parameter: i-
09:20:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:20:20 clsMysql - Parameter: i-
09:20:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:20:20 clsMysql - Parameter: i-
09:20:27 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:20:27 clsMysql - Parameter: i-1
09:20:27 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:20:27 clsMysql - Parameter: i-323
09:20:31 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:20:31 clsMysql - Parameter: i-1
09:20:31 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:20:31 clsMysql - Parameter: ii-1-323
09:20:31 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:20:31 clsMysql - Parameter: ii-1-323
09:20:31 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:20:31 clsMysql - Parameter: i-1
09:20:31 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:20:31 clsMysql - Parameter: ii-1-1
09:20:31 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:20:31 clsMysql - Parameter: i-19
09:20:31 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:20:31 clsMysql - Parameter: i-10
09:20:31 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:20:31 clsMysql - Parameter: i-1
09:20:31 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:20:31 clsMysql - Parameter: i--1
09:20:31 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:20:31 clsMysql - Parameter: ii-1-1
09:20:32 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:20:32 clsMysql - Parameter: i-
09:20:32 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:20:32 clsMysql - Parameter: i-
09:20:32 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:20:32 clsMysql - Parameter: i-
09:20:32 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:20:32 clsMysql - Parameter: i-
09:20:32 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:20:32 clsMysql - Parameter: i-
09:20:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:20:34 clsMysql - Parameter: i-1
09:20:34 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:20:34 clsMysql - Parameter: i-415
09:20:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:20:38 clsMysql - Parameter: i-1
09:20:38 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:20:38 clsMysql - Parameter: ii-1-415
09:20:38 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:20:38 clsMysql - Parameter: ii-1-415
09:20:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:20:38 clsMysql - Parameter: i-1
09:20:38 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:20:38 clsMysql - Parameter: ii-1-1
09:20:38 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:20:38 clsMysql - Parameter: i-15
09:20:38 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:20:38 clsMysql - Parameter: i-10
09:20:38 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:20:38 clsMysql - Parameter: i-1
09:20:38 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:20:38 clsMysql - Parameter: i--1
09:20:38 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:20:38 clsMysql - Parameter: ii-1-1
09:20:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:20:38 clsMysql - Parameter: i-
09:20:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:20:38 clsMysql - Parameter: i-
09:20:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:20:38 clsMysql - Parameter: i-
09:20:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:20:38 clsMysql - Parameter: i-
09:20:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:20:38 clsMysql - Parameter: i-
09:20:41 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:20:41 clsMysql - Parameter: i-1
09:20:41 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:20:41 clsMysql - Parameter: i-255
09:20:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:20:47 clsMysql - Parameter: i-1
09:20:47 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:20:47 clsMysql - Parameter: ii-1-255
09:20:47 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:20:47 clsMysql - Parameter: ii-1-255
09:20:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:20:47 clsMysql - Parameter: i-1
09:20:48 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:20:48 clsMysql - Parameter: ii-1-1
09:20:48 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:20:48 clsMysql - Parameter: i-17
09:20:48 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:20:48 clsMysql - Parameter: i-10
09:20:48 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:20:48 clsMysql - Parameter: i-1
09:20:48 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:20:48 clsMysql - Parameter: i--1
09:20:48 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:20:48 clsMysql - Parameter: ii-1-1
09:20:48 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:20:48 clsMysql - Parameter: i-
09:20:48 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:20:48 clsMysql - Parameter: i-
09:20:48 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:20:48 clsMysql - Parameter: i-
09:20:48 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:20:48 clsMysql - Parameter: i-
09:20:48 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:20:48 clsMysql - Parameter: i-
09:20:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:20:49 clsMysql - Parameter: i-1
09:20:49 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:20:49 clsMysql - Parameter: i-327
09:21:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:21:05 clsMysql - Parameter: i-1
09:21:05 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:21:05 clsMysql - Parameter: ii-1-327
09:21:05 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:21:05 clsMysql - Parameter: ii-1-327
09:21:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:21:05 clsMysql - Parameter: i-1
09:21:05 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:21:05 clsMysql - Parameter: ii-1-1
09:21:05 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:21:05 clsMysql - Parameter: i-8
09:21:05 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:21:05 clsMysql - Parameter: i-9
09:21:05 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:21:05 clsMysql - Parameter: i-1
09:21:05 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:21:05 clsMysql - Parameter: i--1
09:21:05 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:21:05 clsMysql - Parameter: ii-1-1
09:21:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:21:05 clsMysql - Parameter: i-
09:21:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:21:05 clsMysql - Parameter: i-
09:21:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:21:05 clsMysql - Parameter: i-
09:21:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:21:05 clsMysql - Parameter: i-
09:21:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:21:05 clsMysql - Parameter: i-
09:21:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:21:14 clsMysql - Parameter: i-1
09:21:14 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:21:14 clsMysql - Parameter: i-184
09:21:17 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:21:17 clsMysql - Parameter: i-1
09:21:17 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:21:17 clsMysql - Parameter: ii-1-184
09:21:17 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:21:17 clsMysql - Parameter: ii-1-184
09:21:17 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:21:17 clsMysql - Parameter: i-1
09:21:17 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:21:17 clsMysql - Parameter: ii-1-1
09:21:18 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:21:18 clsMysql - Parameter: i-7
09:21:18 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:21:18 clsMysql - Parameter: i-9
09:21:18 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:21:18 clsMysql - Parameter: i-1
09:21:18 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:21:18 clsMysql - Parameter: i--1
09:21:18 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:21:18 clsMysql - Parameter: ii-1-1
09:21:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:21:18 clsMysql - Parameter: i-
09:21:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:21:18 clsMysql - Parameter: i-
09:21:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:21:18 clsMysql - Parameter: i-
09:21:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:21:18 clsMysql - Parameter: i-
09:21:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:21:18 clsMysql - Parameter: i-
09:21:31 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:21:31 clsMysql - Parameter: i-1
09:21:31 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:21:31 clsMysql - Parameter: i-157
09:21:52 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:21:52 clsMysql - Parameter: i-1
09:21:52 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:21:52 clsMysql - Parameter: ii-1-157
09:21:52 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:21:52 clsMysql - Parameter: ii-1-157
09:21:52 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:21:52 clsMysql - Parameter: i-1
09:21:52 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:21:52 clsMysql - Parameter: ii-1-1
09:21:52 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:21:52 clsMysql - Parameter: i-7
09:21:52 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:21:52 clsMysql - Parameter: i-9
09:21:52 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:21:52 clsMysql - Parameter: i-1
09:21:52 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:21:52 clsMysql - Parameter: i--1
09:21:52 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:21:52 clsMysql - Parameter: ii-1-1
09:21:52 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:21:52 clsMysql - Parameter: i-
09:21:52 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:21:52 clsMysql - Parameter: i-
09:21:52 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:21:52 clsMysql - Parameter: i-
09:21:52 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:21:52 clsMysql - Parameter: i-
09:21:52 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:21:52 clsMysql - Parameter: i-
09:22:19 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:22:19 clsMysql - Parameter: i-1
09:22:19 clsMysql - Debug - Statement: SELECT hinweis FROM karte WHERE id = ?
09:22:19 clsMysql - Parameter: i-152
09:22:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:22:20 clsMysql - Parameter: i-1
09:22:20 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:22:20 clsMysql - Parameter: i-152
09:23:27 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:23:27 clsMysql - Parameter: i-1
09:23:27 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 1, 0) ON DUPLICATE KEY UPDATE fortschritt = IF(fortschritt <= 2, 1, fortschritt - 1), datum = NOW(), gewusst = 0
09:23:27 clsMysql - Parameter: ii-1-152
09:23:27 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 0)
09:23:27 clsMysql - Parameter: ii-1-152
09:23:27 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:23:27 clsMysql - Parameter: i-1
09:23:27 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:23:27 clsMysql - Parameter: ii-1-1
09:23:27 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:23:27 clsMysql - Parameter: i-27
09:23:27 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:23:27 clsMysql - Parameter: i-20
09:23:27 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:23:27 clsMysql - Parameter: i-1
09:23:27 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:23:27 clsMysql - Parameter: i--1
09:23:27 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:23:27 clsMysql - Parameter: ii-1-1
09:23:27 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:23:27 clsMysql - Parameter: i-
09:23:27 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:23:27 clsMysql - Parameter: i-
09:23:27 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:23:27 clsMysql - Parameter: i-
09:23:27 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:23:27 clsMysql - Parameter: i-
09:23:27 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:23:27 clsMysql - Parameter: i-
09:23:42 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:23:42 clsMysql - Parameter: i-1
09:23:42 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:23:42 clsMysql - Parameter: i-530
09:23:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:23:58 clsMysql - Parameter: i-1
09:23:58 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:23:58 clsMysql - Parameter: ii-1-530
09:23:58 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:23:58 clsMysql - Parameter: ii-1-530
09:23:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:23:58 clsMysql - Parameter: i-1
09:23:58 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:23:58 clsMysql - Parameter: ii-1-1
09:23:58 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:23:58 clsMysql - Parameter: i-27
09:23:58 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:23:58 clsMysql - Parameter: i-20
09:23:58 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:23:58 clsMysql - Parameter: i-1
09:23:58 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:23:58 clsMysql - Parameter: i--1
09:23:58 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:23:58 clsMysql - Parameter: ii-1-1
09:23:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:23:58 clsMysql - Parameter: i-
09:23:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:23:58 clsMysql - Parameter: i-
09:23:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:23:58 clsMysql - Parameter: i-
09:23:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:23:58 clsMysql - Parameter: i-
09:23:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:23:58 clsMysql - Parameter: i-
09:24:01 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:01 clsMysql - Parameter: i-1
09:24:01 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte
09:24:01 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM kategorie
09:24:01 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE())
09:24:01 clsMysql - Parameter: i-1
09:24:01 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 1 DAY))
09:24:01 clsMysql - Parameter: i-1
09:24:01 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 2 DAY))
09:24:01 clsMysql - Parameter: i-1
09:24:01 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM fortschritt WHERE benutzer_id = ? AND YEAR(idate) = YEAR(CURDATE())
09:24:01 clsMysql - Parameter: i-1
09:24:01 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 1
09:24:01 clsMysql - Parameter: i-1
09:24:01 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 0
09:24:01 clsMysql - Parameter: i-1
09:24:01 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte where todo = 1
09:24:01 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM kategorie inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:24:01 clsMysql - Parameter: i-1
09:24:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:02 clsMysql - Parameter: i-
09:24:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:02 clsMysql - Parameter: i-
09:24:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:02 clsMysql - Parameter: i-
09:24:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:02 clsMysql - Parameter: i-
09:24:17 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:17 clsMysql - Parameter: i-1
09:24:17 clsMysql - Debug - Statement: SELECT DISTINCT id, name FROM benutzerset where benutzer_id = ? ORDER BY name
09:24:17 clsMysql - Parameter: i-1
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where parent_id = -1 GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-2
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-35
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-34
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-36
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-37
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-38
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-39
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-40
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-41
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-43
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-44
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-45
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-46
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-42
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-47
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-3
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-48
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-49
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-50
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-52
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-51
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-1
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-20
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-31
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-32
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-23
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-27
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-28
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-29
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-21
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-22
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-26
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-30
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-10
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-13
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-16
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-14
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-17
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-18
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-11
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-12
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-15
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-19
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-9
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-4
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-5
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-6
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-7
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-8
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-25
09:24:17 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:24:17 clsMysql - Parameter: i-24
09:24:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:18 clsMysql - Parameter: i-
09:24:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:18 clsMysql - Parameter: i-
09:24:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:18 clsMysql - Parameter: i-
09:24:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:18 clsMysql - Parameter: i-
09:24:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:18 clsMysql - Parameter: i-
09:24:21 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:21 clsMysql - Parameter: i-1
09:24:21 clsMysql - Debug - Statement: DELETE FROM benutzer2kategorie where benutzer_id = ?
09:24:21 clsMysql - Parameter: i-1
09:24:21 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:24:21 clsMysql - Parameter: ii-1-31
09:24:21 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:24:21 clsMysql - Parameter: ii-1-32
09:24:21 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:24:21 clsMysql - Parameter: ii-1-23
09:24:21 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:24:21 clsMysql - Parameter: ii-1-27
09:24:21 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:24:21 clsMysql - Parameter: ii-1-28
09:24:21 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:24:21 clsMysql - Parameter: ii-1-29
09:24:21 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:24:21 clsMysql - Parameter: ii-1-21
09:24:21 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:24:21 clsMysql - Parameter: ii-1-22
09:24:21 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:24:21 clsMysql - Parameter: ii-1-26
09:24:21 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:24:21 clsMysql - Parameter: ii-1-30
09:24:21 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:24:21 clsMysql - Parameter: ii-1-13
09:24:21 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:24:21 clsMysql - Parameter: ii-1-16
09:24:21 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:24:21 clsMysql - Parameter: ii-1-14
09:24:21 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:24:21 clsMysql - Parameter: ii-1-17
09:24:21 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:24:21 clsMysql - Parameter: ii-1-18
09:24:21 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:24:21 clsMysql - Parameter: ii-1-11
09:24:21 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:24:21 clsMysql - Parameter: ii-1-12
09:24:21 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:24:21 clsMysql - Parameter: ii-1-15
09:24:21 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:24:21 clsMysql - Parameter: ii-1-19
09:24:21 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:24:21 clsMysql - Parameter: ii-1-4
09:24:21 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:24:21 clsMysql - Parameter: ii-1-5
09:24:21 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:24:21 clsMysql - Parameter: ii-1-6
09:24:21 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:24:21 clsMysql - Parameter: ii-1-7
09:24:21 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:24:21 clsMysql - Parameter: ii-1-8
09:24:21 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:21 clsMysql - Parameter: i-1
09:24:21 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:24:21 clsMysql - Parameter: ii-1-1
09:24:21 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:24:21 clsMysql - Parameter: i-15
09:24:21 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:24:21 clsMysql - Parameter: i-10
09:24:21 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:24:21 clsMysql - Parameter: i-1
09:24:21 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:24:21 clsMysql - Parameter: i--1
09:24:21 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:24:21 clsMysql - Parameter: ii-1-1
09:24:21 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:21 clsMysql - Parameter: i-
09:24:21 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:21 clsMysql - Parameter: i-
09:24:21 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:21 clsMysql - Parameter: i-
09:24:21 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:21 clsMysql - Parameter: i-
09:24:21 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:21 clsMysql - Parameter: i-
09:24:33 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:33 clsMysql - Parameter: i-1
09:24:33 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:24:33 clsMysql - Parameter: i-283
09:24:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:45 clsMysql - Parameter: i-1
09:24:45 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 1, 0) ON DUPLICATE KEY UPDATE fortschritt = IF(fortschritt <= 2, 1, fortschritt - 1), datum = NOW(), gewusst = 0
09:24:45 clsMysql - Parameter: ii-1-283
09:24:45 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 0)
09:24:45 clsMysql - Parameter: ii-1-283
09:24:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:45 clsMysql - Parameter: i-1
09:24:45 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:24:45 clsMysql - Parameter: ii-1-1
09:24:45 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:24:45 clsMysql - Parameter: i-12
09:24:45 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:24:45 clsMysql - Parameter: i-10
09:24:45 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:24:45 clsMysql - Parameter: i-1
09:24:45 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:24:45 clsMysql - Parameter: i--1
09:24:45 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:24:45 clsMysql - Parameter: ii-1-1
09:24:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:46 clsMysql - Parameter: i-
09:24:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:46 clsMysql - Parameter: i-
09:24:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:46 clsMysql - Parameter: i-
09:24:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:46 clsMysql - Parameter: i-
09:24:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:46 clsMysql - Parameter: i-
09:24:51 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:51 clsMysql - Parameter: i-1
09:24:51 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:24:51 clsMysql - Parameter: i-228
09:25:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:05 clsMysql - Parameter: i-1
09:25:05 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:25:05 clsMysql - Parameter: ii-1-228
09:25:05 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:25:05 clsMysql - Parameter: ii-1-228
09:25:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:05 clsMysql - Parameter: i-1
09:25:05 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:25:05 clsMysql - Parameter: ii-1-1
09:25:05 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:25:05 clsMysql - Parameter: i-21
09:25:05 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:25:05 clsMysql - Parameter: i-20
09:25:05 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:25:05 clsMysql - Parameter: i-1
09:25:05 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:25:05 clsMysql - Parameter: i--1
09:25:05 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:25:05 clsMysql - Parameter: ii-1-1
09:25:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:05 clsMysql - Parameter: i-
09:25:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:05 clsMysql - Parameter: i-
09:25:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:05 clsMysql - Parameter: i-
09:25:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:05 clsMysql - Parameter: i-
09:25:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:05 clsMysql - Parameter: i-
09:25:24 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:24 clsMysql - Parameter: i-1
09:25:24 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:25:24 clsMysql - Parameter: i-442
09:25:44 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:44 clsMysql - Parameter: i-1
09:25:44 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:25:44 clsMysql - Parameter: ii-1-442
09:25:44 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:25:44 clsMysql - Parameter: ii-1-442
09:25:44 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:44 clsMysql - Parameter: i-1
09:25:44 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:25:44 clsMysql - Parameter: ii-1-1
09:25:44 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:25:44 clsMysql - Parameter: i-15
09:25:44 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:25:44 clsMysql - Parameter: i-10
09:25:44 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:25:44 clsMysql - Parameter: i-1
09:25:44 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:25:44 clsMysql - Parameter: i--1
09:25:44 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:25:44 clsMysql - Parameter: ii-1-1
09:25:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:45 clsMysql - Parameter: i-
09:25:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:45 clsMysql - Parameter: i-
09:25:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:45 clsMysql - Parameter: i-
09:25:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:45 clsMysql - Parameter: i-
09:25:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:45 clsMysql - Parameter: i-
09:25:48 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:48 clsMysql - Parameter: i-1
09:25:48 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:25:48 clsMysql - Parameter: i-259
09:25:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:53 clsMysql - Parameter: i-1
09:25:53 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:25:53 clsMysql - Parameter: ii-1-259
09:25:53 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:25:53 clsMysql - Parameter: ii-1-259
09:25:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:53 clsMysql - Parameter: i-1
09:25:53 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:25:53 clsMysql - Parameter: ii-1-1
09:25:53 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:25:53 clsMysql - Parameter: i-27
09:25:53 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:25:53 clsMysql - Parameter: i-20
09:25:53 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:25:53 clsMysql - Parameter: i-1
09:25:53 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:25:53 clsMysql - Parameter: i--1
09:25:53 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:25:53 clsMysql - Parameter: ii-1-1
09:25:54 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:54 clsMysql - Parameter: i-
09:25:54 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:54 clsMysql - Parameter: i-
09:25:54 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:54 clsMysql - Parameter: i-
09:25:54 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:54 clsMysql - Parameter: i-
09:25:54 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:54 clsMysql - Parameter: i-
09:25:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:58 clsMysql - Parameter: i-1
09:25:58 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte
09:25:58 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM kategorie
09:25:58 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE())
09:25:58 clsMysql - Parameter: i-1
09:25:58 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 1 DAY))
09:25:58 clsMysql - Parameter: i-1
09:25:58 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 2 DAY))
09:25:58 clsMysql - Parameter: i-1
09:25:58 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM fortschritt WHERE benutzer_id = ? AND YEAR(idate) = YEAR(CURDATE())
09:25:58 clsMysql - Parameter: i-1
09:25:58 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 1
09:25:58 clsMysql - Parameter: i-1
09:25:58 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 0
09:25:58 clsMysql - Parameter: i-1
09:25:58 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte where todo = 1
09:25:58 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM kategorie inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:25:58 clsMysql - Parameter: i-1
09:25:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:58 clsMysql - Parameter: i-
09:25:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:58 clsMysql - Parameter: i-
09:25:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:58 clsMysql - Parameter: i-
09:25:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:58 clsMysql - Parameter: i-
10:28:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:28:59 clsMysql - Parameter: i-
10:28:59 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte
10:28:59 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM kategorie
10:28:59 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE())
10:28:59 clsMysql - Parameter: i-
10:28:59 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 1 DAY))
10:28:59 clsMysql - Parameter: i-
10:28:59 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 2 DAY))
10:28:59 clsMysql - Parameter: i-
10:28:59 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM fortschritt WHERE benutzer_id = ? AND YEAR(idate) = YEAR(CURDATE())
10:28:59 clsMysql - Parameter: i-
10:28:59 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 1
10:28:59 clsMysql - Parameter: i-
10:28:59 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 0
10:28:59 clsMysql - Parameter: i-
10:28:59 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte where todo = 1
10:28:59 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM kategorie inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:28:59 clsMysql - Parameter: i-
10:28:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:28:59 clsMysql - Parameter: i-
10:28:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:28:59 clsMysql - Parameter: i-
10:28:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:28:59 clsMysql - Parameter: i-
10:28:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:28:59 clsMysql - Parameter: i-
10:29:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:29:00 clsMysql - Parameter: i-
10:29:00 clsMysql - Debug - Statement: SELECT id, name FROM benutzer order by name
10:29:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:29:00 clsMysql - Parameter: i-
10:29:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:29:00 clsMysql - Parameter: i-
10:29:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:29:00 clsMysql - Parameter: i-
10:29:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:29:00 clsMysql - Parameter: i-
10:29:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:29:02 clsMysql - Parameter: i-
10:29:02 clsMysql - Debug - Statement: SELECT count(name) as anzahl, id FROM benutzer WHERE id = ?
10:29:02 clsMysql - Parameter: i-1
10:29:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:29:02 clsMysql - Parameter: i-1
10:29:02 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte
10:29:02 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM kategorie
10:29:02 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE())
10:29:02 clsMysql - Parameter: i-1
10:29:02 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 1 DAY))
10:29:02 clsMysql - Parameter: i-1
10:29:02 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 2 DAY))
10:29:02 clsMysql - Parameter: i-1
10:29:02 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM fortschritt WHERE benutzer_id = ? AND YEAR(idate) = YEAR(CURDATE())
10:29:02 clsMysql - Parameter: i-1
10:29:02 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 1
10:29:02 clsMysql - Parameter: i-1
10:29:02 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 0
10:29:02 clsMysql - Parameter: i-1
10:29:02 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte where todo = 1
10:29:02 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM kategorie inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:29:02 clsMysql - Parameter: i-1
10:29:03 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:29:03 clsMysql - Parameter: i-
10:29:03 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:29:03 clsMysql - Parameter: i-
10:29:03 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:29:03 clsMysql - Parameter: i-
10:29:03 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:29:03 clsMysql - Parameter: i-
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:30:01 clsMysql - Parameter: i-1
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id IN (-1, 0)
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-1
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-1
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-9
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-9
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-4
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-4
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-5
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-5
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-6
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-6
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-7
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-7
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-8
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-8
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-10
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-10
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-11
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-11
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-12
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-12
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-13
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-13
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-14
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-14
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-15
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-15
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-16
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-16
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-17
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-17
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-18
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-18
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-19
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-19
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-20
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-20
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-21
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-21
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-22
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-22
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-23
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-23
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-26
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-26
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-27
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-27
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-28
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-28
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-29
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-29
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-30
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-30
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-31
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-31
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-32
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-32
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-25
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-25
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-24
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-24
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-2
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-2
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-3
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-3
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-35
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-35
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-34
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-34
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-36
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-36
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-37
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-37
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-38
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-38
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-39
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-39
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-40
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-40
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-41
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-41
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-42
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-42
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-43
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-43
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-44
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-44
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-45
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-45
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-46
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-46
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-47
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-47
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-48
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-48
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-49
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-49
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-50
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-50
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-52
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-52
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:30:01 clsMysql - Parameter: i-51
10:30:01 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:30:01 clsMysql - Parameter: i-51
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:30:01 clsMysql - Parameter: i-
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:30:01 clsMysql - Parameter: i-
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:30:01 clsMysql - Parameter: i-
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:30:01 clsMysql - Parameter: i-
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:30:01 clsMysql - Parameter: i-
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:30:01 clsMysql - Parameter: i-
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:30:01 clsMysql - Parameter: i-
10:30:01 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:30:01 clsMysql - Parameter: i-
10:30:08 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:30:08 clsMysql - Parameter: i-1
10:30:08 clsMysql - Debug - Statement: SELECT name FROM kategorie WHERE id = ?
10:30:08 clsMysql - Parameter: i-50
10:30:08 clsMysql - Debug - Statement: SELECT id, frage, hinweis, antwort, todo FROM karte WHERE kategorie_id = ? ORDER BY id asc
10:30:08 clsMysql - Parameter: i-50
10:31:11 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:31:11 clsMysql - Parameter: i-1
10:31:11 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
10:31:11 clsMysql - Parameter: isssi-50-Wie funktioniert Quick Sort?--Zunächst wird die zu sortierende Liste in zwei Teillisten („linke“ und „rechte“ Teilliste) getrennt. Dazu wählt Quicksort ein sogenanntes Pivotelement aus der Liste aus. Alle Elemente, die kleiner als das Pivotelement sind, kommen in die linke Teilliste, und alle, die größer sind, in die rechte Teilliste. Die Elemente, die gleich dem Pivotelement sind, können sich beliebig auf die Teillisten verteilen. Nach der Aufteilung sind die Elemente der linken Liste kleiner oder gleich den Elementen der rechten Liste.

Anschließend muss man also noch jede Teilliste in sich sortieren, um die Sortierung zu vollenden. Dazu wird der Quicksort-Algorithmus jeweils auf der linken und auf der rechten Teilliste ausgeführt. Jede Teilliste wird dann wieder in zwei Teillisten aufgeteilt und auf diese jeweils wieder der Quicksort-Algorithmus angewandt, und so weiter. Diese Selbstaufrufe werden als Rekursion bezeichnet. Wenn eine Teilliste der Länge eins oder null auftritt, so ist diese bereits sortiert und es erfolgt der Abbruch der Rekursion.

Die Positionen der Elemente, die gleich dem Pivotelement sind, hängen vom verwendeten Teilungsalgorithmus ab. Sie können sich beliebig auf die Teillisten verteilen. Da sich die Reihenfolge von gleichwertigen Elementen zueinander ändern kann, ist Quicksort im Allgemeinen nicht stabil.

Das Verfahren muss sicherstellen, dass jede der Teillisten mindestens um eins kürzer ist als die Gesamtliste. Dann endet die Rekursion garantiert nach endlich vielen Schritten. Das kann z. B. dadurch erreicht werden, dass das ursprünglich als Pivot gewählte Element auf einen Platz zwischen den Teillisten gesetzt wird und somit zu keiner Teilliste gehört.-0
10:32:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:32:12 clsMysql - Parameter: i-1
10:32:12 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
10:32:12 clsMysql - Parameter: isssi-50-Welche Laufzet hat Quick Sort?--Worst Case: O(n²)
Best Case: O(n * log(n))-0
10:33:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:33:13 clsMysql - Parameter: i-1
10:33:13 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
10:33:13 clsMysql - Parameter: isssi-50-Welche Platzkomplexität hat Quick Sort?-in-place oder out-of-place-in-place-0
10:33:44 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:33:44 clsMysql - Parameter: i-1
10:33:44 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
10:33:44 clsMysql - Parameter: isssi-50-Welche Stabilität hat Quick Sort?-stabil oder instabil-instabil-0
10:34:06 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:34:06 clsMysql - Parameter: i-1
10:34:06 clsMysql - Debug - Statement: UPDATE karte SET frage = ?, hinweis = ?, antwort = ?, todo = ? WHERE id = ?
10:34:06 clsMysql - Parameter: sssii-Welche Laufzeit hat Quick Sort?--Worst Case: O(n²)
Best Case: O(n * log(n))-0-1753
10:34:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:34:46 clsMysql - Parameter: i-1
10:34:46 clsMysql - Debug - Statement: SELECT name FROM kategorie WHERE id = ?
10:34:46 clsMysql - Parameter: i-52
10:34:46 clsMysql - Debug - Statement: SELECT id, frage, hinweis, antwort, todo FROM karte WHERE kategorie_id = ? ORDER BY id asc
10:34:46 clsMysql - Parameter: i-52
10:43:25 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:25 clsMysql - Parameter: i-1
10:43:25 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
10:43:25 clsMysql - Parameter: isssi-52-Implementiere den Quick Sort in PHP--function teile(&$list, $links, $rechts){
  $i = $links;
  $j = $rechts - 1;
  $pivot = $list[$rechts];

  while ($i < $j){
    while ($i < $j && $list[$i] <= $pivot){
      $i  ;
    }

    while ($j > $i && $list[$j] > $pivot){
      $j--;
    }

    if ($list[$i] > $list[$j]){
      $temp = $list[$i];
      $list[$i] = $list[$j];
      $list[$j] = $temp;
    }
  }

  if ($list[$i] > $pivot){
    $temp = $list[$i];
    $list[$i] = $list[$rechts];
    $list[$rechts] = $temp;
  } else {
    $i = $rechts;
  }

  return $i;
}

function quicksort(&$list, $links, $rechts){
  if ($links < $rechts){
    $teiler = teile($list, $links, $rechts);
    quicksort($list, $links, $teiler - 1);
    quicksort($list, $teiler, $rechts);
  }
}

quicksort($list, 0, count($list)-1);-0
10:43:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:30 clsMysql - Parameter: i-1
10:43:30 clsMysql - Debug - Statement: SELECT DISTINCT id, name FROM benutzerset where benutzer_id = ? ORDER BY name
10:43:30 clsMysql - Parameter: i-1
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where parent_id = -1 GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-2
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-35
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-34
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-36
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-37
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-38
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-39
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-40
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-41
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-43
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-44
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-45
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-46
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-42
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-47
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-3
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-48
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-49
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-50
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-52
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-51
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-1
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-20
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-31
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-32
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-23
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-27
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-28
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-29
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-21
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-22
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-26
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-30
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-10
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-13
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-16
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-14
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-17
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-18
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-11
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-12
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-15
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-19
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-9
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-4
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-5
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-6
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-7
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-8
10:43:30 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:30 clsMysql - Parameter: i-25
10:43:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:43:31 clsMysql - Parameter: i-24
10:43:31 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:31 clsMysql - Parameter: i-
10:43:31 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:31 clsMysql - Parameter: i-
10:43:31 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:31 clsMysql - Parameter: i-
10:43:31 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:31 clsMysql - Parameter: i-
10:43:31 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:31 clsMysql - Parameter: i-
10:44:15 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:15 clsMysql - Parameter: i-1
10:44:15 clsMysql - Debug - Statement: SELECT id FROM benutzerset where benutzer_id = ? and name = ?
10:44:15 clsMysql - Parameter: is-1-IT
10:44:15 clsMysql - Debug - Statement: INSERT INTO benutzerset (benutzer_id, name, fragen_ids, udate) VALUES (?, ?, ?, CURRENT_TIMESTAMP())
10:44:15 clsMysql - Parameter: iss-1-IT-48,49,50,52,51
10:44:21 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:21 clsMysql - Parameter: i-1
10:44:21 clsMysql - Debug - Statement: SELECT DISTINCT id, name FROM benutzerset where benutzer_id = ? ORDER BY name
10:44:21 clsMysql - Parameter: i-1
10:44:21 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where parent_id = -1 GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:21 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:21 clsMysql - Parameter: i-2
10:44:21 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:21 clsMysql - Parameter: i-35
10:44:21 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:21 clsMysql - Parameter: i-34
10:44:21 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:21 clsMysql - Parameter: i-36
10:44:21 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:21 clsMysql - Parameter: i-37
10:44:21 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:21 clsMysql - Parameter: i-38
10:44:21 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:21 clsMysql - Parameter: i-39
10:44:21 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:21 clsMysql - Parameter: i-40
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-41
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-43
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-44
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-45
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-46
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-42
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-47
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-3
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-48
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-49
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-50
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-52
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-51
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-1
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-20
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-31
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-32
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-23
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-27
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-28
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-29
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-21
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-22
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-26
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-30
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-10
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-13
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-16
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-14
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-17
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-18
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-11
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-12
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-15
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-19
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-9
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-4
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-5
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-6
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-7
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-8
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-25
10:44:22 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:44:22 clsMysql - Parameter: i-24
10:44:22 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:22 clsMysql - Parameter: i-
10:44:22 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:22 clsMysql - Parameter: i-
10:44:22 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:22 clsMysql - Parameter: i-
10:44:22 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:22 clsMysql - Parameter: i-
10:44:22 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:22 clsMysql - Parameter: i-
10:44:27 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:27 clsMysql - Parameter: i-1
10:44:27 clsMysql - Debug - Statement: SELECT fragen_ids FROM benutzerset where benutzer_id = ? and id = ?
10:44:27 clsMysql - Parameter: ii-1-2
10:44:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:30 clsMysql - Parameter: i-1
10:44:30 clsMysql - Debug - Statement: DELETE FROM benutzer2kategorie where benutzer_id = ?
10:44:30 clsMysql - Parameter: i-1
10:44:30 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:44:30 clsMysql - Parameter: ii-1-48
10:44:30 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:44:30 clsMysql - Parameter: ii-1-49
10:44:30 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:44:30 clsMysql - Parameter: ii-1-50
10:44:30 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:44:30 clsMysql - Parameter: ii-1-52
10:44:30 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:44:30 clsMysql - Parameter: ii-1-51
10:44:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:30 clsMysql - Parameter: i-1
10:44:30 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:44:30 clsMysql - Parameter: ii-1-1
10:44:30 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:44:30 clsMysql - Parameter: i-50
10:44:30 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:44:30 clsMysql - Parameter: i-49
10:44:30 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:44:30 clsMysql - Parameter: i-48
10:44:30 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:44:30 clsMysql - Parameter: i--1
10:44:30 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:44:30 clsMysql - Parameter: ii-1-1
10:44:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:30 clsMysql - Parameter: i-
10:44:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:30 clsMysql - Parameter: i-
10:44:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:30 clsMysql - Parameter: i-
10:44:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:30 clsMysql - Parameter: i-
10:44:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:30 clsMysql - Parameter: i-
10:44:41 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:41 clsMysql - Parameter: i-1
10:44:41 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:44:41 clsMysql - Parameter: i-1751
10:44:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:45 clsMysql - Parameter: i-1
10:44:45 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 1, 0) ON DUPLICATE KEY UPDATE fortschritt = IF(fortschritt <= 2, 1, fortschritt - 1), datum = NOW(), gewusst = 0
10:44:45 clsMysql - Parameter: ii-1-1751
10:44:45 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 0)
10:44:45 clsMysql - Parameter: ii-1-1751
10:44:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:45 clsMysql - Parameter: i-1
10:44:45 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:44:45 clsMysql - Parameter: ii-1-1
10:44:45 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:44:45 clsMysql - Parameter: i-50
10:44:45 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:44:45 clsMysql - Parameter: i-49
10:44:45 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:44:45 clsMysql - Parameter: i-48
10:44:45 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:44:45 clsMysql - Parameter: i--1
10:44:45 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:44:45 clsMysql - Parameter: ii-1-1
10:44:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:45 clsMysql - Parameter: i-
10:44:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:45 clsMysql - Parameter: i-
10:44:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:45 clsMysql - Parameter: i-
10:44:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:45 clsMysql - Parameter: i-
10:44:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:45 clsMysql - Parameter: i-
10:44:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:53 clsMysql - Parameter: i-1
10:44:53 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:44:53 clsMysql - Parameter: i-1735
10:44:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:59 clsMysql - Parameter: i-1
10:44:59 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
10:44:59 clsMysql - Parameter: ii-1-1735
10:44:59 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
10:44:59 clsMysql - Parameter: ii-1-1735
10:44:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:59 clsMysql - Parameter: i-1
10:44:59 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:44:59 clsMysql - Parameter: ii-1-1
10:44:59 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:44:59 clsMysql - Parameter: i-50
10:44:59 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:44:59 clsMysql - Parameter: i-49
10:44:59 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:44:59 clsMysql - Parameter: i-48
10:44:59 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:44:59 clsMysql - Parameter: i--1
10:44:59 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:44:59 clsMysql - Parameter: ii-1-1
10:44:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:59 clsMysql - Parameter: i-
10:44:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:59 clsMysql - Parameter: i-
10:44:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:59 clsMysql - Parameter: i-
10:44:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:59 clsMysql - Parameter: i-
10:44:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:59 clsMysql - Parameter: i-
10:45:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:20 clsMysql - Parameter: i-1
10:45:20 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:45:20 clsMysql - Parameter: i-1752
10:45:32 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:32 clsMysql - Parameter: i-1
10:45:32 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 1, 0) ON DUPLICATE KEY UPDATE fortschritt = IF(fortschritt <= 2, 1, fortschritt - 1), datum = NOW(), gewusst = 0
10:45:32 clsMysql - Parameter: ii-1-1752
10:45:32 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 0)
10:45:32 clsMysql - Parameter: ii-1-1752
10:45:32 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:32 clsMysql - Parameter: i-1
10:45:32 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:45:32 clsMysql - Parameter: ii-1-1
10:45:32 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:45:32 clsMysql - Parameter: i-50
10:45:32 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:45:32 clsMysql - Parameter: i-49
10:45:32 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:45:32 clsMysql - Parameter: i-48
10:45:32 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:45:32 clsMysql - Parameter: i--1
10:45:32 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:45:32 clsMysql - Parameter: ii-1-1
10:45:33 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:33 clsMysql - Parameter: i-
10:45:33 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:33 clsMysql - Parameter: i-
10:45:33 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:33 clsMysql - Parameter: i-
10:45:33 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:33 clsMysql - Parameter: i-
10:45:33 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:33 clsMysql - Parameter: i-
10:45:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:34 clsMysql - Parameter: i-1
10:45:34 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte
10:45:34 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM kategorie
10:45:34 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE())
10:45:34 clsMysql - Parameter: i-1
10:45:34 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 1 DAY))
10:45:34 clsMysql - Parameter: i-1
10:45:34 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 2 DAY))
10:45:34 clsMysql - Parameter: i-1
10:45:34 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM fortschritt WHERE benutzer_id = ? AND YEAR(idate) = YEAR(CURDATE())
10:45:34 clsMysql - Parameter: i-1
10:45:34 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 1
10:45:34 clsMysql - Parameter: i-1
10:45:34 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 0
10:45:34 clsMysql - Parameter: i-1
10:45:34 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte where todo = 1
10:45:34 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM kategorie inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:45:34 clsMysql - Parameter: i-1
10:45:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:34 clsMysql - Parameter: i-
10:45:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:34 clsMysql - Parameter: i-
10:45:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:34 clsMysql - Parameter: i-
10:45:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:34 clsMysql - Parameter: i-
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:56:54 clsMysql - Parameter: i-1
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id IN (-1, 0)
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-1
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-1
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-9
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-9
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-4
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-4
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-5
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-5
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-6
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-6
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-7
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-7
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-8
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-8
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-10
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-10
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-11
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-11
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-12
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-12
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-13
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-13
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-14
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-14
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-15
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-15
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-16
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-16
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-17
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-17
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-18
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-18
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-19
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-19
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-20
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-20
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-21
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-21
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-22
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-22
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-23
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-23
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-26
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-26
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-27
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-27
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-28
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-28
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-29
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-29
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-30
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-30
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-31
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-31
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-32
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-32
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-25
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-25
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-24
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-24
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-2
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-2
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-3
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-3
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-35
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-35
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-34
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-34
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-36
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-36
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-37
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-37
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-38
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-38
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-39
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-39
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-40
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-40
10:56:54 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:54 clsMysql - Parameter: i-41
10:56:54 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:54 clsMysql - Parameter: i-41
10:56:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:55 clsMysql - Parameter: i-42
10:56:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:55 clsMysql - Parameter: i-42
10:56:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:55 clsMysql - Parameter: i-43
10:56:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:55 clsMysql - Parameter: i-43
10:56:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:55 clsMysql - Parameter: i-44
10:56:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:55 clsMysql - Parameter: i-44
10:56:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:55 clsMysql - Parameter: i-45
10:56:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:55 clsMysql - Parameter: i-45
10:56:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:55 clsMysql - Parameter: i-46
10:56:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:55 clsMysql - Parameter: i-46
10:56:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:55 clsMysql - Parameter: i-47
10:56:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:55 clsMysql - Parameter: i-47
10:56:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:55 clsMysql - Parameter: i-48
10:56:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:55 clsMysql - Parameter: i-48
10:56:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:55 clsMysql - Parameter: i-49
10:56:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:55 clsMysql - Parameter: i-49
10:56:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:55 clsMysql - Parameter: i-50
10:56:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:55 clsMysql - Parameter: i-50
10:56:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:55 clsMysql - Parameter: i-52
10:56:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:55 clsMysql - Parameter: i-52
10:56:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
10:56:55 clsMysql - Parameter: i-51
10:56:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
10:56:55 clsMysql - Parameter: i-51
10:56:55 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:56:55 clsMysql - Parameter: i-
10:56:55 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:56:55 clsMysql - Parameter: i-
10:56:55 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:56:55 clsMysql - Parameter: i-
10:56:55 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:56:55 clsMysql - Parameter: i-
10:56:55 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:56:55 clsMysql - Parameter: i-
10:56:55 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:56:55 clsMysql - Parameter: i-
10:56:55 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:56:55 clsMysql - Parameter: i-
10:56:55 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:56:55 clsMysql - Parameter: i-
10:56:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:56:59 clsMysql - Parameter: i-1
10:56:59 clsMysql - Debug - Statement: SELECT name FROM kategorie WHERE id = ?
10:56:59 clsMysql - Parameter: i-50
10:56:59 clsMysql - Debug - Statement: SELECT id, frage, hinweis, antwort, todo FROM karte WHERE kategorie_id = ? ORDER BY id asc
10:56:59 clsMysql - Parameter: i-50
11:10:46 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:10:46 clsMysql - Parameter: i-1
11:10:46 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
11:10:46 clsMysql - Parameter: isssi-50-Wie funktioniert Heap Sort?--Die Eingabe ist ein Array mit zu sortierenden Elementen. Als erstes wird die Eingabe in einen binären Max-Heap überführt. Aus der Heap-Eigenschaft folgt direkt, dass nun an der ersten Array-Position das größte Element steht. Dieses wird mit dem letzten Array-Element vertauscht und die Heap-Array-Größe um 1 verringert, ohne den Speicher freizugeben. Die neue Wurzel des Heaps kann die Heap-Eigenschaft verletzen. Die Heapify-Operation korrigiert gegebenenfalls den Heap, so dass nun das nächstgrößere bzw. gleich große Element an der ersten Array-Position steht. Die Vertausch-, Verkleiner- und Heapify-Schritte werden so lange wiederholt, bis die Heap-Größe 1 ist. Danach enthält das Eingabe-Array die Elemente in aufsteigend sortierter Reihenfolge.
Bei einer Sortierung in absteigender Reihenfolge wird statt des Max-Heaps ein Min-Heap verwendet. In einem Min-Heap steht an erster Stelle das kleinste Element. Gemäß der Definition von einem binären Heap wird die Abfolge der Elemente in einem Heap durch eine Vergleichsoperation (siehe Ordnungsrelation) bestimmt, die eine totale Ordnung auf den Elementen definiert. In einem Min-Heap ist das die <-Relation und in einem Max-Heap die >-Relation. Der Pseudocode abstrahiert von der Vergleichsoperation.
Die zu sortierenden Elemente werden auch als Schlüssel bezeichnet. Pro Index-Position kann das Eingabe-Array mehrere Datenkomponenten enthalten. In dem Fall muss eine Komponente als Sortierschlüssel definiert werden, auf der die Vergleichsoperation arbeitet. Die Vertauschoperation vertauscht komplette Array-Einträge.


Bottom-Up-Heapsort
Die wichtigste Variante des Heapsort-Algorithmus ist Bottom-Up-Heapsort, das häufig fast die Hälfte der nötigen Vergleichsoperationen einsparen kann und sich folglich besonders da rentiert, wo Vergleiche aufwendig sind.
Bottom-Up-Heapsort ist ein Sortieralgorithmus, der u. a. 1990 von Ingo Wegener vorgestellt wurde und im Durchschnitt besser als Quicksort arbeitet, falls man Vergleichsoperationen hinreichend stark gewichtet. Es ist eine Variante von Heapsort, die vor allem zur Sortierung sehr großer Datenmengen geeignet ist, wenn (im Vergleich zu den notwendigen Vertauschungsoperationen) ein relativ hoher Aufwand pro Vergleichsoperation erforderlich ist.
Diese Variante wurde allerdings bereits 1986 von Svante Carlsson analysiert, der letztlich eine weitere Variante fand, die sogar eine Worst-Case-Laufzeit von nur n * log(n)   O(n * log(log(n))) Vergleichen hat. Entdeckt wurde dieser Bottom-Up-Heapsort bereits von Robert W Floyd, der aber das Laufzeitverhalten dieser Variante nicht beweisen konnte.
Bottom-Up-Heapsort benötigt zum Sortieren einer Folge von n Elementen im Worst Case 3/2 * n * log(n)   2 * n Vergleiche. Im Durchschnitt sind es n * log(n)   O(n) Vergleiche.

Prinzip der Sortierung
Beim Sortieren mit normalem Heapsort finden beim Absenken eines Elements zwei Vergleiche pro Ebene statt:
Welcher der beiden Nachfolgeknoten des abzusenkenden Elements ist größer?
Ist der nun bestimmte Nachfolgeknoten größer als das abzusenkende Element?
Nachdem ein Binärbaum zur Hälfte aus Blättern besteht und zudem beim Sortieren ehemalige Blätter mit ohnehin schon eher niedrigen Werten abgesenkt werden, ist es wahrscheinlich, dass ein Element bis zur Blattebene oder in deren Nähe abgesenkt werden muss. Deshalb kann es lohnend sein, auf den zweiten Vergleich zu verzichten und auf Verdacht bis zur Blattebene abzusenken.
In einem zweiten Schritt wird dann rückwärts überprüft, wie weit das Element wieder angehoben werden muss. Im günstigsten Fall (sehr große Felder mit nur wenigen Dubletten) kann dabei fast die Hälfte der insgesamt nötigen Vergleiche bei mäßigem Zusatzaufwand eingespart werden.
Weniger geeignet ist Bottom-Up-Heapsort zur Sortierung kleinerer Felder mit einfacher numerischer Vergleichsoperation und dann, wenn im Feld sehr viele Elemente gleichwertig sind. Dann stimmt die Annahme nicht, dass meist bis in die Nähe der Blattebene abgesenkt werden muss.-0
11:11:27 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:11:27 clsMysql - Parameter: i-1
11:11:27 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
11:11:27 clsMysql - Parameter: isssi-50-Welche Laufzeit hat Heap Sort?--O(n   log(n))-0
11:11:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:11:58 clsMysql - Parameter: i-1
11:11:58 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
11:11:58 clsMysql - Parameter: isssi-50-Welche Platzkomplexität hat Heap Sort?-in-place oder out-of-place-in-place-0
11:12:27 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:12:27 clsMysql - Parameter: i-1
11:12:27 clsMysql - Debug - Statement: INSERT INTO karte (kategorie_id, frage, hinweis, antwort, todo) VALUES (?, ?, ?, ?, ?)
11:12:27 clsMysql - Parameter: isssi-50-Welche Stabilität hat Heap Sort?-stabil oder instabil-instabil-0
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:14:55 clsMysql - Parameter: i-1
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id IN (-1, 0)
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-1
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-1
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-9
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-9
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-4
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-4
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-5
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-5
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-6
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-6
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-7
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-7
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-8
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-8
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-10
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-10
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-11
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-11
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-12
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-12
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-13
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-13
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-14
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-14
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-15
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-15
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-16
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-16
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-17
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-17
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-18
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-18
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-19
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-19
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-20
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-20
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-21
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-21
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-22
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-22
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-23
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-23
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-26
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-26
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-27
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-27
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-28
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-28
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-29
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-29
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-30
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-30
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-31
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-31
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-32
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-32
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-25
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-25
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-24
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-24
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-2
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-2
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-3
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-3
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-35
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-35
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-34
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-34
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-36
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-36
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-37
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-37
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-38
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-38
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-39
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-39
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-40
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-40
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-41
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-41
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-42
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-42
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-43
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-43
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-44
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-44
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-45
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-45
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-46
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-46
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-47
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-47
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-48
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-48
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-49
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-49
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-50
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-50
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-52
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-52
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate, udate, benutzer_id, parent_id, description FROM kategorie WHERE id = ?
11:14:55 clsMysql - Parameter: i-51
11:14:55 clsMysql - Debug - Statement: SELECT id FROM kategorie WHERE parent_id = ?
11:14:55 clsMysql - Parameter: i-51
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:14:55 clsMysql - Parameter: i-
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:14:55 clsMysql - Parameter: i-
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:14:55 clsMysql - Parameter: i-
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:14:55 clsMysql - Parameter: i-
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:14:55 clsMysql - Parameter: i-
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:14:55 clsMysql - Parameter: i-
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:14:55 clsMysql - Parameter: i-
11:14:55 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:14:55 clsMysql - Parameter: i-
11:14:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:14:57 clsMysql - Parameter: i-1
11:14:57 clsMysql - Debug - Statement: SELECT DISTINCT id, name FROM benutzerset where benutzer_id = ? ORDER BY name
11:14:57 clsMysql - Parameter: i-1
11:14:57 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where parent_id = -1 GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:57 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:57 clsMysql - Parameter: i-2
11:14:57 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:57 clsMysql - Parameter: i-35
11:14:57 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-34
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-36
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-37
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-38
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-39
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-40
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-41
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-43
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-44
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-45
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-46
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-42
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-47
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-3
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-48
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-49
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-50
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-52
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-51
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-1
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-20
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-31
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-32
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-23
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-27
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-28
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-29
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-21
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-22
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-26
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-30
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-10
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-13
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-16
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-14
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-17
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-18
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-11
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-12
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-15
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-19
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-9
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-4
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-5
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-6
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-7
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-8
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-25
11:14:58 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
11:14:58 clsMysql - Parameter: i-24
11:14:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:14:58 clsMysql - Parameter: i-
11:14:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:14:58 clsMysql - Parameter: i-
11:14:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:14:58 clsMysql - Parameter: i-
11:14:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:14:58 clsMysql - Parameter: i-
11:14:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
11:14:58 clsMysql - Parameter: i-
