09:12:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:12:20 clsMysql - Parameter: i-
09:12:20 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte
09:12:20 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM kategorie
09:12:20 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE())
09:12:20 clsMysql - Parameter: i-
09:12:20 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 1 DAY))
09:12:20 clsMysql - Parameter: i-
09:12:20 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 2 DAY))
09:12:20 clsMysql - Parameter: i-
09:12:20 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM fortschritt WHERE benutzer_id = ? AND YEAR(idate) = YEAR(CURDATE())
09:12:20 clsMysql - Parameter: i-
09:12:20 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 1
09:12:20 clsMysql - Parameter: i-
09:12:20 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 0
09:12:20 clsMysql - Parameter: i-
09:12:20 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte where todo = 1
09:12:20 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM kategorie inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:12:20 clsMysql - Parameter: i-
09:12:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:12:20 clsMysql - Parameter: i-
09:12:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:12:20 clsMysql - Parameter: i-
09:12:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:12:20 clsMysql - Parameter: i-
09:12:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:12:20 clsMysql - Parameter: i-
09:12:22 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:12:22 clsMysql - Parameter: i-
09:12:22 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte
09:12:22 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM kategorie
09:12:22 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE())
09:12:22 clsMysql - Parameter: i-
09:12:22 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 1 DAY))
09:12:22 clsMysql - Parameter: i-
09:12:22 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 2 DAY))
09:12:22 clsMysql - Parameter: i-
09:12:22 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM fortschritt WHERE benutzer_id = ? AND YEAR(idate) = YEAR(CURDATE())
09:12:22 clsMysql - Parameter: i-
09:12:22 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 1
09:12:22 clsMysql - Parameter: i-
09:12:22 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 0
09:12:22 clsMysql - Parameter: i-
09:12:22 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte where todo = 1
09:12:22 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM kategorie inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:12:22 clsMysql - Parameter: i-
09:12:22 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:12:22 clsMysql - Parameter: i-
09:12:22 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:12:22 clsMysql - Parameter: i-
09:12:22 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:12:22 clsMysql - Parameter: i-
09:12:22 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:12:22 clsMysql - Parameter: i-
09:12:23 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:12:23 clsMysql - Parameter: i-
09:12:23 clsMysql - Debug - Statement: SELECT id, name FROM benutzer order by name
09:12:23 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:12:23 clsMysql - Parameter: i-
09:12:23 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:12:23 clsMysql - Parameter: i-
09:12:23 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:12:23 clsMysql - Parameter: i-
09:12:23 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:12:23 clsMysql - Parameter: i-
09:12:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:12:26 clsMysql - Parameter: i-
09:12:26 clsMysql - Debug - Statement: SELECT count(name) as anzahl, id FROM benutzer WHERE id = ?
09:12:26 clsMysql - Parameter: i-1
09:12:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:12:26 clsMysql - Parameter: i-1
09:12:26 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte
09:12:26 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM kategorie
09:12:26 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE())
09:12:26 clsMysql - Parameter: i-1
09:12:26 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 1 DAY))
09:12:26 clsMysql - Parameter: i-1
09:12:26 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 2 DAY))
09:12:26 clsMysql - Parameter: i-1
09:12:26 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM fortschritt WHERE benutzer_id = ? AND YEAR(idate) = YEAR(CURDATE())
09:12:26 clsMysql - Parameter: i-1
09:12:26 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 1
09:12:26 clsMysql - Parameter: i-1
09:12:26 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 0
09:12:26 clsMysql - Parameter: i-1
09:12:26 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte where todo = 1
09:12:26 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM kategorie inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:12:26 clsMysql - Parameter: i-1
09:12:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:12:26 clsMysql - Parameter: i-
09:12:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:12:26 clsMysql - Parameter: i-
09:12:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:12:26 clsMysql - Parameter: i-
09:12:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:12:26 clsMysql - Parameter: i-
09:22:31 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:22:31 clsMysql - Parameter: i-1
09:22:31 clsMysql - Debug - Statement: SELECT DISTINCT id, name FROM benutzerset where benutzer_id = ? ORDER BY name
09:22:31 clsMysql - Parameter: i-1
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where parent_id = -1 GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-2
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-35
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-34
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-36
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-37
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-38
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-39
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-40
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-41
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-43
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-44
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-45
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-46
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-42
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-47
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-3
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-48
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-49
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-50
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-52
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-51
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-53
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-1
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-20
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-31
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-32
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-23
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-27
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-28
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-29
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-21
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-22
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-26
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-30
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-10
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-13
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-16
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-14
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-17
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-18
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-11
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-12
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-15
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-19
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-9
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-4
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-5
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-6
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-7
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-8
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-25
09:22:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
09:22:31 clsMysql - Parameter: i-24
09:22:32 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:22:32 clsMysql - Parameter: i-
09:22:32 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:22:32 clsMysql - Parameter: i-
09:22:32 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:22:32 clsMysql - Parameter: i-
09:22:32 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:22:32 clsMysql - Parameter: i-
09:22:32 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:22:32 clsMysql - Parameter: i-
09:22:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:22:34 clsMysql - Parameter: i-1
09:22:34 clsMysql - Debug - Statement: DELETE FROM benutzer2kategorie where benutzer_id = ?
09:22:34 clsMysql - Parameter: i-1
09:22:34 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:22:34 clsMysql - Parameter: ii-1-31
09:22:34 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:22:34 clsMysql - Parameter: ii-1-32
09:22:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:22:35 clsMysql - Parameter: ii-1-23
09:22:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:22:35 clsMysql - Parameter: ii-1-27
09:22:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:22:35 clsMysql - Parameter: ii-1-28
09:22:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:22:35 clsMysql - Parameter: ii-1-29
09:22:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:22:35 clsMysql - Parameter: ii-1-21
09:22:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:22:35 clsMysql - Parameter: ii-1-22
09:22:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:22:35 clsMysql - Parameter: ii-1-26
09:22:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:22:35 clsMysql - Parameter: ii-1-30
09:22:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:22:35 clsMysql - Parameter: ii-1-13
09:22:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:22:35 clsMysql - Parameter: ii-1-16
09:22:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:22:35 clsMysql - Parameter: ii-1-14
09:22:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:22:35 clsMysql - Parameter: ii-1-17
09:22:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:22:35 clsMysql - Parameter: ii-1-18
09:22:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:22:35 clsMysql - Parameter: ii-1-11
09:22:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:22:35 clsMysql - Parameter: ii-1-12
09:22:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:22:35 clsMysql - Parameter: ii-1-15
09:22:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:22:35 clsMysql - Parameter: ii-1-19
09:22:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:22:35 clsMysql - Parameter: ii-1-4
09:22:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:22:35 clsMysql - Parameter: ii-1-5
09:22:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:22:35 clsMysql - Parameter: ii-1-6
09:22:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:22:35 clsMysql - Parameter: ii-1-7
09:22:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
09:22:35 clsMysql - Parameter: ii-1-8
09:22:35 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:22:35 clsMysql - Parameter: i-1
09:22:35 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:22:35 clsMysql - Parameter: ii-1-1
09:22:35 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:22:35 clsMysql - Parameter: i-6
09:22:35 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:22:35 clsMysql - Parameter: i-9
09:22:35 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:22:35 clsMysql - Parameter: i-1
09:22:35 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:22:35 clsMysql - Parameter: i--1
09:22:35 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:22:35 clsMysql - Parameter: ii-1-1
09:22:35 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:22:35 clsMysql - Parameter: i-
09:22:35 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:22:35 clsMysql - Parameter: i-
09:22:35 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:22:35 clsMysql - Parameter: i-
09:22:35 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:22:35 clsMysql - Parameter: i-
09:22:35 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:22:35 clsMysql - Parameter: i-
09:22:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:22:47 clsMysql - Parameter: i-1
09:22:47 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:22:47 clsMysql - Parameter: i-135
09:22:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:22:49 clsMysql - Parameter: i-1
09:22:49 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:22:49 clsMysql - Parameter: ii-1-135
09:22:49 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:22:49 clsMysql - Parameter: ii-1-135
09:22:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:22:49 clsMysql - Parameter: i-1
09:22:49 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:22:49 clsMysql - Parameter: ii-1-1
09:22:49 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:22:49 clsMysql - Parameter: i-18
09:22:49 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:22:49 clsMysql - Parameter: i-10
09:22:49 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:22:49 clsMysql - Parameter: i-1
09:22:49 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:22:49 clsMysql - Parameter: i--1
09:22:49 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:22:49 clsMysql - Parameter: ii-1-1
09:22:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:22:49 clsMysql - Parameter: i-
09:22:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:22:49 clsMysql - Parameter: i-
09:22:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:22:49 clsMysql - Parameter: i-
09:22:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:22:49 clsMysql - Parameter: i-
09:22:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:22:49 clsMysql - Parameter: i-
09:22:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:22:53 clsMysql - Parameter: i-1
09:22:53 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:22:53 clsMysql - Parameter: i-385
09:22:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:22:57 clsMysql - Parameter: i-1
09:22:57 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:22:57 clsMysql - Parameter: ii-1-385
09:22:57 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:22:57 clsMysql - Parameter: ii-1-385
09:22:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:22:57 clsMysql - Parameter: i-1
09:22:57 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:22:57 clsMysql - Parameter: ii-1-1
09:22:57 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:22:57 clsMysql - Parameter: i-18
09:22:57 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:22:57 clsMysql - Parameter: i-10
09:22:57 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:22:57 clsMysql - Parameter: i-1
09:22:57 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:22:57 clsMysql - Parameter: i--1
09:22:57 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:22:57 clsMysql - Parameter: ii-1-1
09:22:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:22:57 clsMysql - Parameter: i-
09:22:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:22:57 clsMysql - Parameter: i-
09:22:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:22:57 clsMysql - Parameter: i-
09:22:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:22:57 clsMysql - Parameter: i-
09:22:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:22:57 clsMysql - Parameter: i-
09:23:48 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:23:48 clsMysql - Parameter: i-1
09:23:48 clsMysql - Debug - Statement: SELECT hinweis FROM karte WHERE id = ?
09:23:48 clsMysql - Parameter: i-354
09:23:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:23:49 clsMysql - Parameter: i-1
09:23:49 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:23:49 clsMysql - Parameter: i-354
09:23:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:23:53 clsMysql - Parameter: i-1
09:23:53 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:23:53 clsMysql - Parameter: ii-1-354
09:23:53 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:23:53 clsMysql - Parameter: ii-1-354
09:23:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:23:53 clsMysql - Parameter: i-1
09:23:53 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:23:53 clsMysql - Parameter: ii-1-1
09:23:53 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:23:53 clsMysql - Parameter: i-21
09:23:53 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:23:53 clsMysql - Parameter: i-20
09:23:53 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:23:53 clsMysql - Parameter: i-1
09:23:53 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:23:53 clsMysql - Parameter: i--1
09:23:53 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:23:53 clsMysql - Parameter: ii-1-1
09:23:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:23:53 clsMysql - Parameter: i-
09:23:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:23:53 clsMysql - Parameter: i-
09:23:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:23:53 clsMysql - Parameter: i-
09:23:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:23:53 clsMysql - Parameter: i-
09:23:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:23:53 clsMysql - Parameter: i-
09:23:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:23:59 clsMysql - Parameter: i-1
09:23:59 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:23:59 clsMysql - Parameter: i-435
09:24:04 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:04 clsMysql - Parameter: i-1
09:24:04 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:24:04 clsMysql - Parameter: ii-1-435
09:24:04 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:24:04 clsMysql - Parameter: ii-1-435
09:24:04 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:04 clsMysql - Parameter: i-1
09:24:05 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:24:05 clsMysql - Parameter: ii-1-1
09:24:05 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:24:05 clsMysql - Parameter: i-29
09:24:05 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:24:05 clsMysql - Parameter: i-20
09:24:05 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:24:05 clsMysql - Parameter: i-1
09:24:05 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:24:05 clsMysql - Parameter: i--1
09:24:05 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:24:05 clsMysql - Parameter: ii-1-1
09:24:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:05 clsMysql - Parameter: i-
09:24:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:05 clsMysql - Parameter: i-
09:24:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:05 clsMysql - Parameter: i-
09:24:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:05 clsMysql - Parameter: i-
09:24:05 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:05 clsMysql - Parameter: i-
09:24:09 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:09 clsMysql - Parameter: i-1
09:24:09 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:24:09 clsMysql - Parameter: i-545
09:24:28 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:28 clsMysql - Parameter: i-1
09:24:28 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:24:28 clsMysql - Parameter: ii-1-545
09:24:28 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:24:28 clsMysql - Parameter: ii-1-545
09:24:28 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:28 clsMysql - Parameter: i-1
09:24:28 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:24:28 clsMysql - Parameter: ii-1-1
09:24:28 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:24:28 clsMysql - Parameter: i-5
09:24:28 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:24:28 clsMysql - Parameter: i-9
09:24:28 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:24:28 clsMysql - Parameter: i-1
09:24:28 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:24:28 clsMysql - Parameter: i--1
09:24:28 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:24:28 clsMysql - Parameter: ii-1-1
09:24:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:29 clsMysql - Parameter: i-
09:24:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:29 clsMysql - Parameter: i-
09:24:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:29 clsMysql - Parameter: i-
09:24:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:29 clsMysql - Parameter: i-
09:24:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:29 clsMysql - Parameter: i-
09:24:45 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:24:45 clsMysql - Parameter: i-1
09:24:45 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:24:45 clsMysql - Parameter: i-30
09:25:04 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:04 clsMysql - Parameter: i-1
09:25:04 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 1, 0) ON DUPLICATE KEY UPDATE fortschritt = IF(fortschritt <= 2, 1, fortschritt - 1), datum = NOW(), gewusst = 0
09:25:04 clsMysql - Parameter: ii-1-30
09:25:04 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 0)
09:25:04 clsMysql - Parameter: ii-1-30
09:25:04 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:04 clsMysql - Parameter: i-1
09:25:04 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:25:04 clsMysql - Parameter: ii-1-1
09:25:04 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:25:04 clsMysql - Parameter: i-19
09:25:04 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:25:04 clsMysql - Parameter: i-10
09:25:04 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:25:04 clsMysql - Parameter: i-1
09:25:04 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:25:04 clsMysql - Parameter: i--1
09:25:04 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:25:04 clsMysql - Parameter: ii-1-1
09:25:04 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:04 clsMysql - Parameter: i-
09:25:04 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:04 clsMysql - Parameter: i-
09:25:04 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:04 clsMysql - Parameter: i-
09:25:04 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:04 clsMysql - Parameter: i-
09:25:04 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:04 clsMysql - Parameter: i-
09:25:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:07 clsMysql - Parameter: i-1
09:25:07 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:25:07 clsMysql - Parameter: i-389
09:25:23 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:23 clsMysql - Parameter: i-1
09:25:23 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:25:23 clsMysql - Parameter: ii-1-389
09:25:23 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:25:23 clsMysql - Parameter: ii-1-389
09:25:23 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:23 clsMysql - Parameter: i-1
09:25:23 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:25:23 clsMysql - Parameter: ii-1-1
09:25:23 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:25:23 clsMysql - Parameter: i-16
09:25:23 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:25:23 clsMysql - Parameter: i-10
09:25:23 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:25:23 clsMysql - Parameter: i-1
09:25:23 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:25:23 clsMysql - Parameter: i--1
09:25:23 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:25:23 clsMysql - Parameter: ii-1-1
09:25:24 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:24 clsMysql - Parameter: i-
09:25:24 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:24 clsMysql - Parameter: i-
09:25:24 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:24 clsMysql - Parameter: i-
09:25:24 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:24 clsMysql - Parameter: i-
09:25:24 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:24 clsMysql - Parameter: i-
09:25:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:29 clsMysql - Parameter: i-1
09:25:29 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:25:29 clsMysql - Parameter: i-323
09:25:33 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:33 clsMysql - Parameter: i-1
09:25:33 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:25:33 clsMysql - Parameter: ii-1-323
09:25:33 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:25:33 clsMysql - Parameter: ii-1-323
09:25:33 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:33 clsMysql - Parameter: i-1
09:25:33 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:25:33 clsMysql - Parameter: ii-1-1
09:25:33 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:25:33 clsMysql - Parameter: i-7
09:25:33 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:25:33 clsMysql - Parameter: i-9
09:25:33 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:25:33 clsMysql - Parameter: i-1
09:25:33 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:25:33 clsMysql - Parameter: i--1
09:25:33 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:25:33 clsMysql - Parameter: ii-1-1
09:25:33 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:33 clsMysql - Parameter: i-
09:25:33 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:33 clsMysql - Parameter: i-
09:25:33 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:33 clsMysql - Parameter: i-
09:25:33 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:33 clsMysql - Parameter: i-
09:25:33 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:25:33 clsMysql - Parameter: i-
09:33:19 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:33:19 clsMysql - Parameter: i-1
09:33:19 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:33:19 clsMysql - Parameter: i-150
09:33:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:33:29 clsMysql - Parameter: i-1
09:33:29 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:33:29 clsMysql - Parameter: ii-1-150
09:33:29 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:33:29 clsMysql - Parameter: ii-1-150
09:33:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:33:29 clsMysql - Parameter: i-1
09:33:29 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:33:29 clsMysql - Parameter: ii-1-1
09:33:29 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:33:29 clsMysql - Parameter: i-6
09:33:29 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:33:29 clsMysql - Parameter: i-9
09:33:29 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:33:29 clsMysql - Parameter: i-1
09:33:29 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:33:29 clsMysql - Parameter: i--1
09:33:29 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:33:29 clsMysql - Parameter: ii-1-1
09:33:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:33:29 clsMysql - Parameter: i-
09:33:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:33:29 clsMysql - Parameter: i-
09:33:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:33:29 clsMysql - Parameter: i-
09:33:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:33:29 clsMysql - Parameter: i-
09:33:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:33:29 clsMysql - Parameter: i-
09:33:41 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:33:41 clsMysql - Parameter: i-1
09:33:41 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:33:41 clsMysql - Parameter: i-115
09:38:24 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:38:24 clsMysql - Parameter: i-1
09:38:24 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:38:24 clsMysql - Parameter: ii-1-115
09:38:24 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:38:24 clsMysql - Parameter: ii-1-115
09:38:25 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:38:25 clsMysql - Parameter: i-1
09:38:25 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:38:25 clsMysql - Parameter: ii-1-1
09:38:25 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:38:25 clsMysql - Parameter: i-21
09:38:25 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:38:25 clsMysql - Parameter: i-20
09:38:25 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:38:25 clsMysql - Parameter: i-1
09:38:25 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:38:25 clsMysql - Parameter: i--1
09:38:25 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:38:25 clsMysql - Parameter: ii-1-1
09:38:25 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:38:25 clsMysql - Parameter: i-
09:38:25 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:38:25 clsMysql - Parameter: i-
09:38:25 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:38:25 clsMysql - Parameter: i-
09:38:25 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:38:25 clsMysql - Parameter: i-
09:38:25 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:38:25 clsMysql - Parameter: i-
09:38:56 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:38:56 clsMysql - Parameter: i-1
09:38:56 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:38:56 clsMysql - Parameter: i-441
09:39:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:39:02 clsMysql - Parameter: i-1
09:39:02 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 1, 0) ON DUPLICATE KEY UPDATE fortschritt = IF(fortschritt <= 2, 1, fortschritt - 1), datum = NOW(), gewusst = 0
09:39:02 clsMysql - Parameter: ii-1-441
09:39:02 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 0)
09:39:02 clsMysql - Parameter: ii-1-441
09:39:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:39:02 clsMysql - Parameter: i-1
09:39:02 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:39:02 clsMysql - Parameter: ii-1-1
09:39:02 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:39:02 clsMysql - Parameter: i-14
09:39:02 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:39:02 clsMysql - Parameter: i-10
09:39:02 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:39:02 clsMysql - Parameter: i-1
09:39:02 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:39:02 clsMysql - Parameter: i--1
09:39:02 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:39:02 clsMysql - Parameter: ii-1-1
09:39:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:39:02 clsMysql - Parameter: i-
09:39:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:39:02 clsMysql - Parameter: i-
09:39:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:39:02 clsMysql - Parameter: i-
09:39:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:39:02 clsMysql - Parameter: i-
09:39:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:39:02 clsMysql - Parameter: i-
09:39:10 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:39:10 clsMysql - Parameter: i-1
09:39:10 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
09:39:10 clsMysql - Parameter: i-246
09:39:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:39:13 clsMysql - Parameter: i-1
09:39:13 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
09:39:13 clsMysql - Parameter: ii-1-246
09:39:13 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
09:39:13 clsMysql - Parameter: ii-1-246
09:39:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:39:13 clsMysql - Parameter: i-1
09:39:13 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
09:39:13 clsMysql - Parameter: ii-1-1
09:39:13 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:39:13 clsMysql - Parameter: i-5
09:39:13 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:39:13 clsMysql - Parameter: i-9
09:39:13 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:39:13 clsMysql - Parameter: i-1
09:39:13 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
09:39:13 clsMysql - Parameter: i--1
09:39:13 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
09:39:13 clsMysql - Parameter: ii-1-1
09:39:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:39:13 clsMysql - Parameter: i-
09:39:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:39:13 clsMysql - Parameter: i-
09:39:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:39:13 clsMysql - Parameter: i-
09:39:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:39:13 clsMysql - Parameter: i-
09:39:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
09:39:13 clsMysql - Parameter: i-
10:14:17 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:14:17 clsMysql - Parameter: i-
10:14:17 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte
10:14:17 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM kategorie
10:14:17 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE())
10:14:17 clsMysql - Parameter: i-
10:14:17 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 1 DAY))
10:14:17 clsMysql - Parameter: i-
10:14:17 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 2 DAY))
10:14:17 clsMysql - Parameter: i-
10:14:17 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM fortschritt WHERE benutzer_id = ? AND YEAR(idate) = YEAR(CURDATE())
10:14:17 clsMysql - Parameter: i-
10:14:17 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 1
10:14:17 clsMysql - Parameter: i-
10:14:17 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 0
10:14:17 clsMysql - Parameter: i-
10:14:17 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte where todo = 1
10:14:17 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM kategorie inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:14:17 clsMysql - Parameter: i-
10:14:21 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:14:21 clsMysql - Parameter: i-
10:14:21 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte
10:14:21 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM kategorie
10:14:21 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE())
10:14:21 clsMysql - Parameter: i-
10:14:21 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 1 DAY))
10:14:21 clsMysql - Parameter: i-
10:14:21 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 2 DAY))
10:14:21 clsMysql - Parameter: i-
10:14:21 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM fortschritt WHERE benutzer_id = ? AND YEAR(idate) = YEAR(CURDATE())
10:14:21 clsMysql - Parameter: i-
10:14:21 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 1
10:14:21 clsMysql - Parameter: i-
10:14:21 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 0
10:14:21 clsMysql - Parameter: i-
10:14:21 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte where todo = 1
10:14:21 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM kategorie inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:14:21 clsMysql - Parameter: i-
10:14:22 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:14:22 clsMysql - Parameter: i-
10:14:22 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:14:22 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:14:22 clsMysql - Parameter: i-
10:14:22 clsMysql - Parameter: i-
10:14:22 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:14:22 clsMysql - Parameter: i-
10:14:24 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:14:24 clsMysql - Parameter: i-
10:14:24 clsMysql - Debug - Statement: SELECT id, name FROM benutzer order by name
10:14:24 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:14:24 clsMysql - Parameter: i-
10:14:24 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:14:24 clsMysql - Parameter: i-
10:14:24 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:14:24 clsMysql - Parameter: i-
10:14:24 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:14:24 clsMysql - Parameter: i-
10:14:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:14:26 clsMysql - Parameter: i-
10:14:26 clsMysql - Debug - Statement: SELECT count(name) as anzahl, id FROM benutzer WHERE id = ?
10:14:26 clsMysql - Parameter: i-1
10:14:27 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:14:27 clsMysql - Parameter: i-1
10:14:27 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte
10:14:27 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM kategorie
10:14:27 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE())
10:14:27 clsMysql - Parameter: i-1
10:14:27 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 1 DAY))
10:14:27 clsMysql - Parameter: i-1
10:14:27 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 2 DAY))
10:14:27 clsMysql - Parameter: i-1
10:14:27 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM fortschritt WHERE benutzer_id = ? AND YEAR(idate) = YEAR(CURDATE())
10:14:27 clsMysql - Parameter: i-1
10:14:27 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 1
10:14:27 clsMysql - Parameter: i-1
10:14:27 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 0
10:14:27 clsMysql - Parameter: i-1
10:14:27 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte where todo = 1
10:14:27 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM kategorie inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:14:27 clsMysql - Parameter: i-1
10:14:27 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:14:27 clsMysql - Parameter: i-
10:14:27 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:14:27 clsMysql - Parameter: i-
10:14:27 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:14:27 clsMysql - Parameter: i-
10:14:27 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:14:27 clsMysql - Parameter: i-
10:14:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:14:29 clsMysql - Parameter: i-1
10:14:29 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte
10:14:29 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM kategorie
10:14:29 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE())
10:14:29 clsMysql - Parameter: i-1
10:14:29 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 1 DAY))
10:14:29 clsMysql - Parameter: i-1
10:14:29 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 2 DAY))
10:14:29 clsMysql - Parameter: i-1
10:14:29 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM fortschritt WHERE benutzer_id = ? AND YEAR(idate) = YEAR(CURDATE())
10:14:29 clsMysql - Parameter: i-1
10:14:29 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 1
10:14:29 clsMysql - Parameter: i-1
10:14:29 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 0
10:14:29 clsMysql - Parameter: i-1
10:14:29 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte where todo = 1
10:14:29 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM kategorie inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:14:29 clsMysql - Parameter: i-1
10:14:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:14:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:14:29 clsMysql - Parameter: i-
10:14:29 clsMysql - Parameter: i-
10:14:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:14:29 clsMysql - Parameter: i-
10:14:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:14:29 clsMysql - Parameter: i-
10:14:31 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:14:31 clsMysql - Parameter: i-1
10:14:31 clsMysql - Debug - Statement: SELECT DISTINCT id, name FROM benutzerset where benutzer_id = ? ORDER BY name
10:14:31 clsMysql - Parameter: i-1
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where parent_id = -1 GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-2
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-35
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-34
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-36
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-37
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-38
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-39
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-40
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-41
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-43
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-44
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-45
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-46
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-42
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-47
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-3
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-48
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-49
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-50
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-52
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-51
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-53
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-1
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-20
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-31
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-32
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-23
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-27
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-28
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-29
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-21
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-22
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-26
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-30
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-10
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-13
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-16
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-14
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-17
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-18
10:14:31 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:31 clsMysql - Parameter: i-11
10:14:32 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:32 clsMysql - Parameter: i-12
10:14:32 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:32 clsMysql - Parameter: i-15
10:14:32 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:32 clsMysql - Parameter: i-19
10:14:32 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:32 clsMysql - Parameter: i-9
10:14:32 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:32 clsMysql - Parameter: i-4
10:14:32 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:32 clsMysql - Parameter: i-5
10:14:32 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:32 clsMysql - Parameter: i-6
10:14:32 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:32 clsMysql - Parameter: i-7
10:14:32 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:32 clsMysql - Parameter: i-8
10:14:32 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:32 clsMysql - Parameter: i-25
10:14:32 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:14:32 clsMysql - Parameter: i-24
10:14:32 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:14:32 clsMysql - Parameter: i-
10:14:32 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:14:32 clsMysql - Parameter: i-
10:14:32 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:14:32 clsMysql - Parameter: i-
10:14:32 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:14:32 clsMysql - Parameter: i-
10:14:32 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:14:32 clsMysql - Parameter: i-
10:14:35 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:14:35 clsMysql - Parameter: i-1
10:14:35 clsMysql - Debug - Statement: DELETE FROM benutzer2kategorie where benutzer_id = ?
10:14:35 clsMysql - Parameter: i-1
10:14:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:14:35 clsMysql - Parameter: ii-1-31
10:14:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:14:35 clsMysql - Parameter: ii-1-32
10:14:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:14:35 clsMysql - Parameter: ii-1-23
10:14:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:14:35 clsMysql - Parameter: ii-1-27
10:14:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:14:35 clsMysql - Parameter: ii-1-28
10:14:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:14:35 clsMysql - Parameter: ii-1-29
10:14:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:14:35 clsMysql - Parameter: ii-1-21
10:14:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:14:35 clsMysql - Parameter: ii-1-22
10:14:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:14:35 clsMysql - Parameter: ii-1-26
10:14:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:14:35 clsMysql - Parameter: ii-1-30
10:14:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:14:35 clsMysql - Parameter: ii-1-13
10:14:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:14:35 clsMysql - Parameter: ii-1-16
10:14:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:14:35 clsMysql - Parameter: ii-1-14
10:14:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:14:35 clsMysql - Parameter: ii-1-17
10:14:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:14:35 clsMysql - Parameter: ii-1-18
10:14:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:14:35 clsMysql - Parameter: ii-1-11
10:14:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:14:35 clsMysql - Parameter: ii-1-12
10:14:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:14:35 clsMysql - Parameter: ii-1-15
10:14:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:14:35 clsMysql - Parameter: ii-1-19
10:14:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:14:35 clsMysql - Parameter: ii-1-4
10:14:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:14:35 clsMysql - Parameter: ii-1-5
10:14:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:14:35 clsMysql - Parameter: ii-1-6
10:14:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:14:35 clsMysql - Parameter: ii-1-7
10:14:35 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:14:35 clsMysql - Parameter: ii-1-8
10:14:35 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:14:35 clsMysql - Parameter: i-1
10:14:35 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:14:35 clsMysql - Parameter: ii-1-1
10:14:36 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:14:36 clsMysql - Parameter: i-4
10:14:36 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:14:36 clsMysql - Parameter: i-9
10:14:36 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:14:36 clsMysql - Parameter: i-1
10:14:36 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:14:36 clsMysql - Parameter: i--1
10:14:36 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:14:36 clsMysql - Parameter: ii-1-1
10:14:36 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:14:36 clsMysql - Parameter: i-
10:14:36 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:14:36 clsMysql - Parameter: i-
10:14:36 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:14:36 clsMysql - Parameter: i-
10:14:36 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:14:36 clsMysql - Parameter: i-
10:14:36 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:14:36 clsMysql - Parameter: i-
10:14:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:14:53 clsMysql - Parameter: i-1
10:14:53 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:14:53 clsMysql - Parameter: i-12
10:15:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:15:13 clsMysql - Parameter: i-1
10:15:13 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
10:15:13 clsMysql - Parameter: ii-1-12
10:15:13 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
10:15:13 clsMysql - Parameter: ii-1-12
10:15:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:15:13 clsMysql - Parameter: i-1
10:15:13 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:15:13 clsMysql - Parameter: ii-1-1
10:15:13 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:15:13 clsMysql - Parameter: i-4
10:15:13 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:15:13 clsMysql - Parameter: i-9
10:15:13 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:15:13 clsMysql - Parameter: i-1
10:15:13 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:15:13 clsMysql - Parameter: i--1
10:15:13 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:15:13 clsMysql - Parameter: ii-1-1
10:15:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:15:13 clsMysql - Parameter: i-
10:15:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:15:13 clsMysql - Parameter: i-
10:15:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:15:13 clsMysql - Parameter: i-
10:15:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:15:13 clsMysql - Parameter: i-
10:15:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:15:13 clsMysql - Parameter: i-
10:41:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:00 clsMysql - Parameter: i-
10:41:00 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte
10:41:00 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM kategorie
10:41:00 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE())
10:41:00 clsMysql - Parameter: i-
10:41:00 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 1 DAY))
10:41:00 clsMysql - Parameter: i-
10:41:00 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 2 DAY))
10:41:00 clsMysql - Parameter: i-
10:41:00 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM fortschritt WHERE benutzer_id = ? AND YEAR(idate) = YEAR(CURDATE())
10:41:00 clsMysql - Parameter: i-
10:41:00 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 1
10:41:00 clsMysql - Parameter: i-
10:41:00 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 0
10:41:00 clsMysql - Parameter: i-
10:41:00 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte where todo = 1
10:41:00 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM kategorie inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:41:00 clsMysql - Parameter: i-
10:41:09 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:09 clsMysql - Parameter: i-
10:41:09 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte
10:41:09 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM kategorie
10:41:09 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE())
10:41:09 clsMysql - Parameter: i-
10:41:09 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 1 DAY))
10:41:09 clsMysql - Parameter: i-
10:41:09 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 2 DAY))
10:41:09 clsMysql - Parameter: i-
10:41:09 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM fortschritt WHERE benutzer_id = ? AND YEAR(idate) = YEAR(CURDATE())
10:41:09 clsMysql - Parameter: i-
10:41:09 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 1
10:41:09 clsMysql - Parameter: i-
10:41:09 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 0
10:41:09 clsMysql - Parameter: i-
10:41:09 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte where todo = 1
10:41:09 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM kategorie inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:41:09 clsMysql - Parameter: i-
10:41:09 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:09 clsMysql - Parameter: i-
10:41:09 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:09 clsMysql - Parameter: i-
10:41:09 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:09 clsMysql - Parameter: i-
10:41:09 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:09 clsMysql - Parameter: i-
10:41:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:12 clsMysql - Parameter: i-
10:41:12 clsMysql - Debug - Statement: SELECT id, name FROM benutzer order by name
10:41:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:12 clsMysql - Parameter: i-
10:41:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:12 clsMysql - Parameter: i-
10:41:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:12 clsMysql - Parameter: i-
10:41:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:12 clsMysql - Parameter: i-
10:41:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:14 clsMysql - Parameter: i-
10:41:14 clsMysql - Debug - Statement: SELECT count(name) as anzahl, id FROM benutzer WHERE id = ?
10:41:14 clsMysql - Parameter: i-1
10:41:14 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:14 clsMysql - Parameter: i-1
10:41:14 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte
10:41:14 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM kategorie
10:41:14 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE())
10:41:14 clsMysql - Parameter: i-1
10:41:14 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 1 DAY))
10:41:14 clsMysql - Parameter: i-1
10:41:14 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 2 DAY))
10:41:14 clsMysql - Parameter: i-1
10:41:15 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM fortschritt WHERE benutzer_id = ? AND YEAR(idate) = YEAR(CURDATE())
10:41:15 clsMysql - Parameter: i-1
10:41:15 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 1
10:41:15 clsMysql - Parameter: i-1
10:41:15 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 0
10:41:15 clsMysql - Parameter: i-1
10:41:15 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte where todo = 1
10:41:15 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM kategorie inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:41:15 clsMysql - Parameter: i-1
10:41:15 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:15 clsMysql - Parameter: i-
10:41:15 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:15 clsMysql - Parameter: i-
10:41:15 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:15 clsMysql - Parameter: i-
10:41:15 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:15 clsMysql - Parameter: i-
10:41:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:18 clsMysql - Parameter: i-1
10:41:18 clsMysql - Debug - Statement: SELECT DISTINCT id, name FROM benutzerset where benutzer_id = ? ORDER BY name
10:41:18 clsMysql - Parameter: i-1
10:41:18 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where parent_id = -1 GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:18 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:18 clsMysql - Parameter: i-2
10:41:18 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:18 clsMysql - Parameter: i-35
10:41:18 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:18 clsMysql - Parameter: i-34
10:41:18 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:18 clsMysql - Parameter: i-36
10:41:18 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:18 clsMysql - Parameter: i-37
10:41:18 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:18 clsMysql - Parameter: i-38
10:41:18 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:18 clsMysql - Parameter: i-39
10:41:18 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:18 clsMysql - Parameter: i-40
10:41:18 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:18 clsMysql - Parameter: i-41
10:41:18 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:18 clsMysql - Parameter: i-43
10:41:18 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:18 clsMysql - Parameter: i-44
10:41:18 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:18 clsMysql - Parameter: i-45
10:41:18 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:18 clsMysql - Parameter: i-46
10:41:18 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:18 clsMysql - Parameter: i-42
10:41:18 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:18 clsMysql - Parameter: i-47
10:41:18 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:18 clsMysql - Parameter: i-3
10:41:18 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:18 clsMysql - Parameter: i-48
10:41:18 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:18 clsMysql - Parameter: i-49
10:41:18 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:18 clsMysql - Parameter: i-50
10:41:19 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:19 clsMysql - Parameter: i-52
10:41:19 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:19 clsMysql - Parameter: i-51
10:41:19 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:19 clsMysql - Parameter: i-53
10:41:19 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:19 clsMysql - Parameter: i-1
10:41:19 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:19 clsMysql - Parameter: i-20
10:41:19 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:19 clsMysql - Parameter: i-31
10:41:19 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:19 clsMysql - Parameter: i-32
10:41:19 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:19 clsMysql - Parameter: i-23
10:41:19 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:19 clsMysql - Parameter: i-27
10:41:19 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:19 clsMysql - Parameter: i-28
10:41:19 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:19 clsMysql - Parameter: i-29
10:41:19 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:19 clsMysql - Parameter: i-21
10:41:19 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:19 clsMysql - Parameter: i-22
10:41:19 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:19 clsMysql - Parameter: i-26
10:41:19 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:19 clsMysql - Parameter: i-30
10:41:19 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:19 clsMysql - Parameter: i-10
10:41:19 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:19 clsMysql - Parameter: i-13
10:41:19 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:19 clsMysql - Parameter: i-16
10:41:19 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:19 clsMysql - Parameter: i-14
10:41:19 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:19 clsMysql - Parameter: i-17
10:41:19 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:19 clsMysql - Parameter: i-18
10:41:19 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:19 clsMysql - Parameter: i-11
10:41:19 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:19 clsMysql - Parameter: i-12
10:41:19 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:19 clsMysql - Parameter: i-15
10:41:19 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:19 clsMysql - Parameter: i-19
10:41:19 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:19 clsMysql - Parameter: i-9
10:41:19 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:19 clsMysql - Parameter: i-4
10:41:19 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:19 clsMysql - Parameter: i-5
10:41:19 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:19 clsMysql - Parameter: i-6
10:41:19 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:19 clsMysql - Parameter: i-7
10:41:19 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:19 clsMysql - Parameter: i-8
10:41:19 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:19 clsMysql - Parameter: i-25
10:41:19 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:41:19 clsMysql - Parameter: i-24
10:41:19 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:19 clsMysql - Parameter: i-
10:41:19 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:19 clsMysql - Parameter: i-
10:41:19 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:19 clsMysql - Parameter: i-
10:41:19 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:19 clsMysql - Parameter: i-
10:41:19 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:19 clsMysql - Parameter: i-
10:41:22 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:22 clsMysql - Parameter: i-1
10:41:22 clsMysql - Debug - Statement: DELETE FROM benutzer2kategorie where benutzer_id = ?
10:41:22 clsMysql - Parameter: i-1
10:41:22 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:41:22 clsMysql - Parameter: ii-1-31
10:41:22 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:41:22 clsMysql - Parameter: ii-1-32
10:41:22 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:41:22 clsMysql - Parameter: ii-1-23
10:41:22 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:41:22 clsMysql - Parameter: ii-1-27
10:41:22 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:41:22 clsMysql - Parameter: ii-1-28
10:41:22 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:41:22 clsMysql - Parameter: ii-1-29
10:41:22 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:41:22 clsMysql - Parameter: ii-1-21
10:41:22 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:41:22 clsMysql - Parameter: ii-1-22
10:41:22 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:41:22 clsMysql - Parameter: ii-1-26
10:41:22 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:41:22 clsMysql - Parameter: ii-1-30
10:41:22 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:41:22 clsMysql - Parameter: ii-1-13
10:41:22 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:41:22 clsMysql - Parameter: ii-1-16
10:41:22 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:41:22 clsMysql - Parameter: ii-1-14
10:41:22 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:41:22 clsMysql - Parameter: ii-1-17
10:41:22 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:41:22 clsMysql - Parameter: ii-1-18
10:41:22 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:41:22 clsMysql - Parameter: ii-1-11
10:41:22 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:41:22 clsMysql - Parameter: ii-1-12
10:41:22 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:41:22 clsMysql - Parameter: ii-1-15
10:41:22 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:41:22 clsMysql - Parameter: ii-1-19
10:41:22 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:41:22 clsMysql - Parameter: ii-1-4
10:41:22 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:41:22 clsMysql - Parameter: ii-1-5
10:41:22 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:41:22 clsMysql - Parameter: ii-1-6
10:41:22 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:41:22 clsMysql - Parameter: ii-1-7
10:41:22 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:41:22 clsMysql - Parameter: ii-1-8
10:41:22 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:22 clsMysql - Parameter: i-1
10:41:22 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:41:22 clsMysql - Parameter: ii-1-1
10:41:22 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:41:22 clsMysql - Parameter: i-8
10:41:22 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:41:22 clsMysql - Parameter: i-9
10:41:22 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:41:22 clsMysql - Parameter: i-1
10:41:22 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:41:22 clsMysql - Parameter: i--1
10:41:22 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:41:22 clsMysql - Parameter: ii-1-1
10:41:22 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:22 clsMysql - Parameter: i-
10:41:22 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:22 clsMysql - Parameter: i-
10:41:22 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:22 clsMysql - Parameter: i-
10:41:22 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:22 clsMysql - Parameter: i-
10:41:22 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:22 clsMysql - Parameter: i-
10:41:28 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:28 clsMysql - Parameter: i-1
10:41:28 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:41:28 clsMysql - Parameter: i-200
10:41:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:30 clsMysql - Parameter: i-1
10:41:30 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
10:41:30 clsMysql - Parameter: ii-1-200
10:41:30 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
10:41:30 clsMysql - Parameter: ii-1-200
10:41:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:30 clsMysql - Parameter: i-1
10:41:30 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:41:30 clsMysql - Parameter: ii-1-1
10:41:30 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:41:30 clsMysql - Parameter: i-32
10:41:30 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:41:30 clsMysql - Parameter: i-20
10:41:30 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:41:30 clsMysql - Parameter: i-1
10:41:30 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:41:30 clsMysql - Parameter: i--1
10:41:30 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:41:30 clsMysql - Parameter: ii-1-1
10:41:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:30 clsMysql - Parameter: i-
10:41:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:30 clsMysql - Parameter: i-
10:41:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:30 clsMysql - Parameter: i-
10:41:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:30 clsMysql - Parameter: i-
10:41:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:30 clsMysql - Parameter: i-
10:41:37 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:41:37 clsMysql - Parameter: i-1
10:41:37 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:41:37 clsMysql - Parameter: i-580
10:42:03 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:42:03 clsMysql - Parameter: i-1
10:42:03 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
10:42:03 clsMysql - Parameter: ii-1-580
10:42:03 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
10:42:03 clsMysql - Parameter: ii-1-580
10:42:03 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:42:03 clsMysql - Parameter: i-1
10:42:03 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:42:03 clsMysql - Parameter: ii-1-1
10:42:03 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:42:03 clsMysql - Parameter: i-22
10:42:03 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:42:03 clsMysql - Parameter: i-20
10:42:03 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:42:03 clsMysql - Parameter: i-1
10:42:03 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:42:03 clsMysql - Parameter: i--1
10:42:03 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:42:03 clsMysql - Parameter: ii-1-1
10:42:03 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:42:03 clsMysql - Parameter: i-
10:42:03 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:42:03 clsMysql - Parameter: i-
10:42:03 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:42:03 clsMysql - Parameter: i-
10:42:03 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:42:03 clsMysql - Parameter: i-
10:42:03 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:42:03 clsMysql - Parameter: i-
10:42:10 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:42:10 clsMysql - Parameter: i-1
10:42:10 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:42:10 clsMysql - Parameter: i-460
10:42:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:42:29 clsMysql - Parameter: i-1
10:42:29 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
10:42:29 clsMysql - Parameter: ii-1-460
10:42:29 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
10:42:29 clsMysql - Parameter: ii-1-460
10:42:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:42:29 clsMysql - Parameter: i-1
10:42:29 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:42:29 clsMysql - Parameter: ii-1-1
10:42:29 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:42:29 clsMysql - Parameter: i-16
10:42:29 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:42:29 clsMysql - Parameter: i-10
10:42:29 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:42:29 clsMysql - Parameter: i-1
10:42:29 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:42:29 clsMysql - Parameter: i--1
10:42:29 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:42:29 clsMysql - Parameter: ii-1-1
10:42:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:42:29 clsMysql - Parameter: i-
10:42:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:42:29 clsMysql - Parameter: i-
10:42:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:42:29 clsMysql - Parameter: i-
10:42:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:42:29 clsMysql - Parameter: i-
10:42:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:42:29 clsMysql - Parameter: i-
10:42:31 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:42:31 clsMysql - Parameter: i-1
10:42:31 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:42:31 clsMysql - Parameter: i-309
10:42:37 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:42:37 clsMysql - Parameter: i-1
10:42:37 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
10:42:37 clsMysql - Parameter: ii-1-309
10:42:37 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
10:42:37 clsMysql - Parameter: ii-1-309
10:42:37 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:42:37 clsMysql - Parameter: i-1
10:42:37 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:42:37 clsMysql - Parameter: ii-1-1
10:42:37 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:42:37 clsMysql - Parameter: i-12
10:42:37 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:42:37 clsMysql - Parameter: i-10
10:42:37 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:42:37 clsMysql - Parameter: i-1
10:42:37 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:42:37 clsMysql - Parameter: i--1
10:42:37 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:42:37 clsMysql - Parameter: ii-1-1
10:42:37 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:42:37 clsMysql - Parameter: i-
10:42:37 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:42:37 clsMysql - Parameter: i-
10:42:37 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:42:37 clsMysql - Parameter: i-
10:42:37 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:42:37 clsMysql - Parameter: i-
10:42:37 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:42:37 clsMysql - Parameter: i-
10:42:54 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:42:54 clsMysql - Parameter: i-1
10:42:54 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:42:54 clsMysql - Parameter: i-220
10:43:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:00 clsMysql - Parameter: i-1
10:43:00 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
10:43:00 clsMysql - Parameter: ii-1-220
10:43:00 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
10:43:00 clsMysql - Parameter: ii-1-220
10:43:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:00 clsMysql - Parameter: i-1
10:43:00 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:43:00 clsMysql - Parameter: ii-1-1
10:43:00 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:43:00 clsMysql - Parameter: i-22
10:43:00 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:43:00 clsMysql - Parameter: i-20
10:43:00 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:43:00 clsMysql - Parameter: i-1
10:43:00 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:43:00 clsMysql - Parameter: i--1
10:43:00 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:43:00 clsMysql - Parameter: ii-1-1
10:43:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:00 clsMysql - Parameter: i-
10:43:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:00 clsMysql - Parameter: i-
10:43:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:00 clsMysql - Parameter: i-
10:43:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:00 clsMysql - Parameter: i-
10:43:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:00 clsMysql - Parameter: i-
10:43:06 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:06 clsMysql - Parameter: i-1
10:43:06 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:43:06 clsMysql - Parameter: i-469
10:43:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:12 clsMysql - Parameter: i-1
10:43:12 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
10:43:12 clsMysql - Parameter: ii-1-469
10:43:12 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
10:43:12 clsMysql - Parameter: ii-1-469
10:43:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:12 clsMysql - Parameter: i-1
10:43:12 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:43:12 clsMysql - Parameter: ii-1-1
10:43:12 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:43:12 clsMysql - Parameter: i-19
10:43:12 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:43:12 clsMysql - Parameter: i-10
10:43:12 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:43:12 clsMysql - Parameter: i-1
10:43:12 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:43:12 clsMysql - Parameter: i--1
10:43:12 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:43:12 clsMysql - Parameter: ii-1-1
10:43:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:12 clsMysql - Parameter: i-
10:43:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:12 clsMysql - Parameter: i-
10:43:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:12 clsMysql - Parameter: i-
10:43:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:12 clsMysql - Parameter: i-
10:43:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:12 clsMysql - Parameter: i-
10:43:16 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:16 clsMysql - Parameter: i-1
10:43:16 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:43:16 clsMysql - Parameter: i-393
10:43:37 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:37 clsMysql - Parameter: i-1
10:43:37 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
10:43:37 clsMysql - Parameter: ii-1-393
10:43:37 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
10:43:37 clsMysql - Parameter: ii-1-393
10:43:37 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:37 clsMysql - Parameter: i-1
10:43:37 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:43:37 clsMysql - Parameter: ii-1-1
10:43:37 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:43:37 clsMysql - Parameter: i-6
10:43:37 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:43:37 clsMysql - Parameter: i-9
10:43:37 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:43:37 clsMysql - Parameter: i-1
10:43:37 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:43:37 clsMysql - Parameter: i--1
10:43:37 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:43:37 clsMysql - Parameter: ii-1-1
10:43:37 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:37 clsMysql - Parameter: i-
10:43:37 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:37 clsMysql - Parameter: i-
10:43:37 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:37 clsMysql - Parameter: i-
10:43:37 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:37 clsMysql - Parameter: i-
10:43:37 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:37 clsMysql - Parameter: i-
10:43:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:47 clsMysql - Parameter: i-1
10:43:47 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:43:47 clsMysql - Parameter: i-134
10:43:54 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:54 clsMysql - Parameter: i-1
10:43:54 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
10:43:54 clsMysql - Parameter: ii-1-134
10:43:54 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
10:43:54 clsMysql - Parameter: ii-1-134
10:43:54 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:54 clsMysql - Parameter: i-1
10:43:54 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:43:54 clsMysql - Parameter: ii-1-1
10:43:54 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:43:54 clsMysql - Parameter: i-18
10:43:54 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:43:54 clsMysql - Parameter: i-10
10:43:54 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:43:54 clsMysql - Parameter: i-1
10:43:54 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:43:54 clsMysql - Parameter: i--1
10:43:54 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:43:54 clsMysql - Parameter: ii-1-1
10:43:54 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:54 clsMysql - Parameter: i-
10:43:54 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:54 clsMysql - Parameter: i-
10:43:54 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:54 clsMysql - Parameter: i-
10:43:54 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:54 clsMysql - Parameter: i-
10:43:54 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:43:54 clsMysql - Parameter: i-
10:44:01 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:01 clsMysql - Parameter: i-1
10:44:02 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:44:02 clsMysql - Parameter: i-349
10:44:11 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:11 clsMysql - Parameter: i-1
10:44:11 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
10:44:11 clsMysql - Parameter: ii-1-349
10:44:11 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
10:44:11 clsMysql - Parameter: ii-1-349
10:44:11 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:11 clsMysql - Parameter: i-1
10:44:11 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:44:11 clsMysql - Parameter: ii-1-1
10:44:11 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:44:11 clsMysql - Parameter: i-7
10:44:11 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:44:11 clsMysql - Parameter: i-9
10:44:11 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:44:11 clsMysql - Parameter: i-1
10:44:11 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:44:11 clsMysql - Parameter: i--1
10:44:11 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:44:11 clsMysql - Parameter: ii-1-1
10:44:11 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:11 clsMysql - Parameter: i-
10:44:11 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:11 clsMysql - Parameter: i-
10:44:11 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:11 clsMysql - Parameter: i-
10:44:11 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:11 clsMysql - Parameter: i-
10:44:11 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:11 clsMysql - Parameter: i-
10:44:24 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:24 clsMysql - Parameter: i-1
10:44:24 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:44:24 clsMysql - Parameter: i-166
10:44:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:26 clsMysql - Parameter: i-1
10:44:26 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
10:44:26 clsMysql - Parameter: ii-1-166
10:44:26 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
10:44:26 clsMysql - Parameter: ii-1-166
10:44:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:26 clsMysql - Parameter: i-1
10:44:26 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:44:26 clsMysql - Parameter: ii-1-1
10:44:26 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:44:26 clsMysql - Parameter: i-23
10:44:26 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:44:26 clsMysql - Parameter: i-20
10:44:26 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:44:26 clsMysql - Parameter: i-1
10:44:26 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:44:26 clsMysql - Parameter: i--1
10:44:26 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:44:26 clsMysql - Parameter: ii-1-1
10:44:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:26 clsMysql - Parameter: i-
10:44:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:26 clsMysql - Parameter: i-
10:44:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:26 clsMysql - Parameter: i-
10:44:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:26 clsMysql - Parameter: i-
10:44:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:26 clsMysql - Parameter: i-
10:44:37 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:37 clsMysql - Parameter: i-1
10:44:37 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:44:37 clsMysql - Parameter: i-483
10:44:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:59 clsMysql - Parameter: i-1
10:44:59 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
10:44:59 clsMysql - Parameter: ii-1-483
10:44:59 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
10:44:59 clsMysql - Parameter: ii-1-483
10:44:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:59 clsMysql - Parameter: i-1
10:44:59 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:44:59 clsMysql - Parameter: ii-1-1
10:44:59 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:44:59 clsMysql - Parameter: i-6
10:44:59 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:44:59 clsMysql - Parameter: i-9
10:44:59 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:44:59 clsMysql - Parameter: i-1
10:44:59 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:44:59 clsMysql - Parameter: i--1
10:44:59 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:44:59 clsMysql - Parameter: ii-1-1
10:44:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:59 clsMysql - Parameter: i-
10:44:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:59 clsMysql - Parameter: i-
10:44:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:59 clsMysql - Parameter: i-
10:44:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:59 clsMysql - Parameter: i-
10:44:59 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:44:59 clsMysql - Parameter: i-
10:45:15 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:15 clsMysql - Parameter: i-1
10:45:15 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:45:15 clsMysql - Parameter: i-120
10:45:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:26 clsMysql - Parameter: i-1
10:45:26 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
10:45:26 clsMysql - Parameter: ii-1-120
10:45:26 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
10:45:26 clsMysql - Parameter: ii-1-120
10:45:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:26 clsMysql - Parameter: i-1
10:45:26 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:45:26 clsMysql - Parameter: ii-1-1
10:45:26 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:45:26 clsMysql - Parameter: i-18
10:45:26 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:45:26 clsMysql - Parameter: i-10
10:45:26 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:45:26 clsMysql - Parameter: i-1
10:45:26 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:45:26 clsMysql - Parameter: i--1
10:45:26 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:45:26 clsMysql - Parameter: ii-1-1
10:45:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:26 clsMysql - Parameter: i-
10:45:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:26 clsMysql - Parameter: i-
10:45:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:26 clsMysql - Parameter: i-
10:45:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:26 clsMysql - Parameter: i-
10:45:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:26 clsMysql - Parameter: i-
10:45:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:34 clsMysql - Parameter: i-1
10:45:34 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:45:34 clsMysql - Parameter: i-359
10:45:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:38 clsMysql - Parameter: i-1
10:45:38 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
10:45:38 clsMysql - Parameter: ii-1-359
10:45:38 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
10:45:38 clsMysql - Parameter: ii-1-359
10:45:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:38 clsMysql - Parameter: i-1
10:45:38 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:45:38 clsMysql - Parameter: ii-1-1
10:45:38 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:45:38 clsMysql - Parameter: i-15
10:45:38 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:45:38 clsMysql - Parameter: i-10
10:45:38 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:45:38 clsMysql - Parameter: i-1
10:45:38 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:45:38 clsMysql - Parameter: i--1
10:45:38 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:45:38 clsMysql - Parameter: ii-1-1
10:45:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:38 clsMysql - Parameter: i-
10:45:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:38 clsMysql - Parameter: i-
10:45:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:38 clsMysql - Parameter: i-
10:45:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:38 clsMysql - Parameter: i-
10:45:38 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:38 clsMysql - Parameter: i-
10:45:41 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:41 clsMysql - Parameter: i-1
10:45:41 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:45:41 clsMysql - Parameter: i-275
10:45:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:43 clsMysql - Parameter: i-1
10:45:43 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
10:45:43 clsMysql - Parameter: ii-1-275
10:45:43 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
10:45:43 clsMysql - Parameter: ii-1-275
10:45:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:43 clsMysql - Parameter: i-1
10:45:43 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:45:43 clsMysql - Parameter: ii-1-1
10:45:44 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:45:44 clsMysql - Parameter: i-19
10:45:44 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:45:44 clsMysql - Parameter: i-10
10:45:44 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:45:44 clsMysql - Parameter: i-1
10:45:44 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:45:44 clsMysql - Parameter: i--1
10:45:44 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:45:44 clsMysql - Parameter: ii-1-1
10:45:44 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:44 clsMysql - Parameter: i-
10:45:44 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:44 clsMysql - Parameter: i-
10:45:44 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:44 clsMysql - Parameter: i-
10:45:44 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:44 clsMysql - Parameter: i-
10:45:44 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:44 clsMysql - Parameter: i-
10:45:54 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:45:54 clsMysql - Parameter: i-1
10:45:54 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:45:54 clsMysql - Parameter: i-419
10:46:08 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:46:08 clsMysql - Parameter: i-1
10:46:08 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
10:46:08 clsMysql - Parameter: ii-1-419
10:46:08 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
10:46:08 clsMysql - Parameter: ii-1-419
10:46:08 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:46:08 clsMysql - Parameter: i-1
10:46:08 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:46:08 clsMysql - Parameter: ii-1-1
10:46:08 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:46:08 clsMysql - Parameter: i-15
10:46:08 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:46:08 clsMysql - Parameter: i-10
10:46:08 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:46:08 clsMysql - Parameter: i-1
10:46:08 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:46:08 clsMysql - Parameter: i--1
10:46:08 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:46:08 clsMysql - Parameter: ii-1-1
10:46:08 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:46:08 clsMysql - Parameter: i-
10:46:08 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:46:08 clsMysql - Parameter: i-
10:46:08 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:46:08 clsMysql - Parameter: i-
10:46:08 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:46:08 clsMysql - Parameter: i-
10:46:08 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:46:08 clsMysql - Parameter: i-
10:46:11 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:46:11 clsMysql - Parameter: i-1
10:46:11 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:46:11 clsMysql - Parameter: i-256
10:46:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:46:20 clsMysql - Parameter: i-1
10:46:20 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
10:46:20 clsMysql - Parameter: ii-1-256
10:46:20 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
10:46:20 clsMysql - Parameter: ii-1-256
10:46:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:46:20 clsMysql - Parameter: i-1
10:46:20 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:46:20 clsMysql - Parameter: ii-1-1
10:46:20 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:46:20 clsMysql - Parameter: i-30
10:46:20 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:46:20 clsMysql - Parameter: i-20
10:46:20 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:46:20 clsMysql - Parameter: i-1
10:46:20 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:46:20 clsMysql - Parameter: i--1
10:46:20 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:46:20 clsMysql - Parameter: ii-1-1
10:46:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:46:20 clsMysql - Parameter: i-
10:46:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:46:20 clsMysql - Parameter: i-
10:46:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:46:20 clsMysql - Parameter: i-
10:46:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:46:20 clsMysql - Parameter: i-
10:46:20 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:46:20 clsMysql - Parameter: i-
10:46:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:46:57 clsMysql - Parameter: i-1
10:46:57 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:46:57 clsMysql - Parameter: i-558
10:49:11 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:49:11 clsMysql - Parameter: i-1
10:49:11 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
10:49:11 clsMysql - Parameter: ii-1-558
10:49:11 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
10:49:11 clsMysql - Parameter: ii-1-558
10:49:11 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:49:11 clsMysql - Parameter: i-1
10:49:11 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:49:11 clsMysql - Parameter: ii-1-1
10:49:12 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:49:12 clsMysql - Parameter: i-7
10:49:12 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:49:12 clsMysql - Parameter: i-9
10:49:12 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:49:12 clsMysql - Parameter: i-1
10:49:12 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:49:12 clsMysql - Parameter: i--1
10:49:12 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:49:12 clsMysql - Parameter: ii-1-1
10:49:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:49:12 clsMysql - Parameter: i-
10:49:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:49:12 clsMysql - Parameter: i-
10:49:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:49:12 clsMysql - Parameter: i-
10:49:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:49:12 clsMysql - Parameter: i-
10:49:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:49:12 clsMysql - Parameter: i-
10:49:22 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:49:22 clsMysql - Parameter: i-1
10:49:22 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:49:22 clsMysql - Parameter: i-161
10:49:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:49:29 clsMysql - Parameter: i-1
10:49:29 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
10:49:29 clsMysql - Parameter: ii-1-161
10:49:29 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
10:49:29 clsMysql - Parameter: ii-1-161
10:49:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:49:29 clsMysql - Parameter: i-1
10:49:29 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:49:29 clsMysql - Parameter: ii-1-1
10:49:29 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:49:29 clsMysql - Parameter: i-16
10:49:29 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:49:29 clsMysql - Parameter: i-10
10:49:29 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:49:29 clsMysql - Parameter: i-1
10:49:29 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:49:29 clsMysql - Parameter: i--1
10:49:29 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:49:29 clsMysql - Parameter: ii-1-1
10:49:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:49:29 clsMysql - Parameter: i-
10:49:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:49:30 clsMysql - Parameter: i-
10:49:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:49:30 clsMysql - Parameter: i-
10:49:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:49:30 clsMysql - Parameter: i-
10:49:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:49:30 clsMysql - Parameter: i-
10:49:33 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:49:33 clsMysql - Parameter: i-1
10:49:33 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:49:33 clsMysql - Parameter: i-294
10:49:36 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:49:36 clsMysql - Parameter: i-1
10:49:36 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
10:49:36 clsMysql - Parameter: ii-1-294
10:49:36 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
10:49:36 clsMysql - Parameter: ii-1-294
10:49:36 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:49:36 clsMysql - Parameter: i-1
10:49:36 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:49:36 clsMysql - Parameter: ii-1-1
10:49:36 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:49:36 clsMysql - Parameter: i-28
10:49:36 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:49:36 clsMysql - Parameter: i-20
10:49:36 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:49:36 clsMysql - Parameter: i-1
10:49:36 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:49:36 clsMysql - Parameter: i--1
10:49:36 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:49:36 clsMysql - Parameter: ii-1-1
10:49:36 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:49:36 clsMysql - Parameter: i-
10:49:36 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:49:36 clsMysql - Parameter: i-
10:49:36 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:49:36 clsMysql - Parameter: i-
10:49:36 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:49:36 clsMysql - Parameter: i-
10:49:36 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:49:36 clsMysql - Parameter: i-
10:49:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:49:47 clsMysql - Parameter: i-1
10:49:47 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:49:47 clsMysql - Parameter: i-541
10:49:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:49:57 clsMysql - Parameter: i-1
10:49:57 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
10:49:57 clsMysql - Parameter: ii-1-541
10:49:57 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
10:49:57 clsMysql - Parameter: ii-1-541
10:49:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:49:57 clsMysql - Parameter: i-1
10:49:57 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:49:57 clsMysql - Parameter: ii-1-1
10:49:57 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:49:57 clsMysql - Parameter: i-4
10:49:57 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:49:57 clsMysql - Parameter: i-9
10:49:57 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:49:57 clsMysql - Parameter: i-1
10:49:57 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:49:57 clsMysql - Parameter: i--1
10:49:57 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:49:57 clsMysql - Parameter: ii-1-1
10:49:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:49:57 clsMysql - Parameter: i-
10:49:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:49:57 clsMysql - Parameter: i-
10:49:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:49:57 clsMysql - Parameter: i-
10:49:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:49:57 clsMysql - Parameter: i-
10:49:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:49:57 clsMysql - Parameter: i-
10:50:04 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:50:04 clsMysql - Parameter: i-1
10:50:04 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte
10:50:04 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM kategorie
10:50:04 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE())
10:50:04 clsMysql - Parameter: i-1
10:50:04 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 1 DAY))
10:50:04 clsMysql - Parameter: i-1
10:50:04 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 2 DAY))
10:50:04 clsMysql - Parameter: i-1
10:50:04 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM fortschritt WHERE benutzer_id = ? AND YEAR(idate) = YEAR(CURDATE())
10:50:04 clsMysql - Parameter: i-1
10:50:04 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 1
10:50:04 clsMysql - Parameter: i-1
10:50:04 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 0
10:50:04 clsMysql - Parameter: i-1
10:50:04 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte where todo = 1
10:50:04 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM kategorie inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:50:04 clsMysql - Parameter: i-1
10:50:04 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:50:04 clsMysql - Parameter: i-
10:50:04 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:50:04 clsMysql - Parameter: i-
10:50:04 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:50:04 clsMysql - Parameter: i-
10:50:04 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:50:04 clsMysql - Parameter: i-
10:50:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:50:49 clsMysql - Parameter: i-1
10:50:49 clsMysql - Debug - Statement: SELECT DISTINCT id, name FROM benutzerset where benutzer_id = ? ORDER BY name
10:50:49 clsMysql - Parameter: i-1
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where parent_id = -1 GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-2
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-35
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-34
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-36
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-37
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-38
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-39
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-40
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-41
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-43
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-44
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-45
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-46
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-42
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-47
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-3
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-48
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-49
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-50
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-52
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-51
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-53
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-1
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-20
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-31
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-32
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-23
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-27
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-28
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-29
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-21
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-22
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-26
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-30
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-10
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-13
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-16
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-14
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-17
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-18
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-11
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-12
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-15
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-19
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-9
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-4
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-5
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-6
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-7
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-8
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-25
10:50:49 clsMysql - Debug - Statement: SELECT kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id, count(karte.id) as karten FROM kategorie left join karte on karte.kategorie_id = kategorie.id left join benutzer2kategorie on kategorie.id = benutzer2kategorie.kategorie_id where kategorie.parent_id = ? GROUP BY kategorie.id, kategorie.name, benutzer2kategorie.kategorie_id order by name
10:50:49 clsMysql - Parameter: i-24
10:50:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:50:49 clsMysql - Parameter: i-
10:50:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:50:49 clsMysql - Parameter: i-
10:50:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:50:49 clsMysql - Parameter: i-
10:50:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:50:49 clsMysql - Parameter: i-
10:50:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:50:49 clsMysql - Parameter: i-
10:50:51 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:50:51 clsMysql - Parameter: i-1
10:50:51 clsMysql - Debug - Statement: DELETE FROM benutzer2kategorie where benutzer_id = ?
10:50:51 clsMysql - Parameter: i-1
10:50:51 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:50:51 clsMysql - Parameter: ii-1-31
10:50:51 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:50:51 clsMysql - Parameter: ii-1-32
10:50:51 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:50:51 clsMysql - Parameter: ii-1-23
10:50:51 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:50:51 clsMysql - Parameter: ii-1-27
10:50:51 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:50:51 clsMysql - Parameter: ii-1-28
10:50:51 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:50:51 clsMysql - Parameter: ii-1-29
10:50:51 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:50:51 clsMysql - Parameter: ii-1-21
10:50:51 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:50:51 clsMysql - Parameter: ii-1-22
10:50:51 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:50:51 clsMysql - Parameter: ii-1-26
10:50:51 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:50:51 clsMysql - Parameter: ii-1-30
10:50:51 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:50:51 clsMysql - Parameter: ii-1-13
10:50:51 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:50:51 clsMysql - Parameter: ii-1-16
10:50:51 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:50:51 clsMysql - Parameter: ii-1-14
10:50:52 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:50:52 clsMysql - Parameter: ii-1-17
10:50:52 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:50:52 clsMysql - Parameter: ii-1-18
10:50:52 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:50:52 clsMysql - Parameter: ii-1-11
10:50:52 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:50:52 clsMysql - Parameter: ii-1-12
10:50:52 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:50:52 clsMysql - Parameter: ii-1-15
10:50:52 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:50:52 clsMysql - Parameter: ii-1-19
10:50:52 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:50:52 clsMysql - Parameter: ii-1-4
10:50:52 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:50:52 clsMysql - Parameter: ii-1-5
10:50:52 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:50:52 clsMysql - Parameter: ii-1-6
10:50:52 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:50:52 clsMysql - Parameter: ii-1-7
10:50:52 clsMysql - Debug - Statement: INSERT INTO benutzer2kategorie (benutzer_id, kategorie_id) VALUES (?, ?)
10:50:52 clsMysql - Parameter: ii-1-8
10:50:52 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:50:52 clsMysql - Parameter: i-1
10:50:52 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:50:52 clsMysql - Parameter: ii-1-1
10:50:52 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:50:52 clsMysql - Parameter: i-16
10:50:52 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:50:52 clsMysql - Parameter: i-10
10:50:52 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:50:52 clsMysql - Parameter: i-1
10:50:52 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:50:52 clsMysql - Parameter: i--1
10:50:52 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:50:52 clsMysql - Parameter: ii-1-1
10:50:52 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:50:52 clsMysql - Parameter: i-
10:50:52 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:50:52 clsMysql - Parameter: i-
10:50:52 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:50:52 clsMysql - Parameter: i-
10:50:52 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:50:52 clsMysql - Parameter: i-
10:50:52 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:50:52 clsMysql - Parameter: i-
10:50:58 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:50:58 clsMysql - Parameter: i-1
10:50:58 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:50:58 clsMysql - Parameter: i-289
10:51:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:51:07 clsMysql - Parameter: i-1
10:51:07 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
10:51:07 clsMysql - Parameter: ii-1-289
10:51:07 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
10:51:07 clsMysql - Parameter: ii-1-289
10:51:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:51:07 clsMysql - Parameter: i-1
10:51:07 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:51:07 clsMysql - Parameter: ii-1-1
10:51:07 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:51:07 clsMysql - Parameter: i-5
10:51:07 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:51:07 clsMysql - Parameter: i-9
10:51:07 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:51:07 clsMysql - Parameter: i-1
10:51:07 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:51:07 clsMysql - Parameter: i--1
10:51:07 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:51:07 clsMysql - Parameter: ii-1-1
10:51:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:51:07 clsMysql - Parameter: i-
10:51:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:51:07 clsMysql - Parameter: i-
10:51:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:51:07 clsMysql - Parameter: i-
10:51:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:51:07 clsMysql - Parameter: i-
10:51:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:51:07 clsMysql - Parameter: i-
10:51:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:51:13 clsMysql - Parameter: i-1
10:51:13 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:51:13 clsMysql - Parameter: i-82
10:51:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:51:18 clsMysql - Parameter: i-1
10:51:18 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
10:51:18 clsMysql - Parameter: ii-1-82
10:51:18 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
10:51:18 clsMysql - Parameter: ii-1-82
10:51:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:51:18 clsMysql - Parameter: i-1
10:51:18 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:51:18 clsMysql - Parameter: ii-1-1
10:51:18 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:51:18 clsMysql - Parameter: i-8
10:51:18 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:51:18 clsMysql - Parameter: i-9
10:51:18 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:51:18 clsMysql - Parameter: i-1
10:51:18 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:51:18 clsMysql - Parameter: i--1
10:51:18 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:51:18 clsMysql - Parameter: ii-1-1
10:51:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:51:18 clsMysql - Parameter: i-
10:51:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:51:18 clsMysql - Parameter: i-
10:51:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:51:18 clsMysql - Parameter: i-
10:51:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:51:18 clsMysql - Parameter: i-
10:51:18 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:51:18 clsMysql - Parameter: i-
10:51:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:51:30 clsMysql - Parameter: i-1
10:51:30 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:51:30 clsMysql - Parameter: i-184
10:51:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:51:34 clsMysql - Parameter: i-1
10:51:34 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
10:51:34 clsMysql - Parameter: ii-1-184
10:51:34 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
10:51:34 clsMysql - Parameter: ii-1-184
10:51:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:51:34 clsMysql - Parameter: i-1
10:51:34 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:51:34 clsMysql - Parameter: ii-1-1
10:51:34 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:51:34 clsMysql - Parameter: i-19
10:51:34 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:51:34 clsMysql - Parameter: i-10
10:51:34 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:51:34 clsMysql - Parameter: i-1
10:51:34 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:51:34 clsMysql - Parameter: i--1
10:51:34 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:51:34 clsMysql - Parameter: ii-1-1
10:51:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:51:34 clsMysql - Parameter: i-
10:51:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:51:34 clsMysql - Parameter: i-
10:51:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:51:34 clsMysql - Parameter: i-
10:51:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:51:34 clsMysql - Parameter: i-
10:51:34 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:51:34 clsMysql - Parameter: i-
10:51:37 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:51:37 clsMysql - Parameter: i-1
10:51:37 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:51:37 clsMysql - Parameter: i-406
10:51:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:51:43 clsMysql - Parameter: i-1
10:51:43 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
10:51:43 clsMysql - Parameter: ii-1-406
10:51:43 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
10:51:43 clsMysql - Parameter: ii-1-406
10:51:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:51:43 clsMysql - Parameter: i-1
10:51:43 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:51:43 clsMysql - Parameter: ii-1-1
10:51:43 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:51:43 clsMysql - Parameter: i-32
10:51:43 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:51:43 clsMysql - Parameter: i-20
10:51:43 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:51:43 clsMysql - Parameter: i-1
10:51:43 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:51:43 clsMysql - Parameter: i--1
10:51:43 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:51:43 clsMysql - Parameter: ii-1-1
10:51:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:51:43 clsMysql - Parameter: i-
10:51:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:51:43 clsMysql - Parameter: i-
10:51:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:51:43 clsMysql - Parameter: i-
10:51:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:51:43 clsMysql - Parameter: i-
10:51:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:51:43 clsMysql - Parameter: i-
10:51:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:51:53 clsMysql - Parameter: i-1
10:51:53 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:51:53 clsMysql - Parameter: i-598
10:52:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:52:02 clsMysql - Parameter: i-1
10:52:02 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
10:52:02 clsMysql - Parameter: ii-1-598
10:52:02 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
10:52:02 clsMysql - Parameter: ii-1-598
10:52:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:52:02 clsMysql - Parameter: i-1
10:52:02 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:52:02 clsMysql - Parameter: ii-1-1
10:52:02 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:52:02 clsMysql - Parameter: i-15
10:52:02 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:52:02 clsMysql - Parameter: i-10
10:52:02 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:52:02 clsMysql - Parameter: i-1
10:52:02 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:52:02 clsMysql - Parameter: i--1
10:52:02 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:52:02 clsMysql - Parameter: ii-1-1
10:52:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:52:02 clsMysql - Parameter: i-
10:52:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:52:02 clsMysql - Parameter: i-
10:52:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:52:02 clsMysql - Parameter: i-
10:52:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:52:02 clsMysql - Parameter: i-
10:52:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:52:02 clsMysql - Parameter: i-
10:52:07 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:52:07 clsMysql - Parameter: i-1
10:52:07 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:52:07 clsMysql - Parameter: i-262
10:52:12 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:52:12 clsMysql - Parameter: i-1
10:52:12 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
10:52:12 clsMysql - Parameter: ii-1-262
10:52:12 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
10:52:12 clsMysql - Parameter: ii-1-262
10:52:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:52:13 clsMysql - Parameter: i-1
10:52:13 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:52:13 clsMysql - Parameter: ii-1-1
10:52:13 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:52:13 clsMysql - Parameter: i-4
10:52:13 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:52:13 clsMysql - Parameter: i-9
10:52:13 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:52:13 clsMysql - Parameter: i-1
10:52:13 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:52:13 clsMysql - Parameter: i--1
10:52:13 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:52:13 clsMysql - Parameter: ii-1-1
10:52:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:52:13 clsMysql - Parameter: i-
10:52:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:52:13 clsMysql - Parameter: i-
10:52:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:52:13 clsMysql - Parameter: i-
10:52:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:52:13 clsMysql - Parameter: i-
10:52:13 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:52:13 clsMysql - Parameter: i-
10:52:35 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:52:35 clsMysql - Parameter: i-1
10:52:35 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:52:35 clsMysql - Parameter: i-14
10:52:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:52:53 clsMysql - Parameter: i-1
10:52:53 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
10:52:53 clsMysql - Parameter: ii-1-14
10:52:53 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
10:52:53 clsMysql - Parameter: ii-1-14
10:52:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:52:53 clsMysql - Parameter: i-1
10:52:53 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:52:53 clsMysql - Parameter: ii-1-1
10:52:53 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:52:53 clsMysql - Parameter: i-16
10:52:53 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:52:53 clsMysql - Parameter: i-10
10:52:53 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:52:53 clsMysql - Parameter: i-1
10:52:53 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:52:53 clsMysql - Parameter: i--1
10:52:53 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:52:53 clsMysql - Parameter: ii-1-1
10:52:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:52:53 clsMysql - Parameter: i-
10:52:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:52:53 clsMysql - Parameter: i-
10:52:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:52:53 clsMysql - Parameter: i-
10:52:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:52:53 clsMysql - Parameter: i-
10:52:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:52:53 clsMysql - Parameter: i-
10:52:56 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:52:56 clsMysql - Parameter: i-1
10:52:56 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:52:56 clsMysql - Parameter: i-290
10:53:01 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:53:01 clsMysql - Parameter: i-1
10:53:01 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
10:53:01 clsMysql - Parameter: ii-1-290
10:53:01 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
10:53:01 clsMysql - Parameter: ii-1-290
10:53:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:53:02 clsMysql - Parameter: i-1
10:53:02 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:53:02 clsMysql - Parameter: ii-1-1
10:53:02 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:53:02 clsMysql - Parameter: i-8
10:53:02 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:53:02 clsMysql - Parameter: i-9
10:53:02 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:53:02 clsMysql - Parameter: i-1
10:53:02 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:53:02 clsMysql - Parameter: i--1
10:53:02 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:53:02 clsMysql - Parameter: ii-1-1
10:53:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:53:02 clsMysql - Parameter: i-
10:53:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:53:02 clsMysql - Parameter: i-
10:53:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:53:02 clsMysql - Parameter: i-
10:53:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:53:02 clsMysql - Parameter: i-
10:53:02 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:53:02 clsMysql - Parameter: i-
10:53:19 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:53:19 clsMysql - Parameter: i-1
10:53:19 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:53:19 clsMysql - Parameter: i-176
10:53:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:53:29 clsMysql - Parameter: i-1
10:53:29 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
10:53:29 clsMysql - Parameter: ii-1-176
10:53:29 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
10:53:29 clsMysql - Parameter: ii-1-176
10:53:29 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:53:29 clsMysql - Parameter: i-1
10:53:29 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:53:29 clsMysql - Parameter: ii-1-1
10:53:29 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:53:29 clsMysql - Parameter: i-5
10:53:29 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:53:29 clsMysql - Parameter: i-9
10:53:29 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:53:29 clsMysql - Parameter: i-1
10:53:29 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:53:29 clsMysql - Parameter: i--1
10:53:29 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:53:29 clsMysql - Parameter: ii-1-1
10:53:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:53:30 clsMysql - Parameter: i-
10:53:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:53:30 clsMysql - Parameter: i-
10:53:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:53:30 clsMysql - Parameter: i-
10:53:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:53:30 clsMysql - Parameter: i-
10:53:30 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:53:30 clsMysql - Parameter: i-
10:53:47 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:53:47 clsMysql - Parameter: i-1
10:53:47 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:53:47 clsMysql - Parameter: i-93
10:53:51 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:53:51 clsMysql - Parameter: i-1
10:53:51 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
10:53:51 clsMysql - Parameter: ii-1-93
10:53:51 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
10:53:51 clsMysql - Parameter: ii-1-93
10:53:51 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:53:51 clsMysql - Parameter: i-1
10:53:51 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:53:51 clsMysql - Parameter: ii-1-1
10:53:51 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:53:51 clsMysql - Parameter: i-26
10:53:51 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:53:51 clsMysql - Parameter: i-20
10:53:51 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:53:51 clsMysql - Parameter: i-1
10:53:51 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:53:51 clsMysql - Parameter: i--1
10:53:51 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:53:51 clsMysql - Parameter: ii-1-1
10:53:51 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:53:51 clsMysql - Parameter: i-
10:53:51 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:53:51 clsMysql - Parameter: i-
10:53:51 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:53:51 clsMysql - Parameter: i-
10:53:51 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:53:51 clsMysql - Parameter: i-
10:53:51 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:53:51 clsMysql - Parameter: i-
10:54:31 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:54:31 clsMysql - Parameter: i-1
10:54:31 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:54:31 clsMysql - Parameter: i-502
10:54:39 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:54:39 clsMysql - Parameter: i-1
10:54:39 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
10:54:39 clsMysql - Parameter: ii-1-502
10:54:39 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
10:54:39 clsMysql - Parameter: ii-1-502
10:54:39 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:54:39 clsMysql - Parameter: i-1
10:54:39 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:54:39 clsMysql - Parameter: ii-1-1
10:54:39 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:54:39 clsMysql - Parameter: i-15
10:54:39 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:54:39 clsMysql - Parameter: i-10
10:54:39 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:54:39 clsMysql - Parameter: i-1
10:54:39 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:54:39 clsMysql - Parameter: i--1
10:54:39 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:54:39 clsMysql - Parameter: ii-1-1
10:54:39 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:54:39 clsMysql - Parameter: i-
10:54:39 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:54:39 clsMysql - Parameter: i-
10:54:39 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:54:39 clsMysql - Parameter: i-
10:54:39 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:54:39 clsMysql - Parameter: i-
10:54:39 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:54:39 clsMysql - Parameter: i-
10:54:43 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:54:43 clsMysql - Parameter: i-1
10:54:43 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:54:43 clsMysql - Parameter: i-260
10:54:48 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:54:48 clsMysql - Parameter: i-1
10:54:48 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
10:54:48 clsMysql - Parameter: ii-1-260
10:54:48 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
10:54:48 clsMysql - Parameter: ii-1-260
10:54:48 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:54:48 clsMysql - Parameter: i-1
10:54:48 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:54:48 clsMysql - Parameter: ii-1-1
10:54:48 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:54:48 clsMysql - Parameter: i-8
10:54:48 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:54:48 clsMysql - Parameter: i-9
10:54:48 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:54:48 clsMysql - Parameter: i-1
10:54:48 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:54:48 clsMysql - Parameter: i--1
10:54:48 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:54:48 clsMysql - Parameter: ii-1-1
10:54:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:54:49 clsMysql - Parameter: i-
10:54:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:54:49 clsMysql - Parameter: i-
10:54:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:54:49 clsMysql - Parameter: i-
10:54:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:54:49 clsMysql - Parameter: i-
10:54:49 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:54:49 clsMysql - Parameter: i-
10:54:53 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:54:53 clsMysql - Parameter: i-1
10:54:53 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:54:53 clsMysql - Parameter: i-185
10:54:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:54:57 clsMysql - Parameter: i-1
10:54:57 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
10:54:57 clsMysql - Parameter: ii-1-185
10:54:57 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
10:54:57 clsMysql - Parameter: ii-1-185
10:54:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:54:57 clsMysql - Parameter: i-1
10:54:57 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:54:57 clsMysql - Parameter: ii-1-1
10:54:57 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:54:57 clsMysql - Parameter: i-18
10:54:57 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:54:57 clsMysql - Parameter: i-10
10:54:57 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:54:57 clsMysql - Parameter: i-1
10:54:57 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:54:57 clsMysql - Parameter: i--1
10:54:57 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:54:57 clsMysql - Parameter: ii-1-1
10:54:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:54:57 clsMysql - Parameter: i-
10:54:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:54:57 clsMysql - Parameter: i-
10:54:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:54:57 clsMysql - Parameter: i-
10:54:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:54:57 clsMysql - Parameter: i-
10:54:57 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:54:57 clsMysql - Parameter: i-
10:55:00 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:55:00 clsMysql - Parameter: i-1
10:55:00 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:55:00 clsMysql - Parameter: i-376
10:55:04 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:55:04 clsMysql - Parameter: i-1
10:55:04 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
10:55:04 clsMysql - Parameter: ii-1-376
10:55:04 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
10:55:04 clsMysql - Parameter: ii-1-376
10:55:04 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:55:04 clsMysql - Parameter: i-1
10:55:04 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:55:04 clsMysql - Parameter: ii-1-1
10:55:04 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:55:04 clsMysql - Parameter: i-7
10:55:04 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:55:04 clsMysql - Parameter: i-9
10:55:04 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:55:04 clsMysql - Parameter: i-1
10:55:04 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:55:04 clsMysql - Parameter: i--1
10:55:04 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:55:04 clsMysql - Parameter: ii-1-1
10:55:04 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:55:04 clsMysql - Parameter: i-
10:55:04 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:55:04 clsMysql - Parameter: i-
10:55:04 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:55:04 clsMysql - Parameter: i-
10:55:04 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:55:04 clsMysql - Parameter: i-
10:55:04 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:55:04 clsMysql - Parameter: i-
10:55:19 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:55:19 clsMysql - Parameter: i-1
10:55:19 clsMysql - Debug - Statement: SELECT antwort FROM karte WHERE id = ?
10:55:19 clsMysql - Parameter: i-156
10:55:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:55:26 clsMysql - Parameter: i-1
10:55:26 clsMysql - Debug - Statement: INSERT INTO benutzer2karte (benutzer_id, karte_id, fortschritt, gewusst) VALUES(?, ?, 2, 1) ON DUPLICATE KEY UPDATE fortschritt = fortschritt + 1, gewusst = 1
10:55:26 clsMysql - Parameter: ii-1-156
10:55:26 clsMysql - Debug - Statement: INSERT INTO fortschritt (benutzer_id, karte_id, gewusst) VALUES(?, ?, 1)
10:55:26 clsMysql - Parameter: ii-1-156
10:55:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:55:26 clsMysql - Parameter: i-1
10:55:26 clsMysql - Debug - Statement: SELECT karte.id, karte.frage, karte.hinweis, karte.antwort, benutzer2karte.fortschritt, karte.kategorie_id 
						FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id
						inner join karte on kategorie.id = karte.kategorie_id 
						LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? 
						where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()) order by rand() LIMIT 1
10:55:26 clsMysql - Parameter: ii-1-1
10:55:26 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:55:26 clsMysql - Parameter: i-32
10:55:26 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:55:26 clsMysql - Parameter: i-20
10:55:26 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:55:26 clsMysql - Parameter: i-1
10:55:26 clsMysql - Debug - Statement: SELECT kategorie.name, kategorie.parent_id from kategorie where id = ?
10:55:26 clsMysql - Parameter: i--1
10:55:26 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? where benutzer2kategorie.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:55:26 clsMysql - Parameter: ii-1-1
10:55:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:55:26 clsMysql - Parameter: i-
10:55:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:55:26 clsMysql - Parameter: i-
10:55:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:55:26 clsMysql - Parameter: i-
10:55:26 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:55:26 clsMysql - Parameter: i-
10:55:27 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:55:27 clsMysql - Parameter: i-
10:55:31 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:55:31 clsMysql - Parameter: i-1
10:55:31 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte
10:55:31 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM kategorie
10:55:31 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE())
10:55:31 clsMysql - Parameter: i-1
10:55:31 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 1 DAY))
10:55:31 clsMysql - Parameter: i-1
10:55:31 clsMysql - Debug - Statement: SELECT COUNT(karte.id) as anzahl FROM benutzer2kategorie inner join kategorie on benutzer2kategorie.kategorie_id = kategorie.id inner join karte on kategorie.id = karte.kategorie_id left join benutzer2karte on benutzer2karte.karte_id = karte.id and benutzer2karte.benutzer_id = benutzer2kategorie.benutzer_id where benutzer2kategorie.benutzer_id = ? and (benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= DATE_ADD(CURDATE(), INTERVAL 2 DAY))
10:55:31 clsMysql - Parameter: i-1
10:55:31 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM fortschritt WHERE benutzer_id = ? AND YEAR(idate) = YEAR(CURDATE())
10:55:31 clsMysql - Parameter: i-1
10:55:31 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 1
10:55:31 clsMysql - Parameter: i-1
10:55:31 clsMysql - Debug - Statement: SELECT COUNT(benutzer_id) as anzahl FROM benutzer2karte where benutzer_id = ? and convert(datum, date) = CURDATE() and gewusst = 0
10:55:31 clsMysql - Parameter: i-1
10:55:31 clsMysql - Debug - Statement: SELECT COUNT(id) as anzahl FROM karte where todo = 1
10:55:31 clsMysql - Debug - Statement: SELECT benutzer2karte.fortschritt, count(karte.id) as anzahl, count(IF ((benutzer2karte.karte_id is null or convert(DATE_ADD(benutzer2karte.datum, INTERVAL benutzer2karte.fortschritt DAY), date) <= CURDATE()), karte.id, null)) as todo, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 1, karte.id, null)) as gewusst, count(IF(convert(benutzer2karte.datum, date)  = CURDATE() and benutzer2karte.gewusst = 0, karte.id, null)) as nichtgewusst FROM kategorie inner join karte on kategorie.id = karte.kategorie_id LEFT JOIN benutzer2karte on karte.id = benutzer2karte.karte_id and benutzer2karte.benutzer_id = ? GROUP BY benutzer2karte.fortschritt ORDER BY benutzer2karte.fortschritt
10:55:31 clsMysql - Parameter: i-1
10:55:31 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:55:31 clsMysql - Parameter: i-
10:55:31 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:55:31 clsMysql - Parameter: i-
10:55:31 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:55:31 clsMysql - Parameter: i-
10:55:31 clsMysql - Debug - Statement: SELECT id, name, idate FROM benutzer where id = ?
10:55:31 clsMysql - Parameter: i-
